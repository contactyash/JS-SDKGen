[
  {
    "type": "POST",
    "url": "/transfer-requests",
    "title": "Add funds request",
    "version": "0.2.0",
    "name": "AddFundsRequest",
    "group": "Assets",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "string",
            "optional": false,
            "field": "reference_id",
            "description": "<p>Reference id.</p>"
          },
          {
            "group": "Request formdata",
            "type": "file",
            "optional": false,
            "field": "paymentReceipt",
            "description": "<p>Payment reciept file.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  Success: \"true\",\n\tmessage:\"Request sent successfully\",\n  data:{\n\t\"_id\" : \"\",\n\t\"zoneId\" : \"\",\n\t\"reqUserId\" : \"\",\n\t\"reqOrgId\" : \"\",\n\t\"reqWalletAddress\" : \"\",\n\t\"referenceId\" : \"\",\n\t\"comdexWalletAddress\" : \"\",\n\t\"requestedAt\" : \"\",\n\t\"approvedAt\" : \"\",\n\t\"amount\" : \"\",\n\t\"paymentReceipt\" : {\n\t\t\"url\" : \"\",\n\t\t\"fileType\" : \"\",\n\t\t\"fileName\" : \"\",\n\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\")\n\t},\n\t\"requestType\" : \"\",\n\t\"status\" : \"\",\n\t\"comments\" : \"\",\n\t\"withDrawBankDetails\" : {\n\t\t\"nickName\" : \"\",\n\t\t\"beneficiaryBank\" : \" \",\n\t\t\"beneficiaryBankCountry\" : \"\",\n\t\t\"beneficiarySwift\" : \"\",\n\t\t\"beneficiaryBankAddress\" : \"\",\n\t\t\"beneficiaryBankZip\" : \"\",\n\t\t\"correspondenceBank\" : \"\",\n\t\t\"correspondenceSwift\" : \"\",\n\t\t\"accountNumber\" : \"\",\n\t\t\"accountHolderName\" : \"\",\n\t\t\"status\" : \"\"\n\t},\n\t\"approveTransactionReceipt\" : {\n\t\t\"url\" : \"\",\n\t\t\"fileType\" : \"\",\n\t\t\"fileName\" : \"\",\n\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\")\n\t}\n}\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>User not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting user details</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting user details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Reference id is mandatory\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding file\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Wallet not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization wallet address\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"You are not belongs to any comdex organization\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting zone admin details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Comdex Wallet not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting comdex asset address\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while adding funds\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/assets/controller/assets.go",
    "groupTitle": "Assets"
  },
  {
    "type": "POST",
    "url": "/wallets",
    "title": "Create Wallet",
    "version": "0.2.0",
    "name": "CreateWallet",
    "group": "Assets",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "name",
            "description": "<p>Name</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>Password</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Wallet created successfully'\n\tdata:{\n\t\t\t\"_id\" : ObjectId(\"5c52d30bc55fd4483f211e42\"),\n\t\t\t\"userId\" : ObjectId(\"5c52cba1c55fd4483f211e39\"),\n\t\t\t\"orgId\" : ObjectId(\"5c52cc37c55fd4483f211e3a\"),\n\t\t\t\"walletAddress\" : \"cosmos16dnddlm9lfuya7s4f3q4ru2zz8ng2zqg7eh6wn\",\n\t\t\t\"password\" : \"$2a$10$K9SrGAwAr5lEaly9zM4spOtuLVq9F.eragr70sfLyjeqQpweHpKWO\",\n\t\t\t\"tokens\" : [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"COMDEX\",\n\t\t\t\t\t\t\"balance\" : 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"ASSETPEG\",\n\t\t\t\t\t\t\"balance\" : 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"DOLLARPEG\",\n\t\t\t\t\t\t\"balance\" : 0\n\t\t\t\t\t}\n\t\t\t],\n\t\t\t\"status\" : \"ACTIVE\",\n\t\t\t\"name\" : \"walletname\",\n\t\t\t\"publicKey\" : \"cosmospub1addwnpepqfc8ppk7yhf826nf2h279fmwj3wlhxm4944gyfwppsaw3gcz9gg97rcc9sr\",\n\t\t\t\"seed\" : \"wise wall garden garlic cute first myself found genius file sort gauge switch dad laundry vibrant illegal chat visit hungry craft aware void mercy\",\n\t\t\t\"walletType\" : \"USER\"\n\t\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while creating wallet</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"name and password required\"\n     errors:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"name and password required\"\n     errors:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"User already created the wallet\"\n     errors:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occurred while hashing the password\"\n     errors:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while creating wallet\"\n     errors:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/assets/controller/assets.go",
    "groupTitle": "Assets"
  },
  {
    "type": "GET",
    "url": "/zones/{zoneId}/fund-requests/all",
    "title": "Get all funds requests of zone",
    "version": "0.2.0",
    "name": "GetAllFundRequestsStatusOfZone",
    "group": "Assets",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "zoneId",
            "description": "<p>Unique zoneId.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: \"true\",\n  data:[{\n\t\"_id\" : \"\",\n\t\"zoneId\" : \"\",\n\t\"reqUserId\" : \"\",\n\t\"reqOrgId\" : \"\",\n\t\"reqWalletAddress\" : \"\",\n\t\"referenceId\" : \"\",\n\t\"comdexWalletAddress\" : \"\",\n\t\"requestedAt\" : \"\",\n\t\"approvedAt\" : \"\",\n\t\"amount\" : \"\",\n\t\"paymentReceipt\" : {\n\t\t\"url\" : \"\",\n\t\t\"fileType\" : \"\",\n\t\t\"fileName\" : \"\",\n\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\")\n\t},\n\t\"requestType\" : \"\",\n\t\"status\" : \"\",\n\t\"comments\" : \"\",\n\t\"withDrawBankDetails\" : {\n\t\t\"nickName\" : \"\",\n\t\t\"beneficiaryBank\" : \" \",\n\t\t\"beneficiaryBankCountry\" : \"\",\n\t\t\"beneficiarySwift\" : \"\",\n\t\t\"beneficiaryBankAddress\" : \"\",\n\t\t\"beneficiaryBankZip\" : \"\",\n\t\t\"correspondenceBank\" : \"\",\n\t\t\"correspondenceSwift\" : \"\",\n\t\t\"accountNumber\" : \"\",\n\t\t\"accountHolderName\" : \"\",\n\t\t\"status\" : \"\"\n\t},\n\t\"approveTransactionReceipt\" : {\n\t\t\"url\" : \"\",\n\t\t\"fileType\" : \"\",\n\t\t\"fileName\" : \"\",\n\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\")\n\t}]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>ZoneId required in route params</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"ZoneId required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching pending requests list\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/assets/controller/assets.go",
    "groupTitle": "Assets"
  },
  {
    "type": "GET",
    "url": "/wallets/{walletAddress}/escrows",
    "title": "Get Escrows",
    "version": "0.2.0",
    "name": "GetEscrows",
    "group": "Assets",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "walletAddress",
            "description": "<p>Wallet address.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n\t{\n  \t_id    : \"\",\n\t\tlockedTxId : \"\",\n\t\treleasedTxId : \"\",\n\t\tfrom : \"\",\n\t\tto  : \"\",\n\t\torderId : \"\",\n\t\tamount  : \"\",\n\t\ttokenName : \"\",\n\t\treleasedAt : \"\",\n\t\tlockedAt : \"\",\n\t\tstatus  : \"\"\n\t}\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while fetching wallet info</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching wallet info\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching in transactions\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching from transactions\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/assets/controller/assets.go",
    "groupTitle": "Assets"
  },
  {
    "type": "GET",
    "url": "/fund-requests",
    "title": "Get funds requests",
    "version": "0.2.0",
    "name": "GetFundsRequests",
    "group": "Assets",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tdata:[{\n\t\"_id\" : \"\",\n\t\"zoneId\" : \"\",\n\t\"reqUserId\" : \"\",\n\t\"reqOrgId\" : \"\",\n\t\"reqWalletAddress\" : \"\",\n\t\"referenceId\" : \"\",\n\t\"comdexWalletAddress\" : \"\",\n\t\"requestedAt\" : \"\",\n\t\"approvedAt\" : \"\",\n\t\"amount\" : \"\",\n\t\"paymentReceipt\" : {\n\t\t\"url\" : \"\",\n\t\t\"fileType\" : \"\",\n\t\t\"fileName\" : \"\",\n\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\")\n\t},\n\t\"requestType\" : \"\",\n\t\"status\" : \"\",\n\t\"comments\" : \"\",\n\t\"withDrawBankDetails\" : {\n\t\t\"nickName\" : \"\",\n\t\t\"beneficiaryBank\" : \" \",\n\t\t\"beneficiaryBankCountry\" : \"\",\n\t\t\"beneficiarySwift\" : \"\",\n\t\t\"beneficiaryBankAddress\" : \"\",\n\t\t\"beneficiaryBankZip\" : \"\",\n\t\t\"correspondenceBank\" : \"\",\n\t\t\"correspondenceSwift\" : \"\",\n\t\t\"accountNumber\" : \"\",\n\t\t\"accountHolderName\" : \"\",\n\t\t\"status\" : \"\"\n\t},\n\t\"approveTransactionReceipt\" : {\n\t\t\"url\" : \"\",\n\t\t\"fileType\" : \"\",\n\t\t\"fileName\" : \"\",\n\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\")\n\t}]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while fetching funds requests list</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching funds requests list\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/assets/controller/assets.go",
    "groupTitle": "Assets"
  },
  {
    "type": "GET",
    "url": "/zones/{zoneId}/fund-requests/pending",
    "title": "Get pending funds requests of zone",
    "version": "0.2.0",
    "name": "GetPendingFundRequestsStatusByZone",
    "group": "Assets",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "zoneId",
            "description": "<p>Unique zoneId.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: \"true\",\n  data:[{\n\t\"_id\" : \"\",\n\t\"zoneId\" : \"\",\n\t\"reqUserId\" : \"\",\n\t\"reqOrgId\" : \"\",\n\t\"reqWalletAddress\" : \"\",\n\t\"referenceId\" : \"\",\n\t\"comdexWalletAddress\" : \"\",\n\t\"requestedAt\" : \"\",\n\t\"approvedAt\" : \"\",\n\t\"amount\" : \"\",\n\t\"paymentReceipt\" : {\n\t\t\"url\" : \"\",\n\t\t\"fileType\" : \"\",\n\t\t\"fileName\" : \"\",\n\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\")\n\t},\n\t\"requestType\" : \"\",\n\t\"status\" : \"\",\n\t\"comments\" : \"\",\n\t\"withDrawBankDetails\" : {\n\t\t\"nickName\" : \"\",\n\t\t\"beneficiaryBank\" : \" \",\n\t\t\"beneficiaryBankCountry\" : \"\",\n\t\t\"beneficiarySwift\" : \"\",\n\t\t\"beneficiaryBankAddress\" : \"\",\n\t\t\"beneficiaryBankZip\" : \"\",\n\t\t\"correspondenceBank\" : \"\",\n\t\t\"correspondenceSwift\" : \"\",\n\t\t\"accountNumber\" : \"\",\n\t\t\"accountHolderName\" : \"\",\n\t\t\"status\" : \"\"\n\t},\n\t\"approveTransactionReceipt\" : {\n\t\t\"url\" : \"\",\n\t\t\"fileType\" : \"\",\n\t\t\"fileName\" : \"\",\n\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\")\n\t}]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>ZoneId required in route params</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"ZoneId required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching pending requests list\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/assets/controller/assets.go",
    "groupTitle": "Assets"
  },
  {
    "type": "GET",
    "url": "/transfer-requests/{transferRequestId}",
    "title": "Get Transfer Requests",
    "version": "0.2.0",
    "name": "GetTransferRequests",
    "group": "Assets",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "transferRequestId",
            "description": "<p>transfer RequestId.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \"success\": true,\n\tdata:{\n\t\"_id\" : \"\",\n\t\"zoneId\" : \"\",\n\t\"reqUserId\" : \"\",\n\t\"reqOrgId\" : \"\",\n\t\"reqWalletAddress\" : \"\",\n\t\"referenceId\" : \"\",\n\t\"comdexWalletAddress\" : \"\",\n\t\"requestedAt\" : \"\",\n\t\"approvedAt\" : \"\",\n\t\"amount\" : \"\",\n\t\"paymentReceipt\" : {\n\t\t\"url\" : \"\",\n\t\t\"fileType\" : \"\",\n\t\t\"fileName\" : \"\",\n\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\")\n\t},\n\t\"requestType\" : \"\",\n\t\"status\" : \"\",\n\t\"comments\" : \"\",\n\t\"withDrawBankDetails\" : {\n\t\t\"nickName\" : \"\",\n\t\t\"beneficiaryBank\" : \" \",\n\t\t\"beneficiaryBankCountry\" : \"\",\n\t\t\"beneficiarySwift\" : \"\",\n\t\t\"beneficiaryBankAddress\" : \"\",\n\t\t\"beneficiaryBankZip\" : \"\",\n\t\t\"correspondenceBank\" : \"\",\n\t\t\"correspondenceSwift\" : \"\",\n\t\t\"accountNumber\" : \"\",\n\t\t\"accountHolderName\" : \"\",\n\t\t\"status\" : \"\"\n\t},\n\t\"approveTransactionReceipt\" : {\n\t\t\"url\" : \"\",\n\t\t\"fileType\" : \"\",\n\t\t\"fileName\" : \"\",\n\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\")\n\t}\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>TransferRequest not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while fetching transaction details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Response:",
          "content": "HTTP/1.1 404 NotFound.\n{\n\tsuccess: false,\n  message: \"TransferRequest not found\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching transaction details\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/assets/controller/assets.go",
    "groupTitle": "Assets"
  },
  {
    "type": "GET",
    "url": "/wallets",
    "title": "Get Wallet Info",
    "version": "0.2.0",
    "name": "GetWalletInfo",
    "group": "Assets",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: true,\n  data: {\n\t\"_id\" : \"\",\n\t\"userId\" : \"\",\n\t\"orgId\" : \"\",\n\t\"walletAddress\" : \"\",\n\t\"password\" : \"\",\n\t\"tokens\" : [\n\t\t{\n\t\t\t\"name\" : \"COMDEX\",\n\t\t\t\"balance\" : 0\n\t\t},\n\t\t{\n\t\t\t\"name\" : \"ASSETPEG\",\n\t\t\t\"balance\" : 0\n\t\t},\n\t\t{\n\t\t\t\"name\" : \"DOLLARPEG\",\n\t\t\t\"balance\" : 0\n\t\t}\n\t],\n\t\"status\" : \"\",\n\t\"name\" : \"\",\n\t\"publicKey\" : \"\",\n\t\"seed\" : ,\n\t\"walletType\": \"\",\n }\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>You don't have any organization</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Wallet not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You don't have any organization\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Response:",
          "content": "HTTP/1.1 404 NotFound.\n{\n\tsuccess: false,\n  message: \"Wallet not found\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching wallet info\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/assets/controller/assets.go",
    "groupTitle": "Assets"
  },
  {
    "type": "GET",
    "url": "/wallets/{walletAddress}/transactions",
    "title": "Get wallet transactions",
    "version": "0.2.0",
    "name": "GetWalletTransactions",
    "group": "Assets",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "walletAddress",
            "description": "<p>Wallet address.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: \"true\",\n  data:[{\n\t\t\"_id\" : ObjectId(\"5c53e24fc55fd4121dc30048\"),\n\t\t\"txId\" : \"\",\n\t\t\"from\" : \"\",\n\t\t\"to\" : \"\",\n\t\t\"createdAt\" : ISODate(\"2019-02-01T06:08:15.218Z\"),\n\t\t\"status\" : \"\",\n\t\t\"amount\" : ,\n\t\t\"type\" : \"\",\n\t\t\"comments\" : \"\",\n\t\t\"tokenName\" : \"\"\n\t]}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>walletAddress required in route params</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"walletAddress required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching wallet transactions\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/assets/controller/assets.go",
    "groupTitle": "Assets"
  },
  {
    "type": "PUT",
    "url": "/zones/{zoneId}/transfer-requests/{transferRequestId}/reject",
    "title": "Reject Transfer RequestStatus",
    "version": "0.2.0",
    "name": "RejectTransferRequestStatus",
    "group": "Assets",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "zoneId",
            "description": "<p>zoneId.</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "transferRequestId",
            "description": "<p>transferRequestId.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: \"true\",\n\tmessage: \"Rejected successfully\",\n  data:{\n\t\"_id\" : \"\",\n\t\"zoneId\" : \"\",\n\t\"reqUserId\" : \"\",\n\t\"reqOrgId\" : \"\",\n\t\"reqWalletAddress\" : \"\",\n\t\"referenceId\" : \"\",\n\t\"comdexWalletAddress\" : \"\",\n\t\"requestedAt\" : \"\",\n\t\"approvedAt\" : \"\",\n\t\"amount\" : \"\",\n\t\"paymentReceipt\" : {\n\t\t\"url\" : \"\",\n\t\t\"fileType\" : \"\",\n\t\t\"fileName\" : \"\",\n\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\")\n\t},\n\t\"requestType\" : \"\",\n\t\"status\" : \"\",\n\t\"comments\" : \"\",\n\t\"withDrawBankDetails\" : {\n\t\t\"nickName\" : \"\",\n\t\t\"beneficiaryBank\" : \" \",\n\t\t\"beneficiaryBankCountry\" : \"\",\n\t\t\"beneficiarySwift\" : \"\",\n\t\t\"beneficiaryBankAddress\" : \"\",\n\t\t\"beneficiaryBankZip\" : \"\",\n\t\t\"correspondenceBank\" : \"\",\n\t\t\"correspondenceSwift\" : \"\",\n\t\t\"accountNumber\" : \"\",\n\t\t\"accountHolderName\" : \"\",\n\t\t\"status\" : \"\"\n\t},\n\t\"approveTransactionReceipt\" : {\n\t\t\"url\" : \"\",\n\t\t\"fileType\" : \"\",\n\t\t\"fileName\" : \"\",\n\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\")\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating zoneId</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Transfer Request not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting transfer request details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"ZoneId required\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"transferRequestId required\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Response:",
          "content": "HTTP/1.1 404 NotFound.\n{\n\tsuccess: false,\n  message: \"Transfer Request not found\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: false,\n  message: \"Error while getting transfer request details\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: false,\n  message: \"Request is already approved\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: false,\n  message: \"Request is already rejected\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: false,\n  message: \"Error while rejecting funds request\"\n\terror:{}\n\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/assets/controller/assets.go",
    "groupTitle": "Assets"
  },
  {
    "type": "PUT",
    "url": "/transfer-requests/withdraw/{transferRequestId}/reject",
    "title": "Reject withdraw Request",
    "version": "0.2.0",
    "name": "RejectWithdrawRequestStatus",
    "group": "Assets",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: \"true\",\n\tmessage:\"Rejected successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "transferRequestId",
            "description": "<p>transferRequestId.</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while checking for authorization</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error occured while validating params</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Transfer Request not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You are not a comdex user\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Transfer request id is mandatory\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Response:",
          "content": "HTTP/1.1 404 NotFound.\n{\n\tsuccess: false,\n  message: \"Transfer Request not found\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting transfer request details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Request is already approved\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Request is already rejected\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Request is already rejected\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Insufficient balance\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You don't have any tokens\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while debiting amount\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while crediting amount\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while rejecting withdraw fund request\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/assets/controller/assets.go",
    "groupTitle": "Assets"
  },
  {
    "type": "PUT",
    "url": "/zones/{zoneId}/transfer-requests/{transferRequestId}/status",
    "title": "Update Transfer RequestStatus",
    "version": "0.2.0",
    "name": "UpdateTransferRequestStatus",
    "group": "Assets",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "zoneId",
            "description": "<p>zoneId.</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "transferRequestId",
            "description": "<p>transferRequestId.</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "amount",
            "description": "<p>Amount.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage:\"Approved successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Incorrect wallet password</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Transfer Request not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting transfer request details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Incorrect wallet password\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Response:",
          "content": "HTTP/1.1 404 NotFound.\n{\n\tsuccess: false,\n  message: \"Transfer Request not found\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: false,\n  message: \"Error while getting transfer request details\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: false,\n  message: \"Request is already approved\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: false,\n  message: \"Request is already rejected\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Error-Response:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: false,\n  message: \"Request is already rejected\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Insufficient balance\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You don't have any tokens\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while debiting amount\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while crediting amount\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting user details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organanization details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating add funds request details\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/assets/controller/assets.go",
    "groupTitle": "Assets"
  },
  {
    "type": "PUT",
    "url": "/transfer-requests/withdraw/{transferRequestId}/status",
    "title": "Approve withdraw RequestStatus",
    "version": "0.2.0",
    "name": "UpdateWithdrawRequestStatus",
    "group": "Assets",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "transferRequestId",
            "description": "<p>transferRequestId.</p>"
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "string",
            "optional": false,
            "field": "reference_id",
            "description": "<p>Reference id.</p>"
          },
          {
            "group": "Request formdata",
            "type": "file",
            "optional": false,
            "field": "paymentReceipt",
            "description": "<p>Payment reciept file.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: \"true\",\n\tmessage:\"Approved suucessfully\"\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error occured while validating params</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while decoding file</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Transfer Request not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Transfer request id is mandatory\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Reference id is mandatory\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding file\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"File name is missing\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Response:",
          "content": "HTTP/1.1 404 NotFound.\n{\n\tsuccess: false,\n  message: \"Transfer Request not found\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting transfer request details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Request already approved\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Request already rejected\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting user details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organanization details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Response:",
          "content": "HTTP/1.1 404 NotFound.\n{\n\tsuccess: false,\n  message: \"Request not found\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while approving withdraw funds\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/assets/controller/assets.go",
    "groupTitle": "Assets"
  },
  {
    "type": "POST",
    "url": "/transfer-requests/withdraw",
    "title": "Withdraw request",
    "version": "0.2.0",
    "name": "WithdrawRequest",
    "group": "Assets",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "account_number",
            "description": "<p>Account number.</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "amount",
            "description": "<p>Amount to withdraw.</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "wallet_address",
            "description": "<p>wallet address.</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>Password of your wallet.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: \"true\",\n\tmessage:\"Request sent successfully\",\n  data: {\n\t\"_id\" : \"\",\n\t\"zoneId\" : \"\",\n\t\"reqUserId\" : \"\",\n\t\"reqOrgId\" : \"\",\n\t\"reqWalletAddress\" : \"\",\n\t\"referenceId\" : \"\",\n\t\"comdexWalletAddress\" : \"\",\n\t\"requestedAt\" : \"\",\n\t\"approvedAt\" : \"\",\n\t\"amount\" : \"\",\n\t\"paymentReceipt\" : {\n\t\t\"url\" : \"\",\n\t\t\"fileType\" : \"\",\n\t\t\"fileName\" : \"\",\n\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\")\n\t},\n\t\"requestType\" : \"\",\n\t\"status\" : \"\",\n\t\"comments\" : \"\",\n\t\"withDrawBankDetails\" : {\n\t\t\"nickName\" : \"\",\n\t\t\"beneficiaryBank\" : \" \",\n\t\t\"beneficiaryBankCountry\" : \"\",\n\t\t\"beneficiarySwift\" : \"\",\n\t\t\"beneficiaryBankAddress\" : \"\",\n\t\t\"beneficiaryBankZip\" : \"\",\n\t\t\"correspondenceBank\" : \"\",\n\t\t\"correspondenceSwift\" : \"\",\n\t\t\"accountNumber\" : \"\",\n\t\t\"accountHolderName\" : \"\",\n\t\t\"status\" : \"\"\n\t},\n\t\"approveTransactionReceipt\" : {\n\t\t\"url\" : \"\",\n\t\t\"fileType\" : \"\",\n\t\t\"fileName\" : \"\",\n\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\")\n\t}\n}\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Incorrect wallet password</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while creating withdraw request</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>User not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Incorrect wallet password\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting user details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting user details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Wallet not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization wallet address\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"You are not belongs to any comdex organization\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting zone wallet address\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Comdex Wallet not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting zone asset address\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while adding withdraw fund request details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Insufficient balance\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You don't have any tokens\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while debiting amount\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while crediting amount\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/assets/controller/assets.go",
    "groupTitle": "Assets"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/invitation/{code}/accept",
    "title": "Accept invitation",
    "version": "0.2.0",
    "name": "AcceptInvitation",
    "group": "Invitations",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>Unique organizationId</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "code",
            "description": "<p>Unique code</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "name",
            "description": "<p>Name</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>Password</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "confirmPassword",
            "description": "<p>ConfirmPassword</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "address",
            "description": "<p>Address</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 201 StatusCreated\n{\n\tstatus: true,\n\tmessage: \"Accepted successfully\",\n\tdata: {\n\t\t\"name\":\"\",\n\t\t\"mobile\":\"\",\n\t\t\"email\":\"\",\n\t\t\"role\":\"\",\n\t\t\"mobile_status\":\"\",\n\t\t\"status\":\"\"\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "StatusUnprocessableEntity",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Invitation not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while accepting invitation.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\t success:\"false\",\n\t message: \"Validation failed\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invitation-Not-Found-Error:",
          "content": "HTTP/1.1 400 NotFound\n{\n\t success:\"false\",\n\t message: \"Invitation not found\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invitation-Not-Verified-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Invitation was not verified\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invitation-Accepted-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Invitation already accepted\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invitation-Expired-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Invitation already expired\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Password-Mismatch-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Password mismatch\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Password-Hash-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while hashing the password\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while updating status\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Role-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while fetching role from db\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Role-Not-Found-Error:",
          "content": "HTTP/1.1 400 NotFound\n{\n\t success:\"false\",\n\t message: \"Role not found\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Details-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while updating details\",\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/invitation.go",
    "groupTitle": "Invitations"
  },
  {
    "type": "GET",
    "url": "/me/traders",
    "title": "My traders",
    "name": "GetMyTraders",
    "group": "Invitations",
    "version": "0.2.0",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 StatusOK\n{\n\tsuccess: true,\n\t \"data\": [{\n        \"id\": \"\",\n        \"name\": \"\",\n        \"invited_by\": \"\",\n        \"email\": \"\",\n        \"code\": \"\",\n        \"status\": \"\",\n        \"mobile\": \"\",\n        \"invited_on\": \"0001-01-01T00:00:00Z\",\n        \"expires_at\": \"0001-01-01T00:00:00Z\",\n        \"accepted_on\": \"0001-01-01T00:00:00Z\",\n        \"username\": \"\",\n        \"password\": \"\",\n        \"link\": \"\",\n        \"organization_id\": \"\",\n        \"role_id\": \"\",\n        \"address\": \"\",\n        \"line_1\": \"\",\n        \"line_2\": \"\",\n        \"line_3\": \"\",\n        \"city\": \"\",\n        \"state\": \"\",\n        \"country\": \"\",\n        \"zone\": \"\",\n        \"zip_code\": 0,\n        \"mobile_otp\": \"\",\n        \"mobile_status\": \"\"\n    }]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "StatusUnauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Error while getting organization details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Unauthorized-Error-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n    error: {}\n\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\",\n    error: {}\n\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/invitation.go",
    "groupTitle": "Invitations"
  },
  {
    "type": "GET",
    "url": "/roles",
    "title": "Get roles",
    "name": "GetRoles",
    "group": "Invitations",
    "version": "0.2.0",
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 StatusOk\n{\n\tsuccess: true,\n\t\"data\": [\n      \t {\n\t\t\t\"_id\" : ObjectId(\"5ba35b59528f1791b1a32906\"),\n\t\t\t\"name\" : \"Admin\",\n\t\t\t\"code\" : \"admin\"\n\t\t}\n\t\t{\n\t\t\t\"_id\" : ObjectId(\"5ba35b69528f1791b1a32907\"),\n\t\t\t\"name\" : \"Super Admin\",\n\t\t\t\"code\" : \"super_admin\"\n\t\t}\n\t\t{\n\t\t\t\"_id\" : ObjectId(\"5ba35b86528f1791b1a32908\"),\n\t\t\t\"name\" : \"God Mode\",\n\t\t\t\"code\" : \"god\"\n\t\t}\n\t\t{\n\t\t\t\"_id\" : ObjectId(\"5ba35ba5528f1791b1a32909\"),\n\t\t\t\"name\" : \"Buyer\",\n\t\t\t\"code\" : \"buyer\"\n\t\t}\n\t\t{\n\t\t\t\"_id\" : ObjectId(\"5ba35bb7528f1791b1a3290a\"),\n\t\t\t\"name\" : \"Seller\",\n\t\t\t\"code\" : \"seller\"\n\t\t}\n    ]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting roles</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Roles not found\",\n   error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/invitation.go",
    "groupTitle": "Invitations"
  },
  {
    "type": "GET",
    "url": "/organization/{organizationId}/traders",
    "title": "Get traders",
    "name": "GetTraders",
    "group": "Invitations",
    "version": "0.2.0",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\t \"data\": [{\n        \"id\": \"\",\n        \"name\": \"\",\n        \"invited_by\": \"\",\n        \"email\": \"\",\n        \"code\": \"\",\n        \"status\": \"\",\n        \"mobile\": \"\",\n        \"invited_on\": \"0001-01-01T00:00:00Z\",\n        \"expires_at\": \"0001-01-01T00:00:00Z\",\n        \"accepted_on\": \"0001-01-01T00:00:00Z\",\n        \"username\": \"\",\n        \"password\": \"\",\n        \"link\": \"\",\n        \"organization_id\": \"\",\n        \"role_id\": \"\",\n        \"address\": \"\",\n        \"line_1\": \"\",\n        \"line_2\": \"\",\n        \"line_3\": \"\",\n        \"city\": \"\",\n        \"state\": \"\",\n        \"country\": \"\",\n        \"zone\": \"\",\n        \"zip_code\": 0,\n        \"mobile_otp\": \"\",\n        \"mobile_status\": \"\"\n    }]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Error while getting organization traders</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n    errors:{}\n}",
          "type": "json"
        },
        {
          "title": "Not-Found-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\",\n    errors:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/invitation_com.go",
    "groupTitle": "Invitations"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/invitations",
    "title": "Pending invitations",
    "version": "0.1.0",
    "name": "PendingInvitation",
    "group": "Invitations",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tdata: [{\n\t\t\t\"_id\" : \"\",\n\t\t\t\"name\" : \"\",\n\t\t\t\"invitedBy\" : \"\",\n\t\t\t\"email\" : \"\",\n\t\t\t\"code\" : \"\",\n\t\t\t\"status\" : \"\",\n\t\t\t\"mobile\" : \"\",\n\t\t\t\"invitedOn\" : ,\n\t\t\t\"expiresAt\" : ,\n\t\t\t\"acceptedOn\" : ,\n\t\t\t\"username\" : \"\",\n\t\t\t\"password\" : \"\",\n\t\t\t\"link\" : \"\",\n\t\t\t\"organizationId\" : \"\",\n\t\t\t\"roleId\" : \"\",\n\t\t\t\"address\" : \"\",\n\t\t\t\"line_1\" : \"\",\n\t\t\t\"line_2\" : \"\",\n\t\t\t\"line_3\" : \"\",\n\t\t\t\"city\" : \"\",\n\t\t\t\"state\" : \"\",\n\t\t\t\"country\" : \"\",\n\t\t\t\"zone\" : \"\",\n\t\t\t\"zipcode\" : ,\n\t\t\t\"mobileOtp\" : \"\",\n\t\t\t\"mobileStatus\" : \"\"\n\t}]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>The id of the organization not exists.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Organization not found\",\n    errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Organization not found\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/invitation.go",
    "groupTitle": "Invitations"
  },
  {
    "type": "PUT",
    "url": "/users/{userId}/step/{stepNo}",
    "title": "Store Registration Step",
    "name": "RegistrationStep",
    "group": "Invitations",
    "version": "0.2.0",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": "<p>Unique userId</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "stepNo",
            "description": "<p>Registration step No</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 StatusOK\n{\n\tsuccess: true,\n\t message : \"Updated\",\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while updating registration step</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the registartion step\",\n   error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/invitation.go",
    "groupTitle": "Invitations"
  },
  {
    "type": "POST",
    "url": "/organizations/{organizationId}/invitations",
    "title": "Send invitation",
    "version": "0.2.0",
    "name": "SendInvitation",
    "group": "Invitations",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>organizationId</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "name",
            "description": "<p>Name</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "email",
            "description": "<p>Email</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "mobile",
            "description": "<p>Mobile</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "role_id",
            "description": "<p>RoleId</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Invitation sent successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "StatusUnauthorized",
            "description": "<p>Unauthorized user</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "StatusUnprocessableEntity",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while sending invitation.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Unauthorized-Error-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid Token\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\t success:\"false\",\n\t message: \"Validation failed\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Mobile-Exists-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already have an account with this mobile number\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Email-Exists-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already have an account with this email\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting details\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Mobile-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while checking mobile existance\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Get-Invitation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting invitation details\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Send-Invitation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while sending invitation otp to mobile\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while storing details\",\n     errors: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/invitation.go",
    "groupTitle": "Invitations"
  },
  {
    "type": "PUT",
    "url": "/organizations/verify/{code}",
    "title": "Verify invitation",
    "version": "0.2.0",
    "name": "VerifyInvitation",
    "group": "Invitations",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "code",
            "description": "<p>Unique code</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "mobile_otp",
            "description": "<p>MobileOtp</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Verified Successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "StatusUnprocessableEntity",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while verifying invitation.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Invitation link not found.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\t success:\"false\",\n\t message: \"Validation failed\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Mobile-OTP-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Mobile otp is null\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Invitation-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Invalid invitation link\",\n    error: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting invitation details\",\n    error: {}\n}",
          "type": "json"
        },
        {
          "title": "Incorrect-Mobile-OTP-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Incorrect mobile otp\",\n    error: {}\n}",
          "type": "json"
        },
        {
          "title": "Mobile-OTP-Verified-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Mobile otp already verified\",\n    error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invitation-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Invitation not found\",\n    error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invitation-Accepted-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Invitation was already accepted \",\n    error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invitation-Expired-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Invitation time was expired\",\n    error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Details-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating details\",\n    error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/invitation.go",
    "groupTitle": "Invitations"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/offers/{offerId}/negotiations/{negotiationId}/accept",
    "title": "Accept negotiation",
    "version": "0.2.0",
    "name": "AcceptNegotiation",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OfferId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "NegotiationId",
            "description": ""
          }
        ],
        "Request fromdata": [
          {
            "group": "Request fromdata",
            "type": "doc",
            "optional": false,
            "field": "doc",
            "description": "<p>File to be uploaded</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \tsuccess: \"true\",\n  \tdata : {\n\t\t\torderId  : \"\",\n\t\t\tamount   : \"\",\n\t\t\tcurrency : \"\",\n\t\t\tcomments : \"\",\n\t\t\t\"contractDoc\" : {\n\t\t\t\t\"file\" : {\n\t\t\t\t\t\"name\" : \"\",\n\t\t\t\t\t\"mimeType\" : \"\",\n\t\t\t\t\t\"path\" : \"\",\n\t\t\t\t\t\"URL\" : \"\",\n\t\t\t\t\t\"size\" : \"\",\n\t\t\t\t\t\"checksum\" : \"\"\n\t\t\t\t},\n\t\t\t\t\"status\" : \"\",\n\t\t\t\t\"statusUpdatedAt\" : null,\n\t\t\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\t\t\"approvedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\t\t\"updatedAt\" : null\n\t\t\t}\n\n\t\t}\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OfferId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OfferId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NegotiationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"NegotiationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"File required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Authorization-Error-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\tsuccess:\"false\",\n\tmessage: \"Not authorized to accept the negotiation\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in a state to accept negotiation\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Negotiation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the negotiation\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Offer-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while upating the offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Negotiation-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Negotiation not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Negotiation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting negotiation\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Offer-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating offer\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/negotiations.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/offers/{offerId}/accept",
    "title": "Buyer accepts offer",
    "version": "0.2.0",
    "name": "AcceptOffer",
    "group": "Orders",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OfferId",
            "description": ""
          }
        ],
        "Request fromdata": [
          {
            "group": "Request fromdata",
            "type": "doc",
            "optional": false,
            "field": "contract",
            "description": "<p>send file to upload in formdata</p>"
          },
          {
            "group": "Request fromdata",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>Comdex Blocakchain account password</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: \"true\",\n  message:\"Offer accepted successfully\"\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while fetching order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OfferId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OfferId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Fetch-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in a state to accept offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Offer-Accepted-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Offer transaction already completed\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Comdex-Settlement-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Comdex has to upload settlement doc\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Accept-Own-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You can't accept your won order offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Comdex-Didn't-Sign-Settlement-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Comdex didn't sign settlement docs\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Offer-Availabe-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Offer not available\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Offer-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Offer not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Authorization-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Not authorized to accept this private offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Seller-Settlement-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Seller already signed on settlement doc,you can't update now\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Settlement-Doc-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Settlement doc already signed by the comdex\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Comdex-Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Comdex organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Admin-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching admin of organization\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Docs-Missing-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Contract document and settlment documents are missing\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Wallet-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Wallet not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Wallet-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching seller wallet address\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Escrow-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while initiating ESCROW to lock buyer funds\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "User-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting user details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating order status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Price-Change-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting price change\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Status-Action-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the status action\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/offers.go",
    "groupTitle": "Orders"
  },
  {
    "type": "POST",
    "url": "/organizations/{organizationId}/commodity",
    "title": "Add commodity details",
    "version": "0.2.0",
    "name": "AddCommodityDetails",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "commodity",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "commodity.name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.quality",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.assetTypeId",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "commodity.delivery_term",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "commodity.quantity",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "commodity.amount",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "commodity.date_of_shipment",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "commodity.shipment_period",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "commodity.total_shipment_value",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "commodity.port_of_loading",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_loading.port",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_loading.country",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "commodity.port_of_discharge",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_discharge.port",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_discharge.country",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "listing_type",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "contractId",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "[]Object",
            "optional": false,
            "field": "privateBuyers",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "privateBuyers.buyerEmail",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "privateBuyers.buyerOrgId",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "privateBuyers.buyerOrgName",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 201 StatusCreated\n{\n\tsuccess: \"true\",\n    \"data\": {\n        \"id\": \"5d305537c55fd474573d5458\",\n        \"pegHash\": \"\",\n        \"assetTransactionHash\": \"\",\n        \"assetId\": \"\",\n        \"docsHandleBy\": \"\",\n        \"name\": \"\",\n        \"seller_id\": \"5c52c6bdc55fd4483f211e2e\",\n        \"sellerName\": \"prathyusha lakkireddy\",\n        \"sellerOrgName\": \"test1234 check org\",\n        \"sellerAddress\": \"hyd\",\n        \"zoneId\": \"5ba38d51754df2cefbe47eb1\",\n        \"csoOrgName\": \"Comdex Malaysia\",\n        \"csoOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n        \"organization_id\": \"5c753ef7c55fd42711bc6cf9\",\n        \"contractId\": \"12345678\",\n        \"csoid\": \"5ba39b5c35151b50bc0ccb33\",\n        \"buyer_id\": \"\",\n        \"buyer_zone_id\": \"\",\n        \"buyerAddress\": \"\",\n        \"buyerName\": \"\",\n        \"buyerOrgName\": \"\",\n        \"cboName\": \"\",\n        \"cboOrgAddress\": \"\",\n        \"cboid\": \"\",\n        \"commodity\": {\n            \"name\": \"Bc error2111a1a\",\n            \"assetTypeId\": \"5ba3565904809ddf6a340165\",\n            \"assetTypeName\": \"COAL\",\n            \"quality\": \"A++\",\n            \"delivery_term\": \"FOB\",\n            \"quantity\": 5,\n            \"units_of_measurement\": \"MT\",\n            \"amount\": 0,\n            \"port_of_loading\": {\n                \"port\": \"port1\",\n                \"country\": \"country1\"\n            },\n            \"date_of_shipment\": \"0001-01-01T00:00:00Z\",\n            \"port_of_discharge\": {\n                \"port\": \"port2\",\n                \"country\": \"country2\"\n            },\n            \"shipment_period\": \"0001-01-01T00:00:00Z\",\n            \"total_shipment_value\": 25\n        },\n        \"obl_details\": {\n            \"bill_number\": \"\",\n            \"shipper_name\": \"\",\n            \"shipper_address\": {\n                \"line1\": \"\",\n                \"line2\": \"\",\n                \"city\": \"\",\n                \"country\": \"\",\n                \"pincode\": \"\",\n                \"address\": \"\"\n            },\n            \"receiver_name\": \"\",\n            \"receiver_address\": {\n                \"line1\": \"\",\n                \"line2\": \"\",\n                \"city\": \"\",\n                \"country\": \"\",\n                \"pincode\": \"\",\n                \"address\": \"\"\n            },\n            \"date_of_shipping\": \"0001-01-01T00:00:00Z\",\n            \"number_of_shipping_units\": 0,\n            \"freight_classification\": \"\",\n            \"exact_weight_of_consignment\": \"\",\n            \"declared_value_of_asset\": 0,\n            \"invoiceNumber\": \"\",\n            \"invoiceDate\": \"0001-01-01T00:00:00Z\"\n        },\n        \"listing_type\": \"PUBLIC\",\n        \"docs\": null,\n        \"couriers\": null,\n        \"numberOfAssetPeg\": 5,\n        \"numberOfFiatPeg\": 0,\n        \"escrows\": null,\n        \"status\": \"INCOMPLETE_DETAILS\",\n        \"status_updated_at\": null,\n        \"created_at\": \"2019-07-18T11:17:11.533310139Z\",\n        \"updated_at\": null,\n        \"feedback\": {\n            \"buyer\": {\n                \"createdBy\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"rating\": 0,\n                \"comments\": \"\"\n            },\n            \"seller\": {\n                \"createdBy\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"rating\": 0,\n                \"comments\": \"\"\n            }\n        },\n        \"buyerConfirmationTime\": null,\n        \"sellerConfirmationTime\": null,\n        \"statusActions\": null,\n        \"offers\": [\n            {\n                \"id\": \"5d305537c55fd474573d5459\",\n                \"totalPrice\": 25,\n                \"from_id\": \"\",\n                \"order_id\": \"\",\n                \"buyer_id\": \"\",\n                \"privateBuyerOrgId\": \"\",\n                \"amount\": 5,\n                \"currency\": \"USD\",\n                \"created_at\": \"2019-07-18T11:17:11.533310139Z\",\n                \"created_by\": \"5c52c6bdc55fd4483f211e2e\",\n                \"approved_at\": null,\n                \"approved_by\": \"\",\n                \"buy_requested_at\": null,\n                \"buy_requested_by\": \"\",\n                \"buy_approved_at\": null,\n                \"buy_approved_by\": \"\",\n                \"expires_at\": null,\n                \"status\": \"ACTIVE\",\n                \"status_updated_by\": \"\",\n                \"status_updated_at\": null,\n                \"contract_doc\": {\n                    \"buyerTxHash\": \"\",\n                    \"sellerTxHash\": \"\",\n                    \"file\": null,\n                    \"status\": \"\",\n                    \"status_updated_at\": null,\n                    \"created_at\": null,\n                    \"approvedBy\": \"\",\n                    \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                    \"updated_at\": null,\n                    \"comments\": \"\",\n                    \"confirmedAt\": null,\n                    \"confirmedBy\": \"\"\n                },\n                \"buyer_contract_doc\": {\n                    \"buyerTxHash\": \"\",\n                    \"sellerTxHash\": \"\",\n                    \"file\": null,\n                    \"status\": \"\",\n                    \"status_updated_at\": null,\n                    \"created_at\": null,\n                    \"approvedBy\": \"\",\n                    \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                    \"updated_at\": null,\n                    \"comments\": \"\",\n                    \"confirmedAt\": null,\n                    \"confirmedBy\": \"\"\n                },\n                \"comments\": \"\",\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            }\n        ],\n        \"buyer_org_id\": \"\",\n        \"buyer_confirmed_contrcat\": {\n            \"file\": {\n                \"name\": \"\",\n                \"mime_type\": \"\",\n                \"path\": \"\",\n                \"url\": \"\",\n                \"size\": 0,\n                \"checksum\": \"\"\n            },\n            \"status\": \"\",\n            \"status_updated_at\": null,\n            \"created_at\": null,\n            \"updated_at\": null\n        },\n        \"mainEscrow\": {\n            \"id\": \"\",\n            \"buyer\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            },\n            \"seller\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            },\n            \"cbo\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"assetPegTransactionId\": \"\",\n                \"dollarPegTransactionId\": \"\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"proofOfFiatTx\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\"\n            },\n            \"cso\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"assetPegTransactionId\": \"\",\n                \"dollarPegTransactionId\": \"\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                }\n            }\n        },\n        \"buyerEscrow\": {\n            \"id\": \"\",\n            \"buyer\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            },\n            \"cbo\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            },\n            \"obl_docs\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"status\": \"\",\n                \"updated_at\": null,\n                \"updated_by\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null\n            },\n            \"cso\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            },\n            \"seller\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            }\n        },\n        \"sellerEscrow\": {\n            \"id\": \"\",\n            \"seller\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            },\n            \"cso\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            },\n            \"obl_docs\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"status\": \"\",\n                \"updated_at\": null,\n                \"updated_by\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null\n            }\n        },\n        \"comdexEscrow\": {\n            \"cso\": {\n                \"createdBy\": \"\",\n                \"ipAddress\": \"\",\n                \"status\": \"\",\n                \"transactionId\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"transactionReceipt\": {\n                    \"transactionId\": \"\",\n                    \"ipAddress\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\"\n                }\n            },\n            \"buyer\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"status\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\"\n            },\n            \"cbo\": {\n                \"status\": \"\",\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"transactionReceipt\": {\n                    \"transactionId\": \"\",\n                    \"ipAddress\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\"\n                }\n            }\n        },\n        \"settlementDocs\": {\n            \"buyer\": {\n                \"status\": \"\",\n                \"docs\": null,\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                \"txId\": \"\",\n                \"ipAddress\": \"\",\n                \"createdBy\": \"\",\n                \"createdOrgBy\": \"\",\n                \"updatedBy\": \"\"\n            },\n            \"seller\": {\n                \"status\": \"\",\n                \"docs\": null,\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                \"txId\": \"\",\n                \"ipAddress\": \"\",\n                \"createdBy\": \"\",\n                \"createdOrgBy\": \"\"\n            },\n            \"comdex\": {\n                \"comdexType\": \"\",\n                \"status\": \"\",\n                \"docs\": null,\n                \"approvedDocs\": null,\n                \"approvedComdexType\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                \"txId\": \"\",\n                \"ipAddress\": \"\",\n                \"createdBy\": \"\",\n                \"createdOrgBy\": \"\",\n                \"approvedBy\": \"\",\n                \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                \"rejectedBy\": \"\",\n                \"rejectedAt\": \"0001-01-01T00:00:00Z\",\n                \"rejectedComdexType\": \"\",\n                \"updatedBy\": \"\",\n                \"updatedOrgBy\": \"\"\n            }\n        },\n        \"comdexCommission\": 0,\n        \"totalTaxes\": 0,\n        \"sendOblDocTo\": \"\",\n        \"isSettlementRequired\": false,\n        \"privateBuyers\": null,\n        \"buyerProofOfFiat\": {\n            \"txHash\": \"\",\n            \"sellerTxHash\": \"\",\n            \"status\": \"\",\n            \"createdAt\": \"0001-01-01T00:00:00Z\",\n            \"createdBy\": \"\",\n            \"approvedAt\": \"0001-01-01T00:00:00Z\",\n            \"approvedBy\": \"\",\n            \"file\": {\n                \"name\": \"\",\n                \"path\": \"\",\n                \"url\": \"\",\n                \"mimetype\": \"\"\n            }\n        },\n        \"negotiatedAt\": \"0001-01-01T00:00:00Z\",\n        \"comdexPaymentBy\": \"\",\n        \"tradeType\": \"POST TRADE\"\n    },\n\tmessage:\"Commodity details added successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting wallet info</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Wallet-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Wallet not found,please create your own wallet\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Wallet-Info-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting wallet info\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "organization-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Zone-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization zone id not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Admin-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching admin of organization\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting user details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Asset-Type-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Asset type not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting asset type\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Creation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while creating the order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Satatus-Action-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the status action\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/obl",
    "title": "Add Obl details",
    "version": "0.2.0",
    "name": "AddOblDetails",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "obl_details",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.bill_number",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.shipper_name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "obl_details.shipper_address",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "obl_details.shipper_address.line1",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "obl_details.shipper_address.line2",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "obl_details.shipper_address.city",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "obl_details.shipper_address.country",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "obl_details.shipper_address.pincode",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.receiver_name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "obl_details.receiver_address",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "obl_details.receiver_address.line1",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "obl_details.receiver_address.line2",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "obl_details.receiver_address.city",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "obl_details.receiver_address.country",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "obl_details.receiver_address.pincode",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "time",
            "optional": false,
            "field": "obl_details.date_of_shipping",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "obl_details.number_of_shipping_units",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.freight_classification",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.exact_weight_of_consignment",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "obl_details.declared_value_of_asset",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "[]Object",
            "optional": false,
            "field": "docs_details",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.type",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.status",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "docs_details.file",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.type",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.mimetype",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.url",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "listing_type",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "contractId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 201 StatusCreated\n{\n\tsuccess: \"true\",\n\tdata:{\n\t\t \"id\": \"5d305537c55fd474573d5458\",\n        \"pegHash\": \"\",\n        \"assetTransactionHash\": \"\",\n        \"assetId\": \"2019-07-18123456\",\n        \"docsHandleBy\": \"TRADE_DOCS_HANDLE_BY_COMDEX\",\n        \"name\": \"\",\n        \"seller_id\": \"\",\n        \"sellerName\": \"\",\n        \"sellerOrgName\": \"test1234 check org\",\n        \"sellerAddress\": \"hyd\",\n        \"zoneId\": \"5ba38d51754df2cefbe47eb1\",\n        \"csoOrgName\": \"Comdex Malaysia\",\n        \"csoOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n        \"organization_id\": \"\",\n        \"contractId\": \"\",\n        \"csoid\": \"5ba39b5c35151b50bc0ccb33\",\n        \"buyer_id\": \"\",\n        \"buyer_zone_id\": \"\",\n        \"buyerAddress\": \"\",\n        \"buyerName\": \"\",\n        \"buyerOrgName\": \"\",\n        \"cboName\": \"\",\n        \"cboOrgAddress\": \"\",\n        \"cboid\": \"\",\n        \"commodity\": {\n            \"name\": \"\",\n            \"assetTypeId\": \"\",\n            \"assetTypeName\": \"\",\n            \"quality\": \"\",\n            \"delivery_term\": \"\",\n            \"quantity\": 0,\n            \"units_of_measurement\": \"\",\n            \"amount\": 0,\n            \"port_of_loading\": {\n                \"port\": \"\",\n                \"country\": \"\"\n            },\n            \"date_of_shipment\": \"0001-01-01T00:00:00Z\",\n            \"port_of_discharge\": {\n                \"port\": \"\",\n                \"country\": \"\"\n            },\n            \"shipment_period\": \"0001-01-01T00:00:00Z\",\n            \"total_shipment_value\": 0\n        },\n        \"obl_details\": {\n            \"bill_number\": \"123456\",\n            \"shipper_name\": \"lp\",\n            \"shipper_address\": {\n                \"line1\": \"hyd\",\n                \"line2\": \"madhapur\",\n                \"city\": \"hyd\",\n                \"country\": \"ind\",\n                \"pincode\": \"503111\",\n                \"address\": \"hyd,madhapur,hyd,ind,503111\"\n            },\n            \"receiver_name\": \"jshd\",\n            \"receiver_address\": {\n                \"line1\": \"hyd\",\n                \"line2\": \"madhapur\",\n                \"city\": \"hyd\",\n                \"country\": \"ind\",\n                \"pincode\": \"503111\",\n                \"address\": \"hyd,madhapur,hyd,ind,503111\"\n            },\n            \"date_of_shipping\": \"0001-01-01T00:00:00Z\",\n            \"number_of_shipping_units\": 5,\n            \"freight_classification\": \"\",\n            \"exact_weight_of_consignment\": \"\",\n            \"declared_value_of_asset\": 5,\n            \"invoiceNumber\": \"\",\n            \"invoiceDate\": \"0001-01-01T00:00:00Z\"\n        },\n        \"listing_type\": \"\",\n        \"docs\": [\n            {\n                \"_id\": \"5d305541c55fd474573d545a\",\n                \"file\": {\n                    \"name\": \"1234rewa\",\n                    \"mime_type\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"uploads/files/aJ1NrmXzerVc5y9osample.pdf\",\n                    \"size\": 0,\n                    \"checksum\": \"\"\n                },\n                \"type\": \"copyOfObl\",\n                \"comments\": \"\",\n                \"approved_by\": null,\n                \"approved_at\": null,\n                \"status\": \"\",\n                \"created_at\": \"2019-07-18T11:17:21.170161974Z\",\n                \"updated_at\": \"2019-07-18T11:17:21.170161974Z\"\n            },\n            {\n                \"_id\": \"5d305541c55fd474573d545b\",\n                \"file\": {\n                    \"name\": \"Code Competition - 1.0 - Vitwit.pdf\",\n                    \"mime_type\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"uploads/files/aJ1NrmXzerVc5y9osample.pdf\",\n                    \"size\": 0,\n                    \"checksum\": \"\"\n                },\n                \"type\": \"invoice\",\n                \"comments\": \"\",\n                \"approved_by\": null,\n                \"approved_at\": null,\n                \"status\": \"\",\n                \"created_at\": \"2019-07-18T11:17:21.170161974Z\",\n                \"updated_at\": \"2019-07-18T11:17:21.170161974Z\"\n            },\n            {\n                \"_id\": \"5d305541c55fd474573d545c\",\n                \"file\": {\n                    \"name\": \"comDex.pdf\",\n                    \"mime_type\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"uploads/files/aJ1NrmXzerVc5y9osample.pdf\",\n                    \"size\": 0,\n                    \"checksum\": \"\"\n                },\n                \"type\": \"packingList\",\n                \"comments\": \"\",\n                \"approved_by\": null,\n                \"approved_at\": null,\n                \"status\": \"\",\n                \"created_at\": \"2019-07-18T11:17:21.170161974Z\",\n                \"updated_at\": \"2019-07-18T11:17:21.170161974Z\"\n            }\n        ],\n        \"couriers\": null,\n        \"numberOfAssetPeg\": 0,\n        \"numberOfFiatPeg\": 0,\n        \"escrows\": null,\n        \"status\": \"\",\n        \"status_updated_at\": null,\n        \"created_at\": null,\n        \"updated_at\": \"2019-07-18T11:17:21.170161974Z\",\n        \"feedback\": {\n            \"buyer\": {\n                \"createdBy\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"rating\": 0,\n                \"comments\": \"\"\n            },\n            \"seller\": {\n                \"createdBy\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"rating\": 0,\n                \"comments\": \"\"\n            }\n        },\n        \"buyerConfirmationTime\": null,\n        \"sellerConfirmationTime\": null,\n        \"statusActions\": null,\n        \"offers\": [\n            {\n                \"id\": \"\",\n                \"totalPrice\": 0,\n                \"from_id\": \"\",\n                \"order_id\": \"\",\n                \"buyer_id\": \"\",\n                \"privateBuyerOrgId\": \"\",\n                \"amount\": 0,\n                \"currency\": \"\",\n                \"created_at\": null,\n                \"created_by\": \"\",\n                \"approved_at\": null,\n                \"approved_by\": \"\",\n                \"buy_requested_at\": null,\n                \"buy_requested_by\": \"\",\n                \"buy_approved_at\": null,\n                \"buy_approved_by\": \"\",\n                \"expires_at\": null,\n                \"status\": \"\",\n                \"status_updated_by\": \"\",\n                \"status_updated_at\": null,\n                \"contract_doc\": {\n                    \"buyerTxHash\": \"\",\n                    \"sellerTxHash\": \"\",\n                    \"file\": {\n                        \"name\": \"3834_001.pdf\",\n                        \"mime_type\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/aJ1NrmXzerVc5y9osample.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"status\": \"\",\n                    \"status_updated_at\": null,\n                    \"created_at\": \"2019-07-18T11:17:21.170161974Z\",\n                    \"approvedBy\": \"\",\n                    \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                    \"updated_at\": null,\n                    \"comments\": \"\",\n                    \"confirmedAt\": null,\n                    \"confirmedBy\": \"\"\n                },\n                \"buyer_contract_doc\": {\n                    \"buyerTxHash\": \"\",\n                    \"sellerTxHash\": \"\",\n                    \"file\": null,\n                    \"status\": \"\",\n                    \"status_updated_at\": null,\n                    \"created_at\": null,\n                    \"approvedBy\": \"\",\n                    \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                    \"updated_at\": null,\n                    \"comments\": \"\",\n                    \"confirmedAt\": null,\n                    \"confirmedBy\": \"\"\n                },\n                \"comments\": \"\",\n                \"updatedAt\": \"2019-07-18T11:17:21.170685021Z\"\n            }\n        ],\n        \"buyer_org_id\": \"\",\n        \"buyer_confirmed_contrcat\": {\n            \"file\": {\n                \"name\": \"\",\n                \"mime_type\": \"\",\n                \"path\": \"\",\n                \"url\": \"\",\n                \"size\": 0,\n                \"checksum\": \"\"\n            },\n            \"status\": \"\",\n            \"status_updated_at\": null,\n            \"created_at\": null,\n            \"updated_at\": null\n        },\n        \"mainEscrow\": {\n            \"id\": \"\",\n            \"buyer\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            },\n            \"seller\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            },\n            \"cbo\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"assetPegTransactionId\": \"\",\n                \"dollarPegTransactionId\": \"\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"proofOfFiatTx\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\"\n            },\n            \"cso\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"assetPegTransactionId\": \"\",\n                \"dollarPegTransactionId\": \"\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                }\n            }\n        },\n        \"buyerEscrow\": {\n            \"id\": \"\",\n            \"buyer\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            },\n            \"cbo\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            },\n            \"obl_docs\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"status\": \"\",\n                \"updated_at\": null,\n                \"updated_by\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null\n            },\n            \"cso\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            },\n            \"seller\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            }\n        },\n        \"sellerEscrow\": {\n            \"id\": \"\",\n            \"seller\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            },\n            \"cso\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"csoTxId\": \"\",\n                \"confirmed_tx_id\": \"\",\n                \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                \"awb_number\": \"\",\n                \"status\": \"\",\n                \"docStatus\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null,\n                \"updatedAt\": \"0001-01-01T00:00:00Z\"\n            },\n            \"obl_docs\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"status\": \"\",\n                \"updated_at\": null,\n                \"updated_by\": \"\",\n                \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                \"receivedBy\": \"\",\n                \"serviceName\": \"\",\n                \"link\": \"\",\n                \"trackingNumber\": \"\",\n                \"file\": {\n                    \"name\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"mimetype\": \"\"\n                },\n                \"scannedFiles\": null\n            }\n        },\n        \"comdexEscrow\": {\n            \"cso\": {\n                \"createdBy\": \"\",\n                \"ipAddress\": \"\",\n                \"status\": \"\",\n                \"transactionId\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"transactionReceipt\": {\n                    \"transactionId\": \"\",\n                    \"ipAddress\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\"\n                }\n            },\n            \"buyer\": {\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"status\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\"\n            },\n            \"cbo\": {\n                \"status\": \"\",\n                \"ipAddress\": \"\",\n                \"transactionId\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"createdBy\": \"\",\n                \"transactionReceipt\": {\n                    \"transactionId\": \"\",\n                    \"ipAddress\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\"\n                }\n            }\n        },\n        \"settlementDocs\": {\n            \"buyer\": {\n                \"status\": \"\",\n                \"docs\": null,\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                \"txId\": \"\",\n                \"ipAddress\": \"\",\n                \"createdBy\": \"\",\n                \"createdOrgBy\": \"\",\n                \"updatedBy\": \"\"\n            },\n            \"seller\": {\n                \"status\": \"\",\n                \"docs\": null,\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                \"txId\": \"\",\n                \"ipAddress\": \"\",\n                \"createdBy\": \"\",\n                \"createdOrgBy\": \"\"\n            },\n            \"comdex\": {\n                \"comdexType\": \"\",\n                \"status\": \"\",\n                \"docs\": null,\n                \"approvedDocs\": null,\n                \"approvedComdexType\": \"\",\n                \"createdAt\": \"0001-01-01T00:00:00Z\",\n                \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                \"txId\": \"\",\n                \"ipAddress\": \"\",\n                \"createdBy\": \"\",\n                \"createdOrgBy\": \"\",\n                \"approvedBy\": \"\",\n                \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                \"rejectedBy\": \"\",\n                \"rejectedAt\": \"0001-01-01T00:00:00Z\",\n                \"rejectedComdexType\": \"\",\n                \"updatedBy\": \"\",\n                \"updatedOrgBy\": \"\"\n            }\n        },\n        \"comdexCommission\": 0.01,\n        \"totalTaxes\": 0,\n        \"sendOblDocTo\": \"\",\n        \"isSettlementRequired\": false,\n        \"privateBuyers\": null,\n        \"buyerProofOfFiat\": {\n            \"txHash\": \"\",\n            \"sellerTxHash\": \"\",\n            \"status\": \"\",\n            \"createdAt\": \"0001-01-01T00:00:00Z\",\n            \"createdBy\": \"\",\n            \"approvedAt\": \"0001-01-01T00:00:00Z\",\n            \"approvedBy\": \"\",\n            \"file\": {\n                \"name\": \"\",\n                \"path\": \"\",\n                \"url\": \"\",\n                \"mimetype\": \"\"\n            }\n        },\n        \"negotiatedAt\": \"0001-01-01T00:00:00Z\",\n        \"comdexPaymentBy\": \"\",\n        \"tradeType\": \"\"\n\t},\n\tmessage:\"Obl details are added successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting wallet info</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Wallet-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Wallet not found,please create your own wallet\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Wallet-Info-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting wallet info\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "organization-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Zone-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization zone id not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Admin-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching admin of organization\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Files-Missing-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Some files are missing\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting user details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Asset-Type-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Asset type not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting asset type\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Creation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while creating the order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Satatus-Action-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the status action\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/offers/{offerId}/contract/document/seller/approve",
    "title": "Seller approves buyer contract document",
    "version": "0.2.0",
    "name": "ApproveBuyerContractDocumnet",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OfferId",
            "description": ""
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>Blockchain Acoount password</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Order approved suucessfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occurred while getting order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OfferId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occurred while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Contract-Doc-Approve-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Buyer didn't uploaded contract documnet yet\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Approve-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"This order was already approved\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in a state to update\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/offers/{offerId}/seller/contract/doc/approve",
    "title": "",
    "name": "ApproveContractDocBySeller",
    "version": "0.2.0",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "offerId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage:\"Updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting single offer</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OfferId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OfferId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Offer-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting single offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Offer-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Offer is not in state to update\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Contract-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating buyer contract doc status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/buyer/feedback",
    "title": "Buyer feedback",
    "version": "0.2.0",
    "name": "BuyerFeedback",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrganizationId",
            "description": "<p>OrganizationId</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId",
            "description": "<p>OrderId</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "rating",
            "description": "<p>Rating</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n   \"Success\": \"true\",\n\t \"Message\" : \"Updated successfully\",\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in state to take feedback\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Feedback-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/negotiations.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/offers/{offerId}/approve",
    "title": "CBO approves Accepted offer",
    "version": "0.2.0",
    "name": "BuyerOrgApprovesAcceptOffer",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId",
            "description": "<p>OrderId</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "offeId",
            "description": "<p>OffeId</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n   success: \"true\",\n\t message : \"Offer approved successfully\",\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting single offer</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OfferId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OfferId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Offer-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting single offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Offer-Approved-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already approved the offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Already-Accepeted-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already accepeted\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Approve-Offer-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the approve offer status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Get-Buyer-Assets-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting buyer assets\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Insufficient-Funds-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Insufficient funds to accept the offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Seller-Wallet-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching seller wallet address\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Initiating-Escrow-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while initiating ESCROW to lock buyer funds\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the main escrow in order\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/negotiations.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/buyer/assets/cso",
    "title": "Buyer send assets to cso",
    "name": "BuyerSendsAssetsToCso",
    "version": "0.2.0",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t success: \"true\",\n\t message:\"Sent successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Already-Accepted-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already accepted\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Buyer-Wallet-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while getting buyer wallet\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Cso-Wallet-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while getting cso wallet\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Get-TransactionId-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while getting transaction id\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating order status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/buyer/fiat",
    "title": "Buyer uploads proof of fiat",
    "version": "0.2.0",
    "name": "BuyerUploadsProofOfFiat",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "doc",
            "optional": false,
            "field": "file",
            "description": "<p>File to be uploaded</p>"
          },
          {
            "group": "Request formdata",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>Blockchain Acoount password</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Transaction receipt uploaded successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occurred while getting order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OfferId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occurred while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Proof-Of-Fiat-Approve-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Seller didn't approve contract documnet yet\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Approve-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"This order was already approved\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in a state to update\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/obl",
    "title": "Update physical obl",
    "version": "0.2.0",
    "name": "CBOUpdatesPhysicalObl",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId.",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while updating physical obl docs status</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Docs-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: Error while updating the escrow cbo physical docs status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/cbo/transaction/receipt",
    "title": "Cbo uploads Txreceipt",
    "name": "CBOUploadsTransactionReceipt",
    "version": "0.2.0",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "file",
            "optional": false,
            "field": "file",
            "description": "<p>TxReceipt</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t success: \"true\",\n\t message:\"Updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while occured decoding the file</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"File is required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while occured decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Cso didn't sent asset peg\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Already-Accepted-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already accepted\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Escrow-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the comdex escrow status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Escrow-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the comdex escrow status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/cso/transaction/receipt/approve",
    "title": "Cso approves Txreceipt",
    "name": "CSOApproveTransactionReceipt",
    "version": "0.2.0",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "file",
            "optional": false,
            "field": "file",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t success: \"true\",\n\t message:\"Approved successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while occured decoding the file</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"File is required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Already-Accepted-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already accepted the transaction receipt\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Cbo didn't update bank transaction receipt\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Get-Wallet-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting wallet address\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Send-Asset-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while sending asset_pegs to escrow wallet\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Comdex-Escrow-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the comdex escrow status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/cso/assets/cbo",
    "title": "CSO sends cUSD to CSO",
    "name": "CSoSendsDollarPegToCBo",
    "version": "0.2.0",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t success: \"true\",\n\t message:\"Successfully sent to cbo\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating wallet password</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Incorrect wallet password\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"CSO already sent asset peg\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Cso-Wallet-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting cso wallet\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Cbo-Wallet-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting cbo wallet\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Lock-Buyer-Funds-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while initiating ESCROW to lock buyer funds\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Escrow-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the comdex escrow status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/obl/docs/confirm",
    "title": "confirm obl docs",
    "version": "0.2.0",
    "name": "ConfirmOblDocs",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \tsuccess: \"true\",\n\t\tmessage: \"Updated successfully\",\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Unauthorized-Error-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\tsuccess:\"false\",\n\tmessage: \"Not authorized to confirm\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the order\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/buyer/confirm",
    "title": "confirms order",
    "version": "0.2.0",
    "name": "ConfirmOrderByBuyer",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": ""
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n   success: \"true\",\n\t message : \"Updated successfully\",\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while fetching order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Already-Accepted-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already accepted\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Status-Action-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the status action\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/negotiations.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/seller/confirm",
    "title": "Seller confirms the order",
    "version": "0.2.0",
    "name": "ConfirmOrderBySeller",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId.",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId.",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n   \"Success\": \"true\",\n\t \"Message\" : \"Updated successfully\",\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while confirming order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/negotiations.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/offers/{offerId}/contract/document/seller/confirm",
    "title": "Seller confirms buyer contract document",
    "version": "0.2.0",
    "name": "ConfirmsBuyerContractDocumnet",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OfferId",
            "description": ""
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>Blockchain Acoount password</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"You have confirmed buyer contract document\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occurred while getting order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OfferId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occurred while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Contract-Doc-Confirm-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Buyer didn't uploaded contract document yet\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Approve-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"This order was already approved\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in a state to update\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "POST",
    "url": "/orders/{orderId}/offers/{offerId}/negotiations",
    "title": "Create negotiation",
    "version": "0.2.0",
    "name": "CrateCounterOffer",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "offerId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "amount",
            "description": "<p>Amount.</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "comment",
            "description": "<p>Comment.</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "currency",
            "description": "<p>Currency.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: \"true\",\n\tmessage\": \"Created negotiation successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while creating negotiation</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OfferId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OfferId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Wallet-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"User doesn't have wallet\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Offer-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Offer not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Insufficient-Funds-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You don't have sufficient balance to create the negotiation\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Offer-Not-Active-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Offer is not active\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Fetch-User-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while fetching user name\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Fetch-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while fetching organization details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while updating order status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Create-Negotiation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while creating the negoation\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/negotiations.go",
    "groupTitle": "Orders"
  },
  {
    "type": "POST",
    "url": "/orders/{orderId}/negotiations/{negotiationId}",
    "title": "Create Negotiation offer",
    "version": "0.2.0",
    "name": "CreateNegotiationOffer",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "NegotiationId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "amount",
            "description": "<p>Amount</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \t\"success\" : \"true\",\n\t\t\"message\" : \"Created Successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while fetching order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NegotiationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"negotiationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Fetch-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while fetching order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Invalid order status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Ftech-Negotiation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while fetching negotiation\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Negotiation-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Negotiation not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Negotiation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Unable to update negotiation offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Offer-Creation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while creating offer for the negotation\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/negotiations.go",
    "groupTitle": "Orders"
  },
  {
    "type": "POST",
    "url": "/orders/{orderId}/offers",
    "title": "Create new offer",
    "version": "0.2.0",
    "name": "CreateNewOffer",
    "group": "Orders",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "optional": false,
            "field": "contractDoc",
            "description": "<p>file with key contractDoc</p>"
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "amount",
            "description": "<p>Amount.</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "currency",
            "description": "<p>Currency.</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commets",
            "description": "<p>Comments.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: \"true\",\n\tmessage : \"Offer created successfully\",\n  data:\t{\n\t\t\t\"orderId\": \"\",\n\t\t\t\"amount\" :  0.0,\n\t\t\t\"currency\" :  \"\",\n\t\t\t\"comments\" :  \"\",\n\t\t\t\"contractDoc\" : {\n\t\t\t\t\"file\" : {\n\t\t\t\t\t\"name\" : \"\",\n\t\t\t\t\t\"mimeType\" : \"\",\n\t\t\t\t\t\"path\" : \"\",\n\t\t\t\t\t\"URL\" : \"\",\n\t\t\t\t\t\"size\" : NumberLong(0),\n\t\t\t\t\t\"checksum\" : \"\"\n\t\t\t\t},\n\t\t\t\t\"status\" : \"\",\n\t\t\t\t\"statusUpdatedAt\" : ,\n\t\t\t\t\"createdAt\" : ,\n\t\t\t\t\"approvedAt\" : ,\n\t\t\t\t\"updatedAt\" :\n\t\t\t}\n\n\t\t}\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while decoding the file</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "ContractDoc-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"ContractDoc is required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Fetch-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while fetching order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Creation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Your are not allowed to create new offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Offer-Suspend-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while suspending offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Offer-Creation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while creating offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Status-Action-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the status action\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/offers.go",
    "groupTitle": "Orders"
  },
  {
    "type": "POST",
    "url": "/organizations/{organizationId}/orders",
    "title": "Create new order",
    "version": "0.2.0",
    "name": "CreateOrder",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "commodity",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "commodity.name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.quality",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.assetTypeId",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "commodity.delivery_term",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "commodity.quantity",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "commodity.amount",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "commodity.date_of_shipment",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "commodity.shipment_period",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "commodity.total_shipment_value",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "commodity.port_of_loading",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_loading.port",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_loading.country",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "commodity.port_of_discharge",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_discharge.port",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_discharge.country",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "obl_details",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.bill_number",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.shipper_name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.shipper_address",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.receiver_name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.receiver_address",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "time",
            "optional": false,
            "field": "obl_details.date_of_shipping",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "obl_details.number_of_shipping_units",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.freight_classification",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.exact_weight_of_consignment",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "obl_details.declared_value_of_asset",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "[]Object",
            "optional": false,
            "field": "docs_details",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.type",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.status",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "docs_details.file",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.type",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.mimetype",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.url",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "listing_type",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "contractId",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "[]string",
            "optional": false,
            "field": "trader_emails",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 201 StatusCreated\n{\n\tsuccess: \"true\",\n\tdata:{\n\t\t\"id\":\n\t\t\"sellerId\":\n\t\t\"sellerName\":\n\t\t\"sellerOrgName\":\n\t\t\"zoneId\":\n\t\t\"sellerAddress\":\n\t\t\"organizationId\":\n\t\t\"contractId\":\n\t\t\"csoOrgName\":\n\t\t\"csoOrgAddress\":\n\t\t\"CSOId\":\n\t\t\"commodity\": {\n\t\t\t\"name\":\n\t\t\t\"assetTypeName\":\n\t\t\t\"assetTypeId\":\n\t\t\t\"quality\":\n\t\t\t\"unitsOfMeasurement\":\n\t\t\t\"deliveryTerm\":\n\t\t\t\"quantity\":\n\t\t\t\"portOfLoading\": {\n\t\t\t\t\"port\":\n\t\t\t\t\"country\":\n\t\t\t},\n\t\t\t\"dateOfShipment\":\n\t\t\t\"portOfDischarge\": {\n\t\t\t\t\"port\":\n\t\t\t\t\"country\":\n\t\t\t},\n\t\t\t\"shipmentPeriod\":\n\t\t\t\"totalShipmentValue\":\n\t\t},\n\t\t\"oblDetails\":{\n\t\t\t\"billNumber\":\n\t\t\t\"shipperName\":\n\t\t\t\"shipperAddress\":\n\t\t\t\"receiverName\":\n\t\t\t\"receiverAddress\":\n\t\t\t\"dateOfShipping\":\n\t\t\t\"numberOfShippingUnits\":\n\t\t\t\"declaredValueOfAsset\":\n\t\t},\n\t\t\"listingType\":\n\t\tDocs:        {\n\t\t},\n\t\t\"status\":\n\t\t\"statusUpdatedAt\":\n\t\t\"createdAt\":\n\t\t\"updatedAt\":\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting wallet info</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Wallet-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Wallet not found,please create your own wallet\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Wallet-Info-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting wallet info\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "organization-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Zone-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization zone id not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Admin-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching admin of organization\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Files-Missing-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Some files are missing\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting user details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Asset-Type-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Asset type not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting asset type\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Creation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while creating the order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Satatus-Action-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the status action\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/admin/orders",
    "title": "Get all orders",
    "version": "0.2.0",
    "name": "GetAllOrders",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \tsuccess: \"true\",\n\t\tdata:[{\n            \"id\": \"5bf416f6c55fd43ab859cf3c\",\n            \"name\": \"\",\n            \"seller_id\": \"5beda8b7c55fd46c66bbc24f\",\n            \"sellerName\": \"\",\n            \"sellerOrgName\": \"Singapore LP Org\",\n            \"sellerAddress\": \"Singapore,\\nPhase 2,\\nBlock A\",\n            \"zoneId\": \"5b9fcee7754df2cefbde73e5\",\n            \"csoOrgName\": \"Comdex Singapore\",\n            \"csoOrgAddress\": \"105 Sims Ave, Singapore 387429\",\n            \"organization_id\": \"5beda971c55fd46c66bbc250\",\n            \"contractId\": \"SSG111810\",\n            \"csoid\": \"5ba35d4f35151b44c1ad9144\",\n            \"buyer_id\": \"5bfbf5e4c55fd42472094536\",\n            \"buyer_zone_id\": \"5ba38d51754df2cefbe47eb1\",\n            \"buyerAddress\": \"vfr3e2wa\",\n            \"buyerName\": \"\",\n            \"buyerOrgName\": \"u8gdwhd\",\n            \"cboName\": \"Comdex Malaysia\",\n            \"cboOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n            \"cboid\": \"5ba39b5c35151b50bc0ccb33\",\n            \"commodity\": {\n                \"name\": \"bc3\",\n                \"assetTypeId\": \"5ba3565904809ddf6a340165\",\n                \"assetTypeName\": \"COAL\",\n                \"quality\": \"A+\",\n                \"delivery_term\": \"FOB\",\n                \"quantity\": 5,\n                \"units_of_measurement\": \"MT\",\n                \"amount\": 0,\n                \"port_of_loading\": {\n                    \"port\": \"port1\",\n                    \"country\": \"country1\"\n                },\n                \"date_of_shipment\": \"2018-11-20T19:44:00+05:30\",\n                \"port_of_discharge\": {\n                    \"port\": \"port2\",\n                    \"country\": \"country2\"\n                },\n                \"shipment_period\": \"2018-11-20T19:44:00+05:30\",\n                \"total_shipment_value\": 50\n            },\n            \"obl_details\": {\n                \"bill_number\": \"12345\",\n                \"shipper_name\": \"Prathyusha\",\n                \"shipper_address\": \"address\",\n                \"receiver_name\": \"notify\",\n                \"receiver_address\": \"notify party address\",\n                \"date_of_shipping\": \"2018-11-20T19:44:33+05:30\",\n                \"number_of_shipping_units\": 5,\n                \"freight_classification\": \"\",\n                \"exact_weight_of_consignment\": \"\",\n                \"declared_value_of_asset\": 50\n            },\n            \"listing_type\": \"PUBLIC\",\n            \"docs\": [\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3d\",\n                    \"file\": {\n                        \"name\": \"comDex.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/QEY0A1Avu48pxRYLcomDex.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"copyOfObl\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                },\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3e\",\n                    \"file\": {\n                        \"name\": \"comDex.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/Wl9tzQXCgoi5avWhcomDex.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"invoice\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                },\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3f\",\n                    \"file\": {\n                        \"name\": \"Dip-5.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/QF5esD7ubbVltMkvDip-5.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"packingList\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                }\n            ],\n            \"couriers\": [],\n            \"numberOfAssetPeg\": 5,\n            \"numberOfFiatPeg\": 50,\n            \"escrows\": [],\n            \"status\": \"BUYER_ACCEPTED\",\n            \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n            \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n            \"updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n            \"feedback\": {\n                \"buyer\": {\n                    \"createdBy\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"rating\": 0,\n                    \"comments\": \"\"\n                },\n                \"seller\": {\n                    \"createdBy\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"rating\": 0,\n                    \"comments\": \"\"\n                }\n            },\n            \"buyerConfirmationTime\": null,\n            \"sellerConfirmationTime\": null,\n            \"statusActions\": [\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"CREATE_NEW_ORDER\",\n                    \"previousState\": \"INITIAL\",\n                    \"nextState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                    \"actionAt\": \"2018-11-20T19:45:18.85+05:30\",\n                    \"actionBy\": \"5beda8b7c55fd46c66bbc24f\"\n                },\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"ACCEPT\",\n                    \"previousState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                    \"nextState\": \"LISTED_FOR_TRADE\",\n                    \"actionAt\": \"2018-11-20T19:45:36.902+05:30\",\n                    \"actionBy\": \"5ba39d1035151b50bc0ccb36\"\n                },\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"ACCEPT\",\n                    \"previousState\": \"LISTED_FOR_TRADE\",\n                    \"nextState\": \"IN_MAIN_ESCROW\",\n                    \"actionAt\": \"2018-11-27T15:17:27.952+05:30\",\n                    \"actionBy\": \"5bfbf5e4c55fd42472094536\"\n                }\n            ],\n            \"offers\": [\n                {\n                    \"id\": \"5bf416f6c55fd43ab859cf40\",\n                    \"totalPrice\": 50,\n                    \"from_id\": \"\",\n                    \"order_id\": \"\",\n                    \"buyer_id\": \"\",\n                    \"privateBuyerOrgId\": \"\",\n                    \"amount\": 10,\n                    \"currency\": \"USD\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"created_by\": \"5beda8b7c55fd46c66bbc24f\",\n                    \"approved_at\": null,\n                    \"approved_by\": \"\",\n                    \"buy_requested_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"buy_requested_by\": \"\",\n                    \"buy_approved_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"buy_approved_by\": \"5bfbf5e4c55fd42472094536\",\n                    \"expires_at\": null,\n                    \"status\": \"BUYER_ACCEPTED\",\n                    \"status_updated_by\": \"\",\n                    \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"contract_doc\": {\n                        \"file\": {\n                            \"name\": \"comDex.pdf\",\n                            \"mime_type\": \"application/pdf\",\n                            \"path\": \"\",\n                            \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"APPROVED_BY_COMDEX\",\n                        \"status_updated_at\": null,\n                        \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                        \"approvedBy\": \"\",\n                        \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                        \"updated_at\": null\n                    },\n                    \"buyer_contract_doc\": {\n                        \"file\": {\n                            \"name\": \"comDex.pdf\",\n                            \"mime_type\": \"application/pdf\",\n                            \"path\": \"\",\n                            \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"WAITING_FOR_SELLER_APPROVAL\",\n                        \"status_updated_at\": null,\n                        \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                        \"approvedBy\": \"\",\n                        \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                        \"updated_at\": null\n                    },\n                    \"comments\": \"\"\n                }\n            ],\n            \"buyer_org_id\": \"5bfbf67bc55fd428df64381f\",\n            \"buyer_confirmed_contrcat\": {\n                \"file\": {\n                    \"name\": \"\",\n                    \"mime_type\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"size\": 0,\n                    \"checksum\": \"\"\n                },\n                \"status\": \"\",\n                \"status_updated_at\": null,\n                \"created_at\": null,\n                \"updated_at\": null\n            },\n            \"mainEscrow\": {\n                \"id\": \"\",\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"5bfd12afc55fd453cdbe3ad0\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"ACCEPTED\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"createdBy\": \"5bfbf5e4c55fd42472094536\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"seller\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cbo\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"assetPegTransactionId\": \"\",\n                    \"dollarPegTransactionId\": \"\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"proofOfFiatTx\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\"\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"assetPegTransactionId\": \"\",\n                    \"dollarPegTransactionId\": \"\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    }\n                }\n            },\n            \"buyerEscrow\": {\n                \"id\": \"\",\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cbo\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"obl_docs\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"updated_at\": null,\n                    \"updated_by\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                }\n            },\n            \"sellerEscrow\": {\n                \"id\": \"\",\n                \"seller\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"5bf41708c55fd43ab859cf42\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"RELEASED_ASSET_PEG\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"2018-11-20T19:45:36.898+05:30\",\n                    \"createdBy\": \"5ba39d1035151b50bc0ccb36\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"obl_docs\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"updated_at\": null,\n                    \"updated_by\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                }\n            },\n            \"comdexEscrow\": {\n                \"cso\": {\n                    \"createdBy\": \"\",\n                    \"ipAddress\": \"\",\n                    \"status\": \"\",\n                    \"transactionId\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"transactionReceipt\": {\n                        \"transactionId\": \"\",\n                        \"ipAddress\": \"\",\n                        \"file\": {\n                            \"name\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"mimetype\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"createdAt\": \"0001-01-01T00:00:00Z\"\n                    }\n                },\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\"\n                },\n                \"cbo\": {\n                    \"status\": \"\",\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"transactionReceipt\": {\n                        \"transactionId\": \"\",\n                        \"ipAddress\": \"\",\n                        \"file\": {\n                            \"name\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"mimetype\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"createdAt\": \"0001-01-01T00:00:00Z\"\n                    }\n                }\n            }\n       }]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occurred while getting order details</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Orders not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occurred while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Orders-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Orders not found\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/users/{usersId}/asset/reports",
    "title": "Get assetType reports",
    "version": "0.2.0",
    "name": "GetAssetTypeReports",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tdata: [\n\t\t  {\n            \"_id\": {\n                \"assetId\": \"5ba8ec180b4a8b44cabce9e5\",\n                \"name\": \"PALM OIL\"\n            },\n            \"buy_count\": 1,\n            \"sell_count\": 2\n        },\n        {\n            \"_id\": {\n                \"assetId\": \"5ba3565904809ddf6a340165\",\n                \"name\": \"COAL\"\n            },\n            \"buy_count\": 1,\n            \"sell_count\": 29\n        }\n\t],\n\tmessage:\"\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while getting asset reports</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "UserId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"UserId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found in order\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Asset-reports-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while getting assetType reports\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/commodity/analytics",
    "title": "Get commodity analytcis",
    "version": "0.2.0",
    "name": "GetCommodityAnalytics",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tdata: [\n\t\t {\n            \"_id\": {\n                \"assetId\": \"5ba3565904809ddf6a340165\",\n                \"name\": \"COAL\",\n                \"quality\": \"A++\"\n            },\n            \"priceTotal\": 25000562.5,\n            \"quantityTotal\": 135\n        },\n        {\n            \"_id\": {\n                \"assetId\": \"5ba3565904809ddf6a340165\",\n                \"name\": \"COAL\",\n                \"quality\": \"A+\"\n            },\n            \"priceTotal\": 228.35,\n            \"quantityTotal\": 32.5\n        },\n        {\n            \"_id\": {\n                \"assetId\": \"5ba8ec180b4a8b44cabce9e5\",\n                \"name\": \"PALM OIL\",\n                \"quality\": \"A+\"\n            },\n            \"priceTotal\": 68.27,\n            \"quantityTotal\": 9.45\n        },\n        {\n            \"_id\": {\n                \"assetId\": \"5ba3565904809ddf6a340165\",\n                \"name\": \"COAL\",\n                \"quality\": \"B+\"\n            },\n            \"priceTotal\": 7.35,\n            \"quantityTotal\": 4.9\n        }\n\t]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while getting commodity analytics</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found in order\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Commodity-Analytics-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while getting commodity analytics\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/contractId",
    "title": "Get contractId",
    "name": "GetContractId",
    "version": "0.2.0",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess:\"true\",\n\tdata:{\n\t\t\"contractId\":\"\"\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Organization not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting organization</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Zone-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Zone not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Fetch-Zone-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching zone\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order count\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/counterparties/{counterPartyId}/orders",
    "title": "Get counterparty reports",
    "version": "0.2.0",
    "name": "GetCounterPartyBuyAndSellOrders",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "counterPartyId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tdata: [\n\t\t {\n            \"metaData\": [\n                {\n                    \"total\": 33\n                }\n            ],\n            \"metaDataFilters\": null,\n            \"data\": [\n                {\n                    \"id\": \"5d305537c55fd474573d5458\",\n                    \"pegHash\": \"\",\n                    \"assetTransactionHash\": \"\",\n                    \"assetId\": \"2019-07-18123456\",\n                    \"docsHandleBy\": \"TRADE_DOCS_HANDLE_BY_COMDEX\",\n                    \"name\": \"\",\n                    \"seller_id\": \"5c52c6bdc55fd4483f211e2e\",\n                    \"sellerName\": \"prathyusha lakkireddy\",\n                    \"sellerOrgName\": \"test1234 check org\",\n                    \"sellerAddress\": \"hyd\",\n                    \"zoneId\": \"5ba38d51754df2cefbe47eb1\",\n                    \"csoOrgName\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n                    \"csoOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n                    \"organization_id\": \"5c753ef7c55fd42711bc6cf9\",\n                    \"contractId\": \"12345678\",\n                    \"csoid\": \"5ba39b5c35151b50bc0ccb33\",\n                    \"buyer_id\": \"5c52cba1c55fd4483f211e39\",\n                    \"buyer_zone_id\": \"5ba38d51754df2cefbe47eb1\",\n                    \"buyerAddress\": \"malaysia\",\n                    \"buyerName\": \"buyer trader\",\n                    \"buyerOrgName\": \"malaysia buyer\",\n                    \"cboName\": \"Comdex Malaysia\",\n                    \"cboOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n                    \"cboid\": \"5ba39b5c35151b50bc0ccb33\",\n                    \"commodity\": {\n                        \"name\": \"Bc error2111a1a\",\n                        \"assetTypeId\": \"5ba3565904809ddf6a340165\",\n                        \"assetTypeName\": \"COAL\",\n                        \"quality\": \"A++\",\n                        \"delivery_term\": \"FOB\",\n                        \"quantity\": 5,\n                        \"units_of_measurement\": \"MT\",\n                        \"amount\": 0,\n                        \"port_of_loading\": {\n                            \"port\": \"port1\",\n                            \"country\": \"country1\"\n                        },\n                        \"date_of_shipment\": \"0001-01-01T00:00:00Z\",\n                        \"port_of_discharge\": {\n                            \"port\": \"port2\",\n                            \"country\": \"country2\"\n                        },\n                        \"shipment_period\": \"0001-01-01T00:00:00Z\",\n                        \"total_shipment_value\": 25\n                    },\n                    \"obl_details\": {\n                        \"bill_number\": \"123456\",\n                        \"shipper_name\": \"lp\",\n                        \"shipper_address\": {\n                            \"line1\": \"hyd\",\n                            \"line2\": \"madhapur\",\n                            \"city\": \"hyd\",\n                            \"country\": \"ind\",\n                            \"pincode\": \"503111\",\n                            \"address\": \"hyd,madhapur,hyd,ind,503111\"\n                        },\n                        \"receiver_name\": \"jshd\",\n                        \"receiver_address\": {\n                            \"line1\": \"hyd\",\n                            \"line2\": \"madhapur\",\n                            \"city\": \"hyd\",\n                            \"country\": \"ind\",\n                            \"pincode\": \"503111\",\n                            \"address\": \"hyd,madhapur,hyd,ind,503111\"\n                        },\n                        \"date_of_shipping\": \"0001-01-01T00:00:00Z\",\n                        \"number_of_shipping_units\": 5,\n                        \"freight_classification\": \"\",\n                        \"exact_weight_of_consignment\": \"\",\n                        \"declared_value_of_asset\": 5,\n                        \"invoiceNumber\": \"\",\n                        \"invoiceDate\": \"0001-01-01T00:00:00Z\"\n                    },\n                    \"listing_type\": \"PUBLIC\",\n                    \"docs\": [\n                        {\n                            \"_id\": \"5d305541c55fd474573d545a\",\n                            \"file\": {\n                                \"name\": \"1234rewa\",\n                                \"mime_type\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"uploads/files/aJ1NrmXzerVc5y9osample.pdf\",\n                                \"size\": 0,\n                                \"checksum\": \"\"\n                            },\n                            \"type\": \"copyOfObl\",\n                            \"comments\": \"\",\n                            \"approved_by\": null,\n                            \"approved_at\": null,\n                            \"status\": \"\",\n                            \"created_at\": \"2019-07-18T16:47:21.17+05:30\",\n                            \"updated_at\": \"2019-07-18T16:47:21.17+05:30\"\n                        },\n                        {\n                            \"_id\": \"5d305541c55fd474573d545b\",\n                            \"file\": {\n                                \"name\": \"Code Competition - 1.0 - Vitwit.pdf\",\n                                \"mime_type\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"uploads/files/aJ1NrmXzerVc5y9osample.pdf\",\n                                \"size\": 0,\n                                \"checksum\": \"\"\n                            },\n                            \"type\": \"invoice\",\n                            \"comments\": \"\",\n                            \"approved_by\": null,\n                            \"approved_at\": null,\n                            \"status\": \"\",\n                            \"created_at\": \"2019-07-18T16:47:21.17+05:30\",\n                            \"updated_at\": \"2019-07-18T16:47:21.17+05:30\"\n                        },\n                        {\n                            \"_id\": \"5d305541c55fd474573d545c\",\n                            \"file\": {\n                                \"name\": \"comDex.pdf\",\n                                \"mime_type\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"uploads/files/aJ1NrmXzerVc5y9osample.pdf\",\n                                \"size\": 0,\n                                \"checksum\": \"\"\n                            },\n                            \"type\": \"packingList\",\n                            \"comments\": \"\",\n                            \"approved_by\": null,\n                            \"approved_at\": null,\n                            \"status\": \"\",\n                            \"created_at\": \"2019-07-18T16:47:21.17+05:30\",\n                            \"updated_at\": \"2019-07-18T16:47:21.17+05:30\"\n                        }\n                    ],\n                    \"couriers\": [],\n                    \"numberOfAssetPeg\": 5,\n                    \"numberOfFiatPeg\": 0,\n                    \"escrows\": [],\n                    \"status\": \"TRADE_COMPLETED\",\n                    \"issueAssetFailedComments\": \"\",\n                    \"issueAssetFailedAt\": null,\n                    \"status_updated_at\": \"2019-07-18T16:55:19.679+05:30\",\n                    \"created_at\": \"2019-07-18T16:47:11.533+05:30\",\n                    \"updated_at\": \"2019-07-18T16:47:45.046+05:30\",\n                    \"feedback\": {\n                        \"buyer\": {\n                            \"createdBy\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"rating\": 0,\n                            \"comments\": \"\"\n                        },\n                        \"seller\": {\n                            \"createdBy\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"rating\": 0,\n                            \"comments\": \"\"\n                        }\n                    },\n                    \"buyerConfirmationTime\": null,\n                    \"sellerConfirmationTime\": null,\n                    \"statusActions\": [\n                        {\n                            \"ipAddress\": \"\",\n                            \"action\": \"CREATE_NEW_ORDER\",\n                            \"previousState\": \"INITIAL\",\n                            \"nextState\": \"LISTED_FOR_TRADE\",\n                            \"actionAt\": \"2019-07-18T16:47:25.702+05:30\",\n                            \"actionBy\": \"5c52c6bdc55fd4483f211e2e\"\n                        },\n                        {\n                            \"ipAddress\": \"\",\n                            \"action\": \"ACCEPT\",\n                            \"previousState\": \"LISTED_FOR_TRADE\",\n                            \"nextState\": \"BUYER_ACCEPTED\",\n                            \"actionAt\": \"2019-07-18T16:47:45.048+05:30\",\n                            \"actionBy\": \"5c52cba1c55fd4483f211e39\"\n                        },\n                        {\n                            \"ipAddress\": \"\",\n                            \"action\": \"ACCEPT\",\n                            \"previousState\": \"BUYER_ACCEPTED\",\n                            \"nextState\": \"TRADE_COMPLETED\",\n                            \"actionAt\": \"2019-07-18T16:55:19.679+05:30\",\n                            \"actionBy\": \"5c52c6bdc55fd4483f211e2e\"\n                        }\n                    ],\n                    \"offers\": [\n                        {\n                            \"id\": \"5d305537c55fd474573d5459\",\n                            \"totalPrice\": 25,\n                            \"from_id\": \"\",\n                            \"order_id\": \"\",\n                            \"buyer_id\": \"\",\n                            \"privateBuyerOrgId\": \"\",\n                            \"amount\": 5,\n                            \"currency\": \"USD\",\n                            \"created_at\": \"2019-07-18T16:47:11.533+05:30\",\n                            \"created_by\": \"5c52c6bdc55fd4483f211e2e\",\n                            \"approved_at\": null,\n                            \"approved_by\": \"\",\n                            \"buy_requested_at\": \"2019-07-18T16:47:45.046+05:30\",\n                            \"buy_requested_by\": \"\",\n                            \"buy_approved_at\": \"2019-07-18T16:47:45.046+05:30\",\n                            \"buy_approved_by\": \"5c52cba1c55fd4483f211e39\",\n                            \"expires_at\": null,\n                            \"status\": \"BUYER_ACCEPTED\",\n                            \"status_updated_by\": \"\",\n                            \"status_updated_at\": \"2019-07-18T16:47:45.046+05:30\",\n                            \"contract_doc\": {\n                                \"buyerTxHash\": \"\",\n                                \"sellerTxHash\": \"\",\n                                \"file\": {\n                                    \"name\": \"3834_001.pdf\",\n                                    \"mime_type\": \"\",\n                                    \"path\": \"\",\n                                    \"url\": \"uploads/files/aJ1NrmXzerVc5y9osample.pdf\",\n                                    \"size\": 0,\n                                    \"checksum\": \"\"\n                                },\n                                \"status\": \"\",\n                                \"status_updated_at\": null,\n                                \"created_at\": \"2019-07-18T16:47:21.17+05:30\",\n                                \"approvedBy\": \"\",\n                                \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                                \"updated_at\": null,\n                                \"comments\": \"\",\n                                \"confirmedAt\": null,\n                                \"confirmedBy\": \"\"\n                            },\n                            \"buyer_contract_doc\": {\n                                \"buyerTxHash\": \"\",\n                                \"sellerTxHash\": \"\",\n                                \"file\": {\n                                    \"name\": \"prathyusha.pdf\",\n                                    \"mime_type\": \"application/pdf\",\n                                    \"path\": \"uploads/files/E9YxDMPDFJzZaIlkprathyusha.pdf\",\n                                    \"url\": \"uploads/files/E9YxDMPDFJzZaIlkprathyusha.pdf\",\n                                    \"size\": 0,\n                                    \"checksum\": \"\"\n                                },\n                                \"status\": \"APPROVED_BY_SELLER\",\n                                \"status_updated_at\": null,\n                                \"created_at\": \"2019-07-18T16:47:45.046+05:30\",\n                                \"approvedBy\": \"5c52c6bdc55fd4483f211e2e\",\n                                \"approvedAt\": \"2019-07-18T16:53:17.77+05:30\",\n                                \"updated_at\": null,\n                                \"comments\": \"\",\n                                \"confirmedAt\": \"2019-07-18T16:48:07.355+05:30\",\n                                \"confirmedBy\": \"5c52c6bdc55fd4483f211e2e\"\n                            },\n                            \"comments\": \"\",\n                            \"updatedAt\": \"2019-07-18T16:47:21.17+05:30\"\n                        }\n                    ],\n                    \"buyer_org_id\": \"5c52cc37c55fd4483f211e3a\",\n                    \"buyer_confirmed_contrcat\": {\n                        \"file\": {\n                            \"name\": \"\",\n                            \"mime_type\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"status_updated_at\": null,\n                        \"created_at\": null,\n                        \"updated_at\": null\n                    },\n                    \"mainEscrow\": {\n                        \"id\": \"\",\n                        \"buyer\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        },\n                        \"seller\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        },\n                        \"cbo\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"assetPegTransactionId\": \"\",\n                            \"dollarPegTransactionId\": \"\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"proofOfFiatTx\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\"\n                        },\n                        \"cso\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"assetPegTransactionId\": \"\",\n                            \"dollarPegTransactionId\": \"\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            }\n                        }\n                    },\n                    \"buyerEscrow\": {\n                        \"id\": \"\",\n                        \"buyer\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        },\n                        \"cbo\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        },\n                        \"obl_docs\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"status\": \"\",\n                            \"updated_at\": null,\n                            \"updated_by\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null\n                        },\n                        \"cso\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        },\n                        \"seller\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        }\n                    },\n                    \"sellerEscrow\": {\n                        \"id\": \"\",\n                        \"seller\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        },\n                        \"cso\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        },\n                        \"obl_docs\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"status\": \"\",\n                            \"updated_at\": null,\n                            \"updated_by\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null\n                        }\n                    },\n                    \"comdexEscrow\": {\n                        \"cso\": {\n                            \"createdBy\": \"\",\n                            \"ipAddress\": \"\",\n                            \"status\": \"\",\n                            \"transactionId\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"transactionReceipt\": {\n                                \"transactionId\": \"\",\n                                \"ipAddress\": \"\",\n                                \"file\": {\n                                    \"name\": \"\",\n                                    \"path\": \"\",\n                                    \"url\": \"\",\n                                    \"mimetype\": \"\"\n                                },\n                                \"status\": \"\",\n                                \"createdAt\": \"0001-01-01T00:00:00Z\"\n                            }\n                        },\n                        \"buyer\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"status\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\"\n                        },\n                        \"cbo\": {\n                            \"status\": \"\",\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"transactionReceipt\": {\n                                \"transactionId\": \"\",\n                                \"ipAddress\": \"\",\n                                \"file\": {\n                                    \"name\": \"\",\n                                    \"path\": \"\",\n                                    \"url\": \"\",\n                                    \"mimetype\": \"\"\n                                },\n                                \"status\": \"\",\n                                \"createdAt\": \"0001-01-01T00:00:00Z\"\n                            }\n                        }\n                    },\n                    \"settlementDocs\": {\n                        \"buyer\": {\n                            \"status\": \"\",\n                            \"docs\": [],\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                            \"txId\": \"\",\n                            \"ipAddress\": \"\",\n                            \"createdBy\": \"\",\n                            \"createdOrgBy\": \"\",\n                            \"updatedBy\": \"\"\n                        },\n                        \"seller\": {\n                            \"status\": \"\",\n                            \"docs\": [],\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                            \"txId\": \"\",\n                            \"ipAddress\": \"\",\n                            \"createdBy\": \"\",\n                            \"createdOrgBy\": \"\"\n                        },\n                        \"comdex\": {\n                            \"comdexType\": \"\",\n                            \"status\": \"\",\n                            \"docs\": [],\n                            \"approvedDocs\": [],\n                            \"approvedComdexType\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                            \"txId\": \"\",\n                            \"ipAddress\": \"\",\n                            \"createdBy\": \"\",\n                            \"createdOrgBy\": \"\",\n                            \"approvedBy\": \"\",\n                            \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                            \"rejectedBy\": \"\",\n                            \"rejectedAt\": \"0001-01-01T00:00:00Z\",\n                            \"rejectedComdexType\": \"\",\n                            \"updatedBy\": \"\",\n                            \"updatedOrgBy\": \"\"\n                        }\n                    },\n                    \"comdexCommission\": 0.01,\n                    \"totalTaxes\": 0,\n                    \"sendOblDocTo\": \"\",\n                    \"isSettlementRequired\": false,\n                    \"privateBuyers\": [],\n                    \"buyerProofOfFiat\": {\n                        \"txHash\": \"\",\n                        \"sellerTxHash\": \"\",\n                        \"status\": \"APPROVED\",\n                        \"createdAt\": \"2019-07-18T16:54:41.84+05:30\",\n                        \"createdBy\": \"5c52cba1c55fd4483f211e39\",\n                        \"approvedAt\": \"2019-07-18T16:55:19.679+05:30\",\n                        \"approvedBy\": \"5c52c6bdc55fd4483f211e2e\",\n                        \"file\": {\n                            \"name\": \"sampleInvoice.pdf\",\n                            \"path\": \"uploads/files/sBlp9bDR7WMNexIHsampleInvoice.pdf\",\n                            \"url\": \"uploads/files/sBlp9bDR7WMNexIHsampleInvoice.pdf\",\n                            \"mimetype\": \"application/pdf\"\n                        },\n                        \"sellerApprovesPofComments\": \"\",\n                        \"sellerApprovesPofFailedAt\": null\n                    },\n                    \"negotiatedAt\": \"0001-01-01T00:00:00Z\",\n                    \"comdexPaymentBy\": \"\",\n                    \"tradeType\": \"POST TRADE\",\n                    \"acceptOfferComments\": \"\",\n                    \"acceptOfferFailedAt\": null,\n                    \"sellerConfirmsContractComments\": \"\",\n                    \"sellerConfirmsContractFailedAt\": null,\n                    \"sellerApprovesContractComments\": \"\",\n                    \"sellerApprovesContractFailedAt\": null,\n                    \"buyerUpdatePofComments\": \"\",\n                    \"buyerUpdatePofFailedAt\": null,\n                    \"buyerCreateNegotiationComments\": \"\",\n                    \"buyerCreateNegotiationFailedAt\": null,\n                    \"sellerAcceptNegotiationComments\": \"\",\n                    \"sellerAcceptNegotiationFailedAt\": null,\n                    \"sellerRejectNegotiationComments\": \"\",\n                    \"sellerRejectNegotiationFailedAt\": null\n                }\n            ]\n        }\n\t],\n\t\"message\":\"\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while getting Counter party reports</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "CounterPartyId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"counterPartyId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found in order\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Counterparty-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Counterparty not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Counterparty-reports-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while getting counterparty team reports\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/counter_party_orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/graphs/{assetType}",
    "title": "Get Graph data",
    "name": "GetGraphDetails",
    "version": "0.1.0",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t success: \"true\",\n\t Data:[{\n            \"_id\": \"5c01357ec55fd40d9b245732\",\n            \"assetType\": \"COAL\",\n            \"date\": \"2018-12-10T18:35:02.558+05:30\",\n            \"day\": 30,\n            \"dayPricePercentage\": 100,\n            \"month\": \"12\",\n            \"monthlyPricePercenatge\": 100,\n            \"orderId\": \"5c01005ac55fd42eaaedccaf\",\n            \"priceChange\": -1,\n            \"quantity\": 2,\n            \"unitPrice\": 9,\n            \"year\": 2018,\n            \"yearlyPricePercentage\": 100\n\n\t}]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Order not found\",\n\terrors: [\n\t\t\t{\n\t\t\t\tmessage: \"Order not found\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/markets/assets",
    "title": "Get market details",
    "name": "GetMarketDetails",
    "version": "0.1.0",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t success: \"true\",\n\t Data:[{\n\t\t\t\"_id\" : ObjectId(\"5bfd318cc55fd401bb4a3789\"),\n\t\t\t\"orderId\" : ObjectId(\"5bfd30e4c55fd401bd4a377e\"),\n\t\t\t\"quantity\" : NumberLong(6),\n\t\t\t\"assetType\" : \"PALM OIL\",\n\t\t\t\"unitPrice\" : 5,\n\t\t\t\"day\" : 26,\n\t\t\t\"month\" : 11,\n\t\t\t\"year\" : 2018,\n\t\t\t\"date\" : ISODate(\"2018-11-27T11:59:08.244Z\"),\n\t\t\t\"priceChange\" : -7,\n\t\t\t\"dayPricePercentage\" : -89.9,\n\t\t\t\"monthlyPricePercenatge\" : -90,\n\t\t\t\"yearlyPricePercentage\" : -84.5\n\n\t}]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Order not found\",\n\terrors: [\n\t\t\t{\n\t\t\t\tmessage: \"Order not found\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/me/orders",
    "title": "Get My Orders",
    "version": "0.2.0",
    "name": "GetMyOrders",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \t\"success\": true,\n\t\t\"data\":[{\n         \"id\": \"5bf416f6c55fd43ab859cf3c\",\n         \"name\": \"\",\n         \"seller_id\": \"5beda8b7c55fd46c66bbc24f\",\n         \"sellerName\": \"\",\n         \"sellerOrgName\": \"Singapore LP Org\",\n         \"sellerAddress\": \"Singapore,\\nPhase 2,\\nBlock A\",\n         \"zoneId\": \"5b9fcee7754df2cefbde73e5\",\n         \"csoOrgName\": \"Comdex Singapore\",\n         \"csoOrgAddress\": \"105 Sims Ave, Singapore 387429\",\n         \"organization_id\": \"5beda971c55fd46c66bbc250\",\n         \"contractId\": \"SSG111810\",\n         \"csoid\": \"5ba35d4f35151b44c1ad9144\",\n         \"buyer_id\": \"5bfbf5e4c55fd42472094536\",\n         \"buyer_zone_id\": \"5ba38d51754df2cefbe47eb1\",\n         \"buyerAddress\": \"vfr3e2wa\",\n         \"buyerName\": \"\",\n         \"buyerOrgName\": \"u8gdwhd\",\n         \"cboName\": \"Comdex Malaysia\",\n         \"cboOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n         \"cboid\": \"5ba39b5c35151b50bc0ccb33\",\n         \"commodity\": {\n             \"name\": \"bc3\",\n             \"assetTypeId\": \"5ba3565904809ddf6a340165\",\n             \"assetTypeName\": \"COAL\",\n             \"quality\": \"A+\",\n             \"delivery_term\": \"FOB\",\n             \"quantity\": 5,\n             \"units_of_measurement\": \"MT\",\n             \"amount\": 0,\n             \"port_of_loading\": {\n                 \"port\": \"port1\",\n                 \"country\": \"country1\"\n             },\n             \"date_of_shipment\": \"2018-11-20T19:44:00+05:30\",\n             \"port_of_discharge\": {\n                 \"port\": \"port2\",\n                 \"country\": \"country2\"\n             },\n             \"shipment_period\": \"2018-11-20T19:44:00+05:30\",\n             \"total_shipment_value\": 50\n         },\n         \"obl_details\": {\n             \"bill_number\": \"12345\",\n             \"shipper_name\": \"Prathyusha\",\n             \"shipper_address\": \"address\",\n             \"receiver_name\": \"notify\",\n             \"receiver_address\": \"notify party address\",\n             \"date_of_shipping\": \"2018-11-20T19:44:33+05:30\",\n             \"number_of_shipping_units\": 5,\n             \"freight_classification\": \"\",\n             \"exact_weight_of_consignment\": \"\",\n             \"declared_value_of_asset\": 50\n         },\n         \"listing_type\": \"PUBLIC\",\n         \"docs\": [\n             {\n                 \"_id\": \"5bf416f6c55fd43ab859cf3d\",\n                 \"file\": {\n                     \"name\": \"comDex.pdf\",\n                     \"mime_type\": \"application/pdf\",\n                     \"path\": \"\",\n                     \"url\": \"uploads/files/QEY0A1Avu48pxRYLcomDex.pdf\",\n                     \"size\": 0,\n                     \"checksum\": \"\"\n                 },\n                 \"type\": \"copyOfObl\",\n                 \"comments\": \"Document is valid\",\n                 \"approved_by\": null,\n                 \"approved_at\": null,\n                 \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                 \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                 \"updated_at\": null\n             },\n             {\n                 \"_id\": \"5bf416f6c55fd43ab859cf3e\",\n                 \"file\": {\n                     \"name\": \"comDex.pdf\",\n                     \"mime_type\": \"application/pdf\",\n                     \"path\": \"\",\n                     \"url\": \"uploads/files/Wl9tzQXCgoi5avWhcomDex.pdf\",\n                     \"size\": 0,\n                     \"checksum\": \"\"\n                 },\n                 \"type\": \"invoice\",\n                 \"comments\": \"Document is valid\",\n                 \"approved_by\": null,\n                 \"approved_at\": null,\n                 \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                 \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                 \"updated_at\": null\n             },\n             {\n                 \"_id\": \"5bf416f6c55fd43ab859cf3f\",\n                 \"file\": {\n                     \"name\": \"Dip-5.pdf\",\n                     \"mime_type\": \"application/pdf\",\n                     \"path\": \"\",\n                     \"url\": \"uploads/files/QF5esD7ubbVltMkvDip-5.pdf\",\n                     \"size\": 0,\n                     \"checksum\": \"\"\n                 },\n                 \"type\": \"packingList\",\n                 \"comments\": \"Document is valid\",\n                 \"approved_by\": null,\n                 \"approved_at\": null,\n                 \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                 \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                 \"updated_at\": null\n             }\n         ],\n         \"couriers\": [],\n         \"numberOfAssetPeg\": 5,\n         \"numberOfFiatPeg\": 50,\n         \"escrows\": [],\n         \"status\": \"BUYER_ACCEPTED\",\n         \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n         \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n         \"updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n         \"feedback\": {\n             \"buyer\": {\n                 \"createdBy\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"rating\": 0,\n                 \"comments\": \"\"\n             },\n             \"seller\": {\n                 \"createdBy\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"rating\": 0,\n                 \"comments\": \"\"\n             }\n         },\n         \"buyerConfirmationTime\": null,\n         \"sellerConfirmationTime\": null,\n         \"statusActions\": [\n             {\n                 \"ipAddress\": \"\",\n                 \"action\": \"CREATE_NEW_ORDER\",\n                 \"previousState\": \"INITIAL\",\n                 \"nextState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                 \"actionAt\": \"2018-11-20T19:45:18.85+05:30\",\n                 \"actionBy\": \"5beda8b7c55fd46c66bbc24f\"\n             },\n             {\n                 \"ipAddress\": \"\",\n                 \"action\": \"ACCEPT\",\n                 \"previousState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                 \"nextState\": \"LISTED_FOR_TRADE\",\n                 \"actionAt\": \"2018-11-20T19:45:36.902+05:30\",\n                 \"actionBy\": \"5ba39d1035151b50bc0ccb36\"\n             },\n             {\n                 \"ipAddress\": \"\",\n                 \"action\": \"ACCEPT\",\n                 \"previousState\": \"LISTED_FOR_TRADE\",\n                 \"nextState\": \"IN_MAIN_ESCROW\",\n                 \"actionAt\": \"2018-11-27T15:17:27.952+05:30\",\n                 \"actionBy\": \"5bfbf5e4c55fd42472094536\"\n             }\n         ],\n         \"offers\": [\n             {\n                 \"id\": \"5bf416f6c55fd43ab859cf40\",\n                 \"totalPrice\": 50,\n                 \"from_id\": \"\",\n                 \"order_id\": \"\",\n                 \"buyer_id\": \"\",\n                 \"privateBuyerOrgId\": \"\",\n                 \"amount\": 10,\n                 \"currency\": \"USD\",\n                 \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                 \"created_by\": \"5beda8b7c55fd46c66bbc24f\",\n                 \"approved_at\": null,\n                 \"approved_by\": \"\",\n                 \"buy_requested_at\": \"2018-11-27T15:17:27.937+05:30\",\n                 \"buy_requested_by\": \"\",\n                 \"buy_approved_at\": \"2018-11-27T15:17:27.937+05:30\",\n                 \"buy_approved_by\": \"5bfbf5e4c55fd42472094536\",\n                 \"expires_at\": null,\n                 \"status\": \"BUYER_ACCEPTED\",\n                 \"status_updated_by\": \"\",\n                 \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n                 \"contract_doc\": {\n                     \"file\": {\n                         \"name\": \"comDex.pdf\",\n                         \"mime_type\": \"application/pdf\",\n                         \"path\": \"\",\n                         \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                         \"size\": 0,\n                         \"checksum\": \"\"\n                     },\n                     \"status\": \"APPROVED_BY_COMDEX\",\n                     \"status_updated_at\": null,\n                     \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                     \"approvedBy\": \"\",\n                     \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                     \"updated_at\": null\n                 },\n                 \"buyer_contract_doc\": {\n                     \"file\": {\n                         \"name\": \"comDex.pdf\",\n                         \"mime_type\": \"application/pdf\",\n                         \"path\": \"\",\n                         \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                         \"size\": 0,\n                         \"checksum\": \"\"\n                     },\n                     \"status\": \"WAITING_FOR_SELLER_APPROVAL\",\n                     \"status_updated_at\": null,\n                     \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                     \"approvedBy\": \"\",\n                     \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                     \"updated_at\": null\n                 },\n                 \"comments\": \"\"\n             }\n         ],\n         \"buyer_org_id\": \"5bfbf67bc55fd428df64381f\",\n         \"buyer_confirmed_contrcat\": {\n             \"file\": {\n                 \"name\": \"\",\n                 \"mime_type\": \"\",\n                 \"path\": \"\",\n                 \"url\": \"\",\n                 \"size\": 0,\n                 \"checksum\": \"\"\n             },\n             \"status\": \"\",\n             \"status_updated_at\": null,\n             \"created_at\": null,\n             \"updated_at\": null\n         },\n         \"mainEscrow\": {\n             \"id\": \"\",\n             \"buyer\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"5bfd12afc55fd453cdbe3ad0\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"ACCEPTED\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"2018-11-27T15:17:27.937+05:30\",\n                 \"createdBy\": \"5bfbf5e4c55fd42472094536\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"seller\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"cbo\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"assetPegTransactionId\": \"\",\n                 \"dollarPegTransactionId\": \"\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"proofOfFiatTx\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\"\n             },\n             \"cso\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"assetPegTransactionId\": \"\",\n                 \"dollarPegTransactionId\": \"\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 }\n             }\n         },\n         \"buyerEscrow\": {\n             \"id\": \"\",\n             \"buyer\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"cbo\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"obl_docs\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"status\": \"\",\n                 \"updated_at\": null,\n                 \"updated_by\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"cso\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             }\n         },\n         \"sellerEscrow\": {\n             \"id\": \"\",\n             \"seller\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"cso\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"5bf41708c55fd43ab859cf42\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"RELEASED_ASSET_PEG\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"2018-11-20T19:45:36.898+05:30\",\n                 \"createdBy\": \"5ba39d1035151b50bc0ccb36\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"obl_docs\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"status\": \"\",\n                 \"updated_at\": null,\n                 \"updated_by\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             }\n         },\n         \"comdexEscrow\": {\n             \"cso\": {\n                 \"createdBy\": \"\",\n                 \"ipAddress\": \"\",\n                 \"status\": \"\",\n                 \"transactionId\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"transactionReceipt\": {\n                     \"transactionId\": \"\",\n                     \"ipAddress\": \"\",\n                     \"file\": {\n                         \"name\": \"\",\n                         \"path\": \"\",\n                         \"url\": \"\",\n                         \"mimetype\": \"\"\n                     },\n                     \"status\": \"\",\n                     \"createdAt\": \"0001-01-01T00:00:00Z\"\n                 }\n             },\n             \"buyer\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"status\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\"\n             },\n             \"cbo\": {\n                 \"status\": \"\",\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"transactionReceipt\": {\n                     \"transactionId\": \"\",\n                     \"ipAddress\": \"\",\n                     \"file\": {\n                         \"name\": \"\",\n                         \"path\": \"\",\n                         \"url\": \"\",\n                         \"mimetype\": \"\"\n                     },\n                     \"status\": \"\",\n                     \"createdAt\": \"0001-01-01T00:00:00Z\"\n                 }\n             }\n         }\n       }]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting my orders</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting my orders\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/orders/{orderId}/offers/{offerId}",
    "title": "Get offer",
    "version": "0.2.0",
    "name": "GetOffer",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "offerId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: \"true\",\n\tdata :{\n\t\t\t\"_id\" :,\n\t\t\t\"totalPrice\" : ,\n\t\t\t\"amount\" : ,\n\t\t\t\"currency\" : \" \",\n\t\t\t\"createdAt\" : \"\",\n\t\t\t\"createdBy\" :\"\",\n\t\t\t\"approvedAt\" : ,\n\t\t\t\"buyRequestedAt\" : ,\n\t\t\t\"buyApprovedAt\" : ,\n\t\t\t\"expiresAt\" : ,\n\t\t\t\"status\" : \"\",\n\t\t\t\"statusUpdatedAt\" : ,\n\t\t\t\"contractDoc\" : {\n\t\t\t\t\"file\" : {\n\t\t\t\t\t\"name\" : \"\",\n\t\t\t\t\t\"mimeType\" : \"\",\n\t\t\t\t\t\"path\" : \"\",\n\t\t\t\t\t\"URL\" : \"\",\n\t\t\t\t\t\"size\" : ,\n\t\t\t\t\t\"checksum\" : \"\"\n\t\t\t\t},\n\t\t\t\t\"status\" : \"\",\n\t\t\t\t\"statusUpdatedAt\" : ,\n\t\t\t\t\"createdAt\" : ,\n\t\t\t\t\"approvedAt\" : ,\n\t\t\t\t\"updatedAt\" :\n\t\t\t},\n\t\t\t\"buyerContractDoc\" : {\n\t\t\t\t\"file\" : ,\n\t\t\t\t\"status\" : \"\",\n\t\t\t\t\"statusUpdatedAt\" : ,\n\t\t\t\t\"createdAt\" : ,\n\t\t\t\t\"approvedAt\" : ,\n\t\t\t\t\"updatedAt\" :\n\t\t\t},\n\t\t\t\"comments\" : \"\"\n\t\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting single offer</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Not authorized\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OfferId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OfferId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order and offer not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Offer-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting single offer\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/offers.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/orders/{orderId}",
    "title": "Get order",
    "version": "0.2.0",
    "name": "GetOrder",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\n\tsuccess: \"true\",\n\t\tdata:[{\n            \"id\": \"5bf416f6c55fd43ab859cf3c\",\n            \"name\": \"\",\n            \"seller_id\": \"5beda8b7c55fd46c66bbc24f\",\n            \"sellerName\": \"\",\n            \"sellerOrgName\": \"Singapore LP Org\",\n            \"sellerAddress\": \"Singapore,\\nPhase 2,\\nBlock A\",\n            \"zoneId\": \"5b9fcee7754df2cefbde73e5\",\n            \"csoOrgName\": \"Comdex Singapore\",\n            \"csoOrgAddress\": \"105 Sims Ave, Singapore 387429\",\n            \"organization_id\": \"5beda971c55fd46c66bbc250\",\n            \"contractId\": \"SSG111810\",\n            \"csoid\": \"5ba35d4f35151b44c1ad9144\",\n            \"buyer_id\": \"5bfbf5e4c55fd42472094536\",\n            \"buyer_zone_id\": \"5ba38d51754df2cefbe47eb1\",\n            \"buyerAddress\": \"vfr3e2wa\",\n            \"buyerName\": \"\",\n            \"buyerOrgName\": \"u8gdwhd\",\n            \"cboName\": \"Comdex Malaysia\",\n            \"cboOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n            \"cboid\": \"5ba39b5c35151b50bc0ccb33\",\n            \"commodity\": {\n                \"name\": \"bc3\",\n                \"assetTypeId\": \"5ba3565904809ddf6a340165\",\n                \"assetTypeName\": \"COAL\",\n                \"quality\": \"A+\",\n                \"delivery_term\": \"FOB\",\n                \"quantity\": 5,\n                \"units_of_measurement\": \"MT\",\n                \"amount\": 0,\n                \"port_of_loading\": {\n                    \"port\": \"port1\",\n                    \"country\": \"country1\"\n                },\n                \"date_of_shipment\": \"2018-11-20T19:44:00+05:30\",\n                \"port_of_discharge\": {\n                    \"port\": \"port2\",\n                    \"country\": \"country2\"\n                },\n                \"shipment_period\": \"2018-11-20T19:44:00+05:30\",\n                \"total_shipment_value\": 50\n            },\n            \"obl_details\": {\n                \"bill_number\": \"12345\",\n                \"shipper_name\": \"Prathyusha\",\n                \"shipper_address\": \"address\",\n                \"receiver_name\": \"notify\",\n                \"receiver_address\": \"notify party address\",\n                \"date_of_shipping\": \"2018-11-20T19:44:33+05:30\",\n                \"number_of_shipping_units\": 5,\n                \"freight_classification\": \"\",\n                \"exact_weight_of_consignment\": \"\",\n                \"declared_value_of_asset\": 50\n            },\n            \"listing_type\": \"PUBLIC\",\n            \"docs\": [\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3d\",\n                    \"file\": {\n                        \"name\": \"comDex.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/QEY0A1Avu48pxRYLcomDex.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"copyOfObl\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                },\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3e\",\n                    \"file\": {\n                        \"name\": \"comDex.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/Wl9tzQXCgoi5avWhcomDex.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"invoice\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                },\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3f\",\n                    \"file\": {\n                        \"name\": \"Dip-5.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/QF5esD7ubbVltMkvDip-5.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"packingList\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                }\n            ],\n            \"couriers\": [],\n            \"numberOfAssetPeg\": 5,\n            \"numberOfFiatPeg\": 50,\n            \"escrows\": [],\n            \"status\": \"BUYER_ACCEPTED\",\n            \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n            \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n            \"updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n            \"feedback\": {\n                \"buyer\": {\n                    \"createdBy\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"rating\": 0,\n                    \"comments\": \"\"\n                },\n                \"seller\": {\n                    \"createdBy\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"rating\": 0,\n                    \"comments\": \"\"\n                }\n            },\n            \"buyerConfirmationTime\": null,\n            \"sellerConfirmationTime\": null,\n            \"statusActions\": [\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"CREATE_NEW_ORDER\",\n                    \"previousState\": \"INITIAL\",\n                    \"nextState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                    \"actionAt\": \"2018-11-20T19:45:18.85+05:30\",\n                    \"actionBy\": \"5beda8b7c55fd46c66bbc24f\"\n                },\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"ACCEPT\",\n                    \"previousState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                    \"nextState\": \"LISTED_FOR_TRADE\",\n                    \"actionAt\": \"2018-11-20T19:45:36.902+05:30\",\n                    \"actionBy\": \"5ba39d1035151b50bc0ccb36\"\n                },\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"ACCEPT\",\n                    \"previousState\": \"LISTED_FOR_TRADE\",\n                    \"nextState\": \"IN_MAIN_ESCROW\",\n                    \"actionAt\": \"2018-11-27T15:17:27.952+05:30\",\n                    \"actionBy\": \"5bfbf5e4c55fd42472094536\"\n                }\n            ],\n            \"offers\": [\n                {\n                    \"id\": \"5bf416f6c55fd43ab859cf40\",\n                    \"totalPrice\": 50,\n                    \"from_id\": \"\",\n                    \"order_id\": \"\",\n                    \"buyer_id\": \"\",\n                    \"privateBuyerOrgId\": \"\",\n                    \"amount\": 10,\n                    \"currency\": \"USD\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"created_by\": \"5beda8b7c55fd46c66bbc24f\",\n                    \"approved_at\": null,\n                    \"approved_by\": \"\",\n                    \"buy_requested_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"buy_requested_by\": \"\",\n                    \"buy_approved_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"buy_approved_by\": \"5bfbf5e4c55fd42472094536\",\n                    \"expires_at\": null,\n                    \"status\": \"BUYER_ACCEPTED\",\n                    \"status_updated_by\": \"\",\n                    \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"contract_doc\": {\n                        \"file\": {\n                            \"name\": \"comDex.pdf\",\n                            \"mime_type\": \"application/pdf\",\n                            \"path\": \"\",\n                            \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"APPROVED_BY_COMDEX\",\n                        \"status_updated_at\": null,\n                        \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                        \"approvedBy\": \"\",\n                        \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                        \"updated_at\": null\n                    },\n                    \"buyer_contract_doc\": {\n                        \"file\": {\n                            \"name\": \"comDex.pdf\",\n                            \"mime_type\": \"application/pdf\",\n                            \"path\": \"\",\n                            \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"WAITING_FOR_SELLER_APPROVAL\",\n                        \"status_updated_at\": null,\n                        \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                        \"approvedBy\": \"\",\n                        \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                        \"updated_at\": null\n                    },\n                    \"comments\": \"\"\n                }\n            ],\n            \"buyer_org_id\": \"5bfbf67bc55fd428df64381f\",\n            \"buyer_confirmed_contrcat\": {\n                \"file\": {\n                    \"name\": \"\",\n                    \"mime_type\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"size\": 0,\n                    \"checksum\": \"\"\n                },\n                \"status\": \"\",\n                \"status_updated_at\": null,\n                \"created_at\": null,\n                \"updated_at\": null\n            },\n            \"mainEscrow\": {\n                \"id\": \"\",\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"5bfd12afc55fd453cdbe3ad0\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"ACCEPTED\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"createdBy\": \"5bfbf5e4c55fd42472094536\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"seller\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cbo\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"assetPegTransactionId\": \"\",\n                    \"dollarPegTransactionId\": \"\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"proofOfFiatTx\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\"\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"assetPegTransactionId\": \"\",\n                    \"dollarPegTransactionId\": \"\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    }\n                }\n            },\n            \"buyerEscrow\": {\n                \"id\": \"\",\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cbo\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"obl_docs\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"updated_at\": null,\n                    \"updated_by\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                }\n            },\n            \"sellerEscrow\": {\n                \"id\": \"\",\n                \"seller\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"5bf41708c55fd43ab859cf42\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"RELEASED_ASSET_PEG\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"2018-11-20T19:45:36.898+05:30\",\n                    \"createdBy\": \"5ba39d1035151b50bc0ccb36\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"obl_docs\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"updated_at\": null,\n                    \"updated_by\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                }\n            },\n            \"comdexEscrow\": {\n                \"cso\": {\n                    \"createdBy\": \"\",\n                    \"ipAddress\": \"\",\n                    \"status\": \"\",\n                    \"transactionId\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"transactionReceipt\": {\n                        \"transactionId\": \"\",\n                        \"ipAddress\": \"\",\n                        \"file\": {\n                            \"name\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"mimetype\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"createdAt\": \"0001-01-01T00:00:00Z\"\n                    }\n                },\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\"\n                },\n                \"cbo\": {\n                    \"status\": \"\",\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"transactionReceipt\": {\n                        \"transactionId\": \"\",\n                        \"ipAddress\": \"\",\n                        \"file\": {\n                            \"name\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"mimetype\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"createdAt\": \"0001-01-01T00:00:00Z\"\n                    }\n                }\n            }\n       }]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while fetching order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while fetching order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/orders/{orderId}/negotiations",
    "title": "Get negotiations",
    "version": "0.2.0",
    "name": "GetOrderNegotiations",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId.",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \tsuccess : \"true\",\n\t\tdata:[{\n\t\t\t\t\"_id\" :\n\t\t\t\t\"orderId\" :\n\t\t\t\t\"offerId\" :\n\t\t\t\t\"buyerId\" :\n\t\t\t\t\"buyerName\" :\n\t\t\t\t\"buyerOrgId\" :\n\t\t\t\t\"buyerOrgName\" :\n\t\t\t\t\"statusUpdatedBy\" :\n\t\t\t\t\"amount\" :\n\t\t\t\t\"currency\" :\n\t\t\t\t\"comments\" :\n\t\t\t\t\"contractDoc\": {\n\t\t\t\t\t\"file\" :\n\t\t\t\t\t\"status\" :\n\t\t\t\t\t\"statusUpdatedAt\" :\n\t\t\t\t\t\"createdAt\":\n\t\t\t\t\t\"approvedBy\":\n\t\t\t\t\t\"approvedAt\":\n\t\t\t\t\t\"updatedAt\":\n\t\t\t\t}\n\t\t\t\t\"offers\" :       [{\n\t\t\t\t\t\"_id\":\n\t\t\t\t\t\"totalPrice\":\n\t\t\t\t\t\"fromId\":\n\t\t\t\t\t\"orderId\":\n\t\t\t\t\t\"buyerId\":\n\t\t\t\t\t\"privateBuyerOrgId\":\n\t\t\t\t\t\"amount\":\n\t\t\t\t\t\"currency\":\n\t\t\t\t\t\"createdAt\":\n\t\t\t\t\t\"createdBy\":\n\t\t\t\t\t\"approvedAt\":\n\t\t\t\t\t\"approvedBy\":\n\t\t\t\t\t\"buyRequestedAt\":\n\t\t\t\t\t\"buyRequestedBy\":\n\t\t\t\t\t\"buyApprovedAt\":\n\t\t\t\t\t\"buyApprovedBy\":\n\t\t\t\t\t\"expiresAt\":\n\t\t\t\t\t\"status\":\n\t\t\t\t\t\"statusUpdatedBy\"\n\t\t\t\t\t\"statusUpdatedAt\"\n\t\t\t\t\t\"contractDoc\" :   {\n\t\t\t\t\t\t\"file\":\n\t\t\t\t\t\t\"status\":\n\t\t\t\t\t\t\"statusUpdatedAt\":\n\t\t\t\t\t\t\"createdAt\":\n\t\t\t\t\t\t\"approvedBy\":\n\t\t\t\t\t\t\"approvedAt\":\n\t\t\t\t\t\t\"updatedAt\":\n\t\t\t\t\t}\n\t\t\t\t\t\"buyerContractDoc\" : {\n\t\t\t\t\t\t\"file\":\n\t\t\t\t\t\t\"status\":\n\t\t\t\t\t\t\"statusUpdatedAt\":\n\t\t\t\t\t\t\"createdAt\":\n\t\t\t\t\t\t\"approvedBy\":\n\t\t\t\t\t\t\"approvedAt\":\n\t\t\t\t\t\t\"updatedAt\":\n\t\t\t\t\t}\n\t\t\t\t\t\"comments\" :\n\t\t\t\t}]\n\t\t\t\tAcceptedOfferId\n\t\t\t\tStatus\n\t\t\t\tStatusUpdatedAt\n\t\t\t\tCreatedAt\n\t\t\t\tUpdatedAt\n\t\t}]\n\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting negotitations</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Negotitations-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting negotitations\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/negotiations.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/orders/{orderId}/offers",
    "title": "Get order offers",
    "version": "0.2.0",
    "name": "GetOrderOffers",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: \"true\",\n  \tdata:[{\n\t\t\t\"_id\" :,\n\t\t\t\"totalPrice\" : ,\n\t\t\t\"amount\" : ,\n\t\t\t\"currency\" : \" \",\n\t\t\t\"createdAt\" : \"\",\n\t\t\t\"createdBy\" :\"\",\n\t\t\t\"approvedAt\" : ,\n\t\t\t\"buyRequestedAt\" : ,\n\t\t\t\"buyApprovedAt\" : ,\n\t\t\t\"expiresAt\" : ,\n\t\t\t\"status\" : \"\",\n\t\t\t\"statusUpdatedAt\" : ,\n\t\t\t\"contractDoc\" : {\n\t\t\t\t\"file\" : {\n\t\t\t\t\t\"name\" : \"\",\n\t\t\t\t\t\"mimeType\" : \"\",\n\t\t\t\t\t\"path\" : \"\",\n\t\t\t\t\t\"URL\" : \"\",\n\t\t\t\t\t\"size\" : ,\n\t\t\t\t\t\"checksum\" : \"\"\n\t\t\t\t},\n\t\t\t\t\"status\" : \"\",\n\t\t\t\t\"statusUpdatedAt\" : ,\n\t\t\t\t\"createdAt\" : ,\n\t\t\t\t\"approvedAt\" : ,\n\t\t\t\t\"updatedAt\" :\n\t\t\t},\n\t\t\t\"buyerContractDoc\" : {\n\t\t\t\t\"file\" : ,\n\t\t\t\t\"status\" : \"\",\n\t\t\t\t\"statusUpdatedAt\" : ,\n\t\t\t\t\"createdAt\" : ,\n\t\t\t\t\"approvedAt\" : ,\n\t\t\t\t\"updatedAt\" :\n\t\t\t},\n\t\t\t\"comments\" : \"\"\n\t\t}]\n\t}\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while fetching order offers</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Not authorized\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Fetch-order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while fetching order offers\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/offers.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/orders",
    "title": "Get orders",
    "version": "0.2.0",
    "name": "GetOrders",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \tsuccess: \"true\",\n\t\tdata:[{\n            \"id\": \"5bf416f6c55fd43ab859cf3c\",\n            \"name\": \"\",\n            \"seller_id\": \"5beda8b7c55fd46c66bbc24f\",\n            \"sellerName\": \"\",\n            \"sellerOrgName\": \"Singapore LP Org\",\n            \"sellerAddress\": \"Singapore,\\nPhase 2,\\nBlock A\",\n            \"zoneId\": \"5b9fcee7754df2cefbde73e5\",\n            \"csoOrgName\": \"Comdex Singapore\",\n            \"csoOrgAddress\": \"105 Sims Ave, Singapore 387429\",\n            \"organization_id\": \"5beda971c55fd46c66bbc250\",\n            \"contractId\": \"SSG111810\",\n            \"csoid\": \"5ba35d4f35151b44c1ad9144\",\n            \"buyer_id\": \"5bfbf5e4c55fd42472094536\",\n            \"buyer_zone_id\": \"5ba38d51754df2cefbe47eb1\",\n            \"buyerAddress\": \"vfr3e2wa\",\n            \"buyerName\": \"\",\n            \"buyerOrgName\": \"u8gdwhd\",\n            \"cboName\": \"Comdex Malaysia\",\n            \"cboOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n            \"cboid\": \"5ba39b5c35151b50bc0ccb33\",\n            \"commodity\": {\n                \"name\": \"bc3\",\n                \"assetTypeId\": \"5ba3565904809ddf6a340165\",\n                \"assetTypeName\": \"COAL\",\n                \"quality\": \"A+\",\n                \"delivery_term\": \"FOB\",\n                \"quantity\": 5,\n                \"units_of_measurement\": \"MT\",\n                \"amount\": 0,\n                \"port_of_loading\": {\n                    \"port\": \"port1\",\n                    \"country\": \"country1\"\n                },\n                \"date_of_shipment\": \"2018-11-20T19:44:00+05:30\",\n                \"port_of_discharge\": {\n                    \"port\": \"port2\",\n                    \"country\": \"country2\"\n                },\n                \"shipment_period\": \"2018-11-20T19:44:00+05:30\",\n                \"total_shipment_value\": 50\n            },\n            \"obl_details\": {\n                \"bill_number\": \"12345\",\n                \"shipper_name\": \"Prathyusha\",\n                \"shipper_address\": \"address\",\n                \"receiver_name\": \"notify\",\n                \"receiver_address\": \"notify party address\",\n                \"date_of_shipping\": \"2018-11-20T19:44:33+05:30\",\n                \"number_of_shipping_units\": 5,\n                \"freight_classification\": \"\",\n                \"exact_weight_of_consignment\": \"\",\n                \"declared_value_of_asset\": 50\n            },\n            \"listing_type\": \"PUBLIC\",\n            \"docs\": [\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3d\",\n                    \"file\": {\n                        \"name\": \"comDex.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/QEY0A1Avu48pxRYLcomDex.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"copyOfObl\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                },\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3e\",\n                    \"file\": {\n                        \"name\": \"comDex.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/Wl9tzQXCgoi5avWhcomDex.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"invoice\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                },\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3f\",\n                    \"file\": {\n                        \"name\": \"Dip-5.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/QF5esD7ubbVltMkvDip-5.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"packingList\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                }\n            ],\n            \"couriers\": [],\n            \"numberOfAssetPeg\": 5,\n            \"numberOfFiatPeg\": 50,\n            \"escrows\": [],\n            \"status\": \"BUYER_ACCEPTED\",\n            \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n            \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n            \"updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n            \"feedback\": {\n                \"buyer\": {\n                    \"createdBy\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"rating\": 0,\n                    \"comments\": \"\"\n                },\n                \"seller\": {\n                    \"createdBy\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"rating\": 0,\n                    \"comments\": \"\"\n                }\n            },\n            \"buyerConfirmationTime\": null,\n            \"sellerConfirmationTime\": null,\n            \"statusActions\": [\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"CREATE_NEW_ORDER\",\n                    \"previousState\": \"INITIAL\",\n                    \"nextState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                    \"actionAt\": \"2018-11-20T19:45:18.85+05:30\",\n                    \"actionBy\": \"5beda8b7c55fd46c66bbc24f\"\n                },\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"ACCEPT\",\n                    \"previousState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                    \"nextState\": \"LISTED_FOR_TRADE\",\n                    \"actionAt\": \"2018-11-20T19:45:36.902+05:30\",\n                    \"actionBy\": \"5ba39d1035151b50bc0ccb36\"\n                },\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"ACCEPT\",\n                    \"previousState\": \"LISTED_FOR_TRADE\",\n                    \"nextState\": \"IN_MAIN_ESCROW\",\n                    \"actionAt\": \"2018-11-27T15:17:27.952+05:30\",\n                    \"actionBy\": \"5bfbf5e4c55fd42472094536\"\n                }\n            ],\n            \"offers\": [\n                {\n                    \"id\": \"5bf416f6c55fd43ab859cf40\",\n                    \"totalPrice\": 50,\n                    \"from_id\": \"\",\n                    \"order_id\": \"\",\n                    \"buyer_id\": \"\",\n                    \"privateBuyerOrgId\": \"\",\n                    \"amount\": 10,\n                    \"currency\": \"USD\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"created_by\": \"5beda8b7c55fd46c66bbc24f\",\n                    \"approved_at\": null,\n                    \"approved_by\": \"\",\n                    \"buy_requested_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"buy_requested_by\": \"\",\n                    \"buy_approved_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"buy_approved_by\": \"5bfbf5e4c55fd42472094536\",\n                    \"expires_at\": null,\n                    \"status\": \"BUYER_ACCEPTED\",\n                    \"status_updated_by\": \"\",\n                    \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"contract_doc\": {\n                        \"file\": {\n                            \"name\": \"comDex.pdf\",\n                            \"mime_type\": \"application/pdf\",\n                            \"path\": \"\",\n                            \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"APPROVED_BY_COMDEX\",\n                        \"status_updated_at\": null,\n                        \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                        \"approvedBy\": \"\",\n                        \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                        \"updated_at\": null\n                    },\n                    \"buyer_contract_doc\": {\n                        \"file\": {\n                            \"name\": \"comDex.pdf\",\n                            \"mime_type\": \"application/pdf\",\n                            \"path\": \"\",\n                            \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"WAITING_FOR_SELLER_APPROVAL\",\n                        \"status_updated_at\": null,\n                        \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                        \"approvedBy\": \"\",\n                        \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                        \"updated_at\": null\n                    },\n                    \"comments\": \"\"\n                }\n            ],\n            \"buyer_org_id\": \"5bfbf67bc55fd428df64381f\",\n            \"buyer_confirmed_contrcat\": {\n                \"file\": {\n                    \"name\": \"\",\n                    \"mime_type\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"size\": 0,\n                    \"checksum\": \"\"\n                },\n                \"status\": \"\",\n                \"status_updated_at\": null,\n                \"created_at\": null,\n                \"updated_at\": null\n            },\n            \"mainEscrow\": {\n                \"id\": \"\",\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"5bfd12afc55fd453cdbe3ad0\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"ACCEPTED\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"createdBy\": \"5bfbf5e4c55fd42472094536\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"seller\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cbo\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"assetPegTransactionId\": \"\",\n                    \"dollarPegTransactionId\": \"\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"proofOfFiatTx\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\"\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"assetPegTransactionId\": \"\",\n                    \"dollarPegTransactionId\": \"\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    }\n                }\n            },\n            \"buyerEscrow\": {\n                \"id\": \"\",\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cbo\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"obl_docs\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"updated_at\": null,\n                    \"updated_by\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                }\n            },\n            \"sellerEscrow\": {\n                \"id\": \"\",\n                \"seller\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"5bf41708c55fd43ab859cf42\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"RELEASED_ASSET_PEG\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"2018-11-20T19:45:36.898+05:30\",\n                    \"createdBy\": \"5ba39d1035151b50bc0ccb36\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"obl_docs\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"updated_at\": null,\n                    \"updated_by\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                }\n            },\n            \"comdexEscrow\": {\n                \"cso\": {\n                    \"createdBy\": \"\",\n                    \"ipAddress\": \"\",\n                    \"status\": \"\",\n                    \"transactionId\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"transactionReceipt\": {\n                        \"transactionId\": \"\",\n                        \"ipAddress\": \"\",\n                        \"file\": {\n                            \"name\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"mimetype\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"createdAt\": \"0001-01-01T00:00:00Z\"\n                    }\n                },\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\"\n                },\n                \"cbo\": {\n                    \"status\": \"\",\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"transactionReceipt\": {\n                        \"transactionId\": \"\",\n                        \"ipAddress\": \"\",\n                        \"file\": {\n                            \"name\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"mimetype\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"createdAt\": \"0001-01-01T00:00:00Z\"\n                    }\n                }\n            }\n       }]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occurred while getting order details</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Orders not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occurred while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Orders-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Orders not found\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/orders/{orderId}",
    "title": "Get Organization order",
    "version": "0.2.0",
    "name": "GetOrgOrder",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \t\"success\": true,\n\t\t\"data\":{\n            \"id\": \"5bf416f6c55fd43ab859cf3c\",\n            \"name\": \"\",\n            \"seller_id\": \"5beda8b7c55fd46c66bbc24f\",\n            \"sellerName\": \"\",\n            \"sellerOrgName\": \"Singapore LP Org\",\n            \"sellerAddress\": \"Singapore,\\nPhase 2,\\nBlock A\",\n            \"zoneId\": \"5b9fcee7754df2cefbde73e5\",\n            \"csoOrgName\": \"Comdex Singapore\",\n            \"csoOrgAddress\": \"105 Sims Ave, Singapore 387429\",\n            \"organization_id\": \"5beda971c55fd46c66bbc250\",\n            \"contractId\": \"SSG111810\",\n            \"csoid\": \"5ba35d4f35151b44c1ad9144\",\n            \"buyer_id\": \"5bfbf5e4c55fd42472094536\",\n            \"buyer_zone_id\": \"5ba38d51754df2cefbe47eb1\",\n            \"buyerAddress\": \"vfr3e2wa\",\n            \"buyerName\": \"\",\n            \"buyerOrgName\": \"u8gdwhd\",\n            \"cboName\": \"Comdex Malaysia\",\n            \"cboOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n            \"cboid\": \"5ba39b5c35151b50bc0ccb33\",\n            \"commodity\": {\n                \"name\": \"bc3\",\n                \"assetTypeId\": \"5ba3565904809ddf6a340165\",\n                \"assetTypeName\": \"COAL\",\n                \"quality\": \"A+\",\n                \"delivery_term\": \"FOB\",\n                \"quantity\": 5,\n                \"units_of_measurement\": \"MT\",\n                \"amount\": 0,\n                \"port_of_loading\": {\n                    \"port\": \"port1\",\n                    \"country\": \"country1\"\n                },\n                \"date_of_shipment\": \"2018-11-20T19:44:00+05:30\",\n                \"port_of_discharge\": {\n                    \"port\": \"port2\",\n                    \"country\": \"country2\"\n                },\n                \"shipment_period\": \"2018-11-20T19:44:00+05:30\",\n                \"total_shipment_value\": 50\n            },\n            \"obl_details\": {\n                \"bill_number\": \"12345\",\n                \"shipper_name\": \"Prathyusha\",\n                \"shipper_address\": \"address\",\n                \"receiver_name\": \"notify\",\n                \"receiver_address\": \"notify party address\",\n                \"date_of_shipping\": \"2018-11-20T19:44:33+05:30\",\n                \"number_of_shipping_units\": 5,\n                \"freight_classification\": \"\",\n                \"exact_weight_of_consignment\": \"\",\n                \"declared_value_of_asset\": 50\n            },\n            \"listing_type\": \"PUBLIC\",\n            \"docs\": [\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3d\",\n                    \"file\": {\n                        \"name\": \"comDex.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/QEY0A1Avu48pxRYLcomDex.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"copyOfObl\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                },\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3e\",\n                    \"file\": {\n                        \"name\": \"comDex.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/Wl9tzQXCgoi5avWhcomDex.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"invoice\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                },\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3f\",\n                    \"file\": {\n                        \"name\": \"Dip-5.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/QF5esD7ubbVltMkvDip-5.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"packingList\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                }\n            ],\n            \"couriers\": [],\n            \"numberOfAssetPeg\": 5,\n            \"numberOfFiatPeg\": 50,\n            \"escrows\": [],\n            \"status\": \"BUYER_ACCEPTED\",\n            \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n            \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n            \"updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n            \"feedback\": {\n                \"buyer\": {\n                    \"createdBy\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"rating\": 0,\n                    \"comments\": \"\"\n                },\n                \"seller\": {\n                    \"createdBy\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"rating\": 0,\n                    \"comments\": \"\"\n                }\n            },\n            \"buyerConfirmationTime\": null,\n            \"sellerConfirmationTime\": null,\n            \"statusActions\": [\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"CREATE_NEW_ORDER\",\n                    \"previousState\": \"INITIAL\",\n                    \"nextState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                    \"actionAt\": \"2018-11-20T19:45:18.85+05:30\",\n                    \"actionBy\": \"5beda8b7c55fd46c66bbc24f\"\n                },\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"ACCEPT\",\n                    \"previousState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                    \"nextState\": \"LISTED_FOR_TRADE\",\n                    \"actionAt\": \"2018-11-20T19:45:36.902+05:30\",\n                    \"actionBy\": \"5ba39d1035151b50bc0ccb36\"\n                },\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"ACCEPT\",\n                    \"previousState\": \"LISTED_FOR_TRADE\",\n                    \"nextState\": \"IN_MAIN_ESCROW\",\n                    \"actionAt\": \"2018-11-27T15:17:27.952+05:30\",\n                    \"actionBy\": \"5bfbf5e4c55fd42472094536\"\n                }\n            ],\n            \"offers\": [\n                {\n                    \"id\": \"5bf416f6c55fd43ab859cf40\",\n                    \"totalPrice\": 50,\n                    \"from_id\": \"\",\n                    \"order_id\": \"\",\n                    \"buyer_id\": \"\",\n                    \"privateBuyerOrgId\": \"\",\n                    \"amount\": 10,\n                    \"currency\": \"USD\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"created_by\": \"5beda8b7c55fd46c66bbc24f\",\n                    \"approved_at\": null,\n                    \"approved_by\": \"\",\n                    \"buy_requested_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"buy_requested_by\": \"\",\n                    \"buy_approved_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"buy_approved_by\": \"5bfbf5e4c55fd42472094536\",\n                    \"expires_at\": null,\n                    \"status\": \"BUYER_ACCEPTED\",\n                    \"status_updated_by\": \"\",\n                    \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"contract_doc\": {\n                        \"file\": {\n                            \"name\": \"comDex.pdf\",\n                            \"mime_type\": \"application/pdf\",\n                            \"path\": \"\",\n                            \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"APPROVED_BY_COMDEX\",\n                        \"status_updated_at\": null,\n                        \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                        \"approvedBy\": \"\",\n                        \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                        \"updated_at\": null\n                    },\n                    \"buyer_contract_doc\": {\n                        \"file\": {\n                            \"name\": \"comDex.pdf\",\n                            \"mime_type\": \"application/pdf\",\n                            \"path\": \"\",\n                            \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"WAITING_FOR_SELLER_APPROVAL\",\n                        \"status_updated_at\": null,\n                        \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                        \"approvedBy\": \"\",\n                        \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                        \"updated_at\": null\n                    },\n                    \"comments\": \"\"\n                }\n            ],\n            \"buyer_org_id\": \"5bfbf67bc55fd428df64381f\",\n            \"buyer_confirmed_contrcat\": {\n                \"file\": {\n                    \"name\": \"\",\n                    \"mime_type\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"size\": 0,\n                    \"checksum\": \"\"\n                },\n                \"status\": \"\",\n                \"status_updated_at\": null,\n                \"created_at\": null,\n                \"updated_at\": null\n            },\n            \"mainEscrow\": {\n                \"id\": \"\",\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"5bfd12afc55fd453cdbe3ad0\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"ACCEPTED\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"createdBy\": \"5bfbf5e4c55fd42472094536\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"seller\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cbo\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"assetPegTransactionId\": \"\",\n                    \"dollarPegTransactionId\": \"\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"proofOfFiatTx\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\"\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"assetPegTransactionId\": \"\",\n                    \"dollarPegTransactionId\": \"\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    }\n                }\n            },\n            \"buyerEscrow\": {\n                \"id\": \"\",\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cbo\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"obl_docs\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"updated_at\": null,\n                    \"updated_by\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                }\n            },\n            \"sellerEscrow\": {\n                \"id\": \"\",\n                \"seller\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"5bf41708c55fd43ab859cf42\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"RELEASED_ASSET_PEG\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"2018-11-20T19:45:36.898+05:30\",\n                    \"createdBy\": \"5ba39d1035151b50bc0ccb36\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"obl_docs\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"updated_at\": null,\n                    \"updated_by\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                }\n            },\n            \"comdexEscrow\": {\n                \"cso\": {\n                    \"createdBy\": \"\",\n                    \"ipAddress\": \"\",\n                    \"status\": \"\",\n                    \"transactionId\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"transactionReceipt\": {\n                        \"transactionId\": \"\",\n                        \"ipAddress\": \"\",\n                        \"file\": {\n                            \"name\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"mimetype\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"createdAt\": \"0001-01-01T00:00:00Z\"\n                    }\n                },\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\"\n                },\n                \"cbo\": {\n                    \"status\": \"\",\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"transactionReceipt\": {\n                        \"transactionId\": \"\",\n                        \"ipAddress\": \"\",\n                        \"file\": {\n                            \"name\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"mimetype\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"createdAt\": \"0001-01-01T00:00:00Z\"\n                    }\n                }\n            }\n       }\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while fetching order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Unauthorized user\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while fetching order\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/orders",
    "title": "Get Organization Orders",
    "version": "0.2.0",
    "name": "GetOrgOrders",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          }
        ],
        "Request Queryparams": [
          {
            "group": "Request Queryparams",
            "type": "string",
            "optional": false,
            "field": "np",
            "description": "<p>Number per page</p>"
          },
          {
            "group": "Request Queryparams",
            "type": "string",
            "optional": false,
            "field": "pageNumber",
            "description": "<p>Page number</p>"
          },
          {
            "group": "Request Queryparams",
            "type": "string",
            "optional": false,
            "field": "status",
            "description": ""
          },
          {
            "group": "Request Queryparams",
            "type": "string",
            "optional": false,
            "field": "type",
            "description": "<p>sell/buy</p>"
          },
          {
            "group": "Request Queryparams",
            "type": "string",
            "optional": false,
            "field": "listingType",
            "description": "<p>settlement/discovery</p>"
          },
          {
            "group": "Request Queryparams",
            "type": "string",
            "optional": false,
            "field": "privacy",
            "description": "<p>public/private</p>"
          },
          {
            "group": "Request Queryparams",
            "type": "string",
            "optional": false,
            "field": "commodityName",
            "description": "<p>Name of the commodity</p>"
          },
          {
            "group": "Request Queryparams",
            "type": "string",
            "optional": false,
            "field": "search",
            "description": "<p>Search by commodity name, contractid, portofloading, sellerorgname, buyerorganme and amount</p>"
          },
          {
            "group": "Request Queryparams",
            "type": "string",
            "optional": false,
            "field": "contractId",
            "description": "<p>ContractId</p>"
          },
          {
            "group": "Request Queryparams",
            "type": "string",
            "optional": false,
            "field": "assetType",
            "description": "<p>AssetType</p>"
          },
          {
            "group": "Request Queryparams",
            "type": "string",
            "optional": false,
            "field": "counterparties",
            "description": "<p>Counterparties</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \tsuccess: \"true\",\n\t\tdata:[{\n         \"id\": \"5bf416f6c55fd43ab859cf3c\",\n         \"name\": \"\",\n         \"seller_id\": \"5beda8b7c55fd46c66bbc24f\",\n         \"sellerName\": \"\",\n         \"sellerOrgName\": \"Singapore LP Org\",\n         \"sellerAddress\": \"Singapore,\\nPhase 2,\\nBlock A\",\n         \"zoneId\": \"5b9fcee7754df2cefbde73e5\",\n         \"csoOrgName\": \"Comdex Singapore\",\n         \"csoOrgAddress\": \"105 Sims Ave, Singapore 387429\",\n         \"organization_id\": \"5beda971c55fd46c66bbc250\",\n         \"contractId\": \"SSG111810\",\n         \"csoid\": \"5ba35d4f35151b44c1ad9144\",\n         \"buyer_id\": \"5bfbf5e4c55fd42472094536\",\n         \"buyer_zone_id\": \"5ba38d51754df2cefbe47eb1\",\n         \"buyerAddress\": \"vfr3e2wa\",\n         \"buyerName\": \"\",\n         \"buyerOrgName\": \"u8gdwhd\",\n         \"cboName\": \"Comdex Malaysia\",\n         \"cboOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n         \"cboid\": \"5ba39b5c35151b50bc0ccb33\",\n         \"commodity\": {\n             \"name\": \"bc3\",\n             \"assetTypeId\": \"5ba3565904809ddf6a340165\",\n             \"assetTypeName\": \"COAL\",\n             \"quality\": \"A+\",\n             \"delivery_term\": \"FOB\",\n             \"quantity\": 5,\n             \"units_of_measurement\": \"MT\",\n             \"amount\": 0,\n             \"port_of_loading\": {\n                 \"port\": \"port1\",\n                 \"country\": \"country1\"\n             },\n             \"date_of_shipment\": \"2018-11-20T19:44:00+05:30\",\n             \"port_of_discharge\": {\n                 \"port\": \"port2\",\n                 \"country\": \"country2\"\n             },\n             \"shipment_period\": \"2018-11-20T19:44:00+05:30\",\n             \"total_shipment_value\": 50\n         },\n         \"obl_details\": {\n             \"bill_number\": \"12345\",\n             \"shipper_name\": \"Prathyusha\",\n             \"shipper_address\": \"address\",\n             \"receiver_name\": \"notify\",\n             \"receiver_address\": \"notify party address\",\n             \"date_of_shipping\": \"2018-11-20T19:44:33+05:30\",\n             \"number_of_shipping_units\": 5,\n             \"freight_classification\": \"\",\n             \"exact_weight_of_consignment\": \"\",\n             \"declared_value_of_asset\": 50\n         },\n         \"listing_type\": \"PUBLIC\",\n         \"docs\": [\n             {\n                 \"_id\": \"5bf416f6c55fd43ab859cf3d\",\n                 \"file\": {\n                     \"name\": \"comDex.pdf\",\n                     \"mime_type\": \"application/pdf\",\n                     \"path\": \"\",\n                     \"url\": \"uploads/files/QEY0A1Avu48pxRYLcomDex.pdf\",\n                     \"size\": 0,\n                     \"checksum\": \"\"\n                 },\n                 \"type\": \"copyOfObl\",\n                 \"comments\": \"Document is valid\",\n                 \"approved_by\": null,\n                 \"approved_at\": null,\n                 \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                 \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                 \"updated_at\": null\n             },\n             {\n                 \"_id\": \"5bf416f6c55fd43ab859cf3e\",\n                 \"file\": {\n                     \"name\": \"comDex.pdf\",\n                     \"mime_type\": \"application/pdf\",\n                     \"path\": \"\",\n                     \"url\": \"uploads/files/Wl9tzQXCgoi5avWhcomDex.pdf\",\n                     \"size\": 0,\n                     \"checksum\": \"\"\n                 },\n                 \"type\": \"invoice\",\n                 \"comments\": \"Document is valid\",\n                 \"approved_by\": null,\n                 \"approved_at\": null,\n                 \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                 \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                 \"updated_at\": null\n             },\n             {\n                 \"_id\": \"5bf416f6c55fd43ab859cf3f\",\n                 \"file\": {\n                     \"name\": \"Dip-5.pdf\",\n                     \"mime_type\": \"application/pdf\",\n                     \"path\": \"\",\n                     \"url\": \"uploads/files/QF5esD7ubbVltMkvDip-5.pdf\",\n                     \"size\": 0,\n                     \"checksum\": \"\"\n                 },\n                 \"type\": \"packingList\",\n                 \"comments\": \"Document is valid\",\n                 \"approved_by\": null,\n                 \"approved_at\": null,\n                 \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                 \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                 \"updated_at\": null\n             }\n         ],\n         \"couriers\": [],\n         \"numberOfAssetPeg\": 5,\n         \"numberOfFiatPeg\": 50,\n         \"escrows\": [],\n         \"status\": \"BUYER_ACCEPTED\",\n         \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n         \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n         \"updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n         \"feedback\": {\n             \"buyer\": {\n                 \"createdBy\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"rating\": 0,\n                 \"comments\": \"\"\n             },\n             \"seller\": {\n                 \"createdBy\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"rating\": 0,\n                 \"comments\": \"\"\n             }\n         },\n         \"buyerConfirmationTime\": null,\n         \"sellerConfirmationTime\": null,\n         \"statusActions\": [\n             {\n                 \"ipAddress\": \"\",\n                 \"action\": \"CREATE_NEW_ORDER\",\n                 \"previousState\": \"INITIAL\",\n                 \"nextState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                 \"actionAt\": \"2018-11-20T19:45:18.85+05:30\",\n                 \"actionBy\": \"5beda8b7c55fd46c66bbc24f\"\n             },\n             {\n                 \"ipAddress\": \"\",\n                 \"action\": \"ACCEPT\",\n                 \"previousState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                 \"nextState\": \"LISTED_FOR_TRADE\",\n                 \"actionAt\": \"2018-11-20T19:45:36.902+05:30\",\n                 \"actionBy\": \"5ba39d1035151b50bc0ccb36\"\n             },\n             {\n                 \"ipAddress\": \"\",\n                 \"action\": \"ACCEPT\",\n                 \"previousState\": \"LISTED_FOR_TRADE\",\n                 \"nextState\": \"IN_MAIN_ESCROW\",\n                 \"actionAt\": \"2018-11-27T15:17:27.952+05:30\",\n                 \"actionBy\": \"5bfbf5e4c55fd42472094536\"\n             }\n         ],\n         \"offers\": [\n             {\n                 \"id\": \"5bf416f6c55fd43ab859cf40\",\n                 \"totalPrice\": 50,\n                 \"from_id\": \"\",\n                 \"order_id\": \"\",\n                 \"buyer_id\": \"\",\n                 \"privateBuyerOrgId\": \"\",\n                 \"amount\": 10,\n                 \"currency\": \"USD\",\n                 \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                 \"created_by\": \"5beda8b7c55fd46c66bbc24f\",\n                 \"approved_at\": null,\n                 \"approved_by\": \"\",\n                 \"buy_requested_at\": \"2018-11-27T15:17:27.937+05:30\",\n                 \"buy_requested_by\": \"\",\n                 \"buy_approved_at\": \"2018-11-27T15:17:27.937+05:30\",\n                 \"buy_approved_by\": \"5bfbf5e4c55fd42472094536\",\n                 \"expires_at\": null,\n                 \"status\": \"BUYER_ACCEPTED\",\n                 \"status_updated_by\": \"\",\n                 \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n                 \"contract_doc\": {\n                     \"file\": {\n                         \"name\": \"comDex.pdf\",\n                         \"mime_type\": \"application/pdf\",\n                         \"path\": \"\",\n                         \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                         \"size\": 0,\n                         \"checksum\": \"\"\n                     },\n                     \"status\": \"APPROVED_BY_COMDEX\",\n                     \"status_updated_at\": null,\n                     \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                     \"approvedBy\": \"\",\n                     \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                     \"updated_at\": null\n                 },\n                 \"buyer_contract_doc\": {\n                     \"file\": {\n                         \"name\": \"comDex.pdf\",\n                         \"mime_type\": \"application/pdf\",\n                         \"path\": \"\",\n                         \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                         \"size\": 0,\n                         \"checksum\": \"\"\n                     },\n                     \"status\": \"WAITING_FOR_SELLER_APPROVAL\",\n                     \"status_updated_at\": null,\n                     \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                     \"approvedBy\": \"\",\n                     \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                     \"updated_at\": null\n                 },\n                 \"comments\": \"\"\n             }\n         ],\n         \"buyer_org_id\": \"5bfbf67bc55fd428df64381f\",\n         \"buyer_confirmed_contrcat\": {\n             \"file\": {\n                 \"name\": \"\",\n                 \"mime_type\": \"\",\n                 \"path\": \"\",\n                 \"url\": \"\",\n                 \"size\": 0,\n                 \"checksum\": \"\"\n             },\n             \"status\": \"\",\n             \"status_updated_at\": null,\n             \"created_at\": null,\n             \"updated_at\": null\n         },\n         \"mainEscrow\": {\n             \"id\": \"\",\n             \"buyer\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"5bfd12afc55fd453cdbe3ad0\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"ACCEPTED\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"2018-11-27T15:17:27.937+05:30\",\n                 \"createdBy\": \"5bfbf5e4c55fd42472094536\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"seller\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"cbo\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"assetPegTransactionId\": \"\",\n                 \"dollarPegTransactionId\": \"\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"proofOfFiatTx\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\"\n             },\n             \"cso\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"assetPegTransactionId\": \"\",\n                 \"dollarPegTransactionId\": \"\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 }\n             }\n         },\n         \"buyerEscrow\": {\n             \"id\": \"\",\n             \"buyer\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"cbo\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"obl_docs\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"status\": \"\",\n                 \"updated_at\": null,\n                 \"updated_by\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"cso\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             }\n         },\n         \"sellerEscrow\": {\n             \"id\": \"\",\n             \"seller\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"cso\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"5bf41708c55fd43ab859cf42\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"RELEASED_ASSET_PEG\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"2018-11-20T19:45:36.898+05:30\",\n                 \"createdBy\": \"5ba39d1035151b50bc0ccb36\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"obl_docs\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"status\": \"\",\n                 \"updated_at\": null,\n                 \"updated_by\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             }\n         },\n         \"comdexEscrow\": {\n             \"cso\": {\n                 \"createdBy\": \"\",\n                 \"ipAddress\": \"\",\n                 \"status\": \"\",\n                 \"transactionId\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"transactionReceipt\": {\n                     \"transactionId\": \"\",\n                     \"ipAddress\": \"\",\n                     \"file\": {\n                         \"name\": \"\",\n                         \"path\": \"\",\n                         \"url\": \"\",\n                         \"mimetype\": \"\"\n                     },\n                     \"status\": \"\",\n                     \"createdAt\": \"0001-01-01T00:00:00Z\"\n                 }\n             },\n             \"buyer\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"status\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\"\n             },\n             \"cbo\": {\n                 \"status\": \"\",\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"transactionReceipt\": {\n                     \"transactionId\": \"\",\n                     \"ipAddress\": \"\",\n                     \"file\": {\n                         \"name\": \"\",\n                         \"path\": \"\",\n                         \"url\": \"\",\n                         \"mimetype\": \"\"\n                     },\n                     \"status\": \"\",\n                     \"createdAt\": \"0001-01-01T00:00:00Z\"\n                 }\n             }\n         }\n       }]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\",\n\t error:{}\n}",
          "type": "json"
        },
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Organization-Orders-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting buyer organization orders\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Fetch-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occurred while fetching order\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/counterparty/reports",
    "title": "Get Organization's counter party reports",
    "version": "0.2.0",
    "name": "GetOrganizationCounterPartyReports",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tdata: [\n\t\t {\n            \"_id\": \"5c52cc37c55fd4483f211e3a\",\n            \"buy\": 2,\n            \"org_details\": {\n                \"_id\": \"5c52cc37c55fd4483f211e3a\",\n                \"abbreviation\": \"buyer organization\",\n                \"accountStatus\": \"VERIFIED\",\n                \"address\": \"malaysia\",\n                \"bankAccount\": {\n                    \"accountHolderName\": \"buyer name\",\n                    \"accountNumber\": \"123456789\",\n                    \"beneficiaryBank\": \"bb bank\",\n                    \"beneficiaryBankAddress\": \"asa\",\n                    \"beneficiaryBankCountry\": \"Austria\",\n                    \"beneficiaryBankZip\": \"\",\n                    \"beneficiarySwift\": \"ASASSAAS\",\n                    \"correspondenceBank\": \"asdfghg\",\n                    \"correspondenceSwift\": \"ASASAASA\",\n                    \"nickName\": \"Buyer\",\n                    \"status\": \"Pending\"\n                },\n                \"commentsByComdex\": \"\",\n                \"createdAt\": \"2019-01-31T15:51:43.003+05:30\",\n                \"doe\": \"2019-01-08\",\n                \"isComdexUser\": false,\n                \"kyc\": {\n                    \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                    \"docs\": [\n                        {\n                            \"approvedAt\": \"2019-01-31T16:19:39.481+05:30\",\n                            \"approvedBy\": \"5ba5782d5432786bbf8a76bf\",\n                            \"comments\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"deletedAt\": \"0001-01-01T00:00:00Z\",\n                            \"docStatus\": \"VERIFIED\",\n                            \"docType\": \"FINANCE_AUDITS\",\n                            \"fileName\": \"audits.pdf\",\n                            \"fileType\": \"\",\n                            \"id\": \"5c52cc40c55fd4483f211e3b\",\n                            \"month\": \"10\",\n                            \"path\": \"uploads/files/RNXFMlEVuspUSD36audits.pdf\",\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                            \"url\": \"\",\n                            \"year\": \"2013\"\n                        },\n                        {\n                            \"approvedAt\": \"2019-01-31T16:19:40.751+05:30\",\n                            \"approvedBy\": \"5ba5782d5432786bbf8a76bf\",\n                            \"comments\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"deletedAt\": \"0001-01-01T00:00:00Z\",\n                            \"docStatus\": \"VERIFIED\",\n                            \"docType\": \"FINANCE_AUDITS_2\",\n                            \"fileName\": \"F.pdf\",\n                            \"fileType\": \"\",\n                            \"id\": \"5c52cc48c55fd4483f211e3c\",\n                            \"month\": \"06\",\n                            \"path\": \"uploads/files/xEMIh5iY9eYHEf1XF.pdf\",\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                            \"url\": \"\",\n                            \"year\": \"2014\"\n                        },\n                        {\n                            \"approvedAt\": \"2019-01-31T16:19:41.994+05:30\",\n                            \"approvedBy\": \"5ba5782d5432786bbf8a76bf\",\n                            \"comments\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"deletedAt\": \"0001-01-01T00:00:00Z\",\n                            \"docStatus\": \"VERIFIED\",\n                            \"docType\": \"LATEST_MANAGEMENT\",\n                            \"fileName\": \"audits.pdf\",\n                            \"fileType\": \"\",\n                            \"id\": \"5c52cc4ec55fd4483f211e3d\",\n                            \"month\": \"\",\n                            \"path\": \"uploads/files/7NQ8cB7yRZthus6Laudits.pdf\",\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                            \"url\": \"\",\n                            \"year\": \"\"\n                        },\n                        {\n                            \"approvedAt\": \"2019-01-31T16:19:43.16+05:30\",\n                            \"approvedBy\": \"5ba5782d5432786bbf8a76bf\",\n                            \"comments\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"deletedAt\": \"0001-01-01T00:00:00Z\",\n                            \"docStatus\": \"VERIFIED\",\n                            \"docType\": \"SSM\",\n                            \"fileName\": \"F.pdf\",\n                            \"fileType\": \"\",\n                            \"id\": \"5c52cc51c55fd4483f211e3e\",\n                            \"month\": \"\",\n                            \"path\": \"uploads/files/yGwUgcB419XoktG9F.pdf\",\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                            \"url\": \"\",\n                            \"year\": \"\"\n                        },\n                        {\n                            \"approvedAt\": \"2019-01-31T16:19:45.252+05:30\",\n                            \"approvedBy\": \"5ba5782d5432786bbf8a76bf\",\n                            \"comments\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"deletedAt\": \"0001-01-01T00:00:00Z\",\n                            \"docStatus\": \"VERIFIED\",\n                            \"docType\": \"SHARES_STRUCTURE\",\n                            \"fileName\": \"audits.pdf\",\n                            \"fileType\": \"\",\n                            \"id\": \"5c52cc53c55fd4483f211e3f\",\n                            \"month\": \"\",\n                            \"path\": \"uploads/files/A77t780fFLFzvEidaudits.pdf\",\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                            \"url\": \"\",\n                            \"year\": \"\"\n                        }\n                    ],\n                    \"kycStatus\": \"VERIFIED\"\n                },\n                \"name\": \"malaysia buyer\",\n                \"ubo\": [\n                    {\n                        \"name\": \"Buyer\",\n                        \"percentage\": 89,\n                        \"relationship\": \"owner\",\n                        \"type\": \"Director\"\n                    },\n                    {\n                        \"name\": \"Buyer\",\n                        \"percentage\": 89,\n                        \"relationship\": \"owner\",\n                        \"type\": \"Director\"\n                    }\n                ],\n                \"updatedAt\": \"2019-02-12T22:08:20.298+05:30\",\n                \"userId\": \"5c52cba1c55fd4483f211e39\",\n                \"zipcode\": \"\",\n                \"zoneId\": \"5ba38d51754df2cefbe47eb1\"\n            },\n            \"sell\": 31\n        }\n\t],\n\t\"message\":\"\",\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while getting Organization</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found in order\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-counterparty-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while getting organization counter party orders\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/order_reports.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/orders/count/all",
    "title": "Get organization orders count",
    "version": "0.2.0",
    "name": "GetOrganizationOrdersCount",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tdata: [{\n\t\t\t\"_id\": \"null\",\n            \"d_count\": 4,\n            \"m_count\": 37,\n            \"total\": 285\n\t}],\n\tmessage:\"\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while getting Organization orders count</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Orders-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while getting Organization orders count\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/team/reports",
    "title": "Get Organization's team reports",
    "version": "0.2.0",
    "name": "GetOrganizationTeamReports",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tdata: [\n\t\t  {\n            \"_id\": \"5cc830edc55fd40a8a018d24\",\n            \"buy\": 1,\n            \"sell\": 3,\n            \"user_details\": {\n                \"name\": \"\",\n                \"organizationId\": {\n                    \"acl\": {\n                        \"commoditiesList\": [\n                            \"ALL_COMMODITIES\"\n                        ],\n                        \"isAllOrders\": true,\n                        \"isBuy\": true,\n                        \"isCounterParties\": true,\n                        \"isInvoice\": true,\n                        \"isNegotiate\": true,\n                        \"isRequiresAdminApprovalToBuy\": false,\n                        \"isRequiresAdminApprovalToSell\": false,\n                        \"isSell\": true,\n                        \"isTeam\": false,\n                        \"maxShipmentValue\": 1000,\n                        \"maxTradableQuantity\": 1000\n                    },\n                    \"orgId\": \"5c753ef7c55fd42711bc6cf9\",\n                    \"roleId\": \"5ca46c0daec9a6d12f4d6e37\"\n                }\n            }\n        },\n        {\n            \"_id\": \"5cb4c857c55fd411c1480454\",\n            \"buy\": 0,\n            \"sell\": 2,\n            \"user_details\": {\n                \"name\": \"\",\n                \"organizationId\": {\n                    \"acl\": {\n                        \"commoditiesList\": [\n                            \"ALL\",\n                            \"COAL\"\n                        ],\n                        \"isAllOrders\": true,\n                        \"isBuy\": true,\n                        \"isCounterParties\": false,\n                        \"isInvoice\": true,\n                        \"isNegotiate\": true,\n                        \"isRequiresAdminApprovalToBuy\": true,\n                        \"isRequiresAdminApprovalToSell\": true,\n                        \"isSell\": true,\n                        \"isTeam\": false,\n                        \"maxShipmentValue\": 20,\n                        \"maxTradableQuantity\": 20\n                    },\n                    \"orgId\": \"5c753ef7c55fd42711bc6cf9\",\n                    \"roleId\": \"5ca46c0daec9a6d12f4d6e37\"\n                }\n            }\n        }\n\t],\n\t\"message\":\"\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while getting Organization</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found in order\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-team-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while getting organization team reports\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/order_reports.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/orders/{orderId}/invoice",
    "title": "Get Order Invoice",
    "version": "0.2.0",
    "name": "GetParticularOrderInvoice",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tdata: {\n\t\t \"_id\": \"5d272a71c55fd41d2e18f0ae\",\n        \"createdBy\": \"invoice@comdex.sg\",\n        \"createdAt\": \"2019-07-11T17:54:17.679+05:30\",\n        \"receiverId\": \"\",\n        \"status\": \"PENDING\",\n        \"updatedAt\": \"0001-01-01T00:00:00Z\",\n        \"updatedBy\": \"\",\n        \"amount\": 0.01,\n        \"orderId\": \"5d15c209c55fd42aa10545a3\",\n        \"receiverOrgId\": \"5c753ef7c55fd42711bc6cf9\",\n        \"sendOrgId\": \"\",\n        \"file\": {\n            \"name\": \"comdex_Check_mails2_seller14\",\n            \"path\": \"uploads/invoices/comdex_Check_mails2_seller14.pdf\",\n            \"url\": \"uploads/invoices/comdex_Check_mails2_seller14.pdf\",\n            \"mimetype\": \"application/pdf\"\n        },\n        \"approvedBy\": \"\",\n        \"refNo\": \"I0XHS71911\",\n        \"zoneId\": \"5ba38d51754df2cefbe47eb1\",\n        \"txReceipt\": {\n            \"name\": \"\",\n            \"path\": \"\",\n            \"url\": \"\",\n            \"mimetype\": \"\"\n        },\n        \"contractId\": \"12345678\",\n        \"dueDate\": \"2019-07-26T17:54:14.854+05:30\",\n        \"senderAddress\": \"Comdex Solutions SG Pte Ltd 30 Cecil Street #23-03/04 Prudential Tower Singapore 049712\",\n        \"receiverOrgName\": \"test1234 check org\",\n        \"receiverOrgAddress\": \"hyd\",\n        \"currency\": \"USD\",\n        \"quality\": \"A++\",\n        \"comdexPaymentBy\": \"both\",\n        \"totalShipmentValue\": 25\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while getting invoice details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found in order\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found in order\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Invoice-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while getting order invoice details\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/users/{userId}/orders",
    "title": "Get team sell and buy orders",
    "version": "0.2.0",
    "name": "GetTeamSellAndBuyOrders",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tdata:[\n\t\t {\n            \"metaData\": [\n                {\n                    \"total\": 33\n                }\n            ],\n            \"metaDataFilters\": null,\n            \"data\": [\n                {\n                    \"id\": \"5d305537c55fd474573d5458\",\n                    \"pegHash\": \"\",\n                    \"assetTransactionHash\": \"\",\n                    \"assetId\": \"2019-07-18123456\",\n                    \"docsHandleBy\": \"TRADE_DOCS_HANDLE_BY_COMDEX\",\n                    \"name\": \"\",\n                    \"seller_id\": \"5c52c6bdc55fd4483f211e2e\",\n                    \"sellerName\": \"prathyusha lakkireddy\",\n                    \"sellerOrgName\": \"test1234 check org\",\n                    \"sellerAddress\": \"hyd\",\n                    \"zoneId\": \"5ba38d51754df2cefbe47eb1\",\n                    \"csoOrgName\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n                    \"csoOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n                    \"organization_id\": \"5c753ef7c55fd42711bc6cf9\",\n                    \"contractId\": \"12345678\",\n                    \"csoid\": \"5ba39b5c35151b50bc0ccb33\",\n                    \"buyer_id\": \"5c52cba1c55fd4483f211e39\",\n                    \"buyer_zone_id\": \"5ba38d51754df2cefbe47eb1\",\n                    \"buyerAddress\": \"malaysia\",\n                    \"buyerName\": \"buyer trader\",\n                    \"buyerOrgName\": \"malaysia buyer\",\n                    \"cboName\": \"Comdex Malaysia\",\n                    \"cboOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n                    \"cboid\": \"5ba39b5c35151b50bc0ccb33\",\n                    \"commodity\": {\n                        \"name\": \"Bc error2111a1a\",\n                        \"assetTypeId\": \"5ba3565904809ddf6a340165\",\n                        \"assetTypeName\": \"COAL\",\n                        \"quality\": \"A++\",\n                        \"delivery_term\": \"FOB\",\n                        \"quantity\": 5,\n                        \"units_of_measurement\": \"MT\",\n                        \"amount\": 0,\n                        \"port_of_loading\": {\n                            \"port\": \"port1\",\n                            \"country\": \"country1\"\n                        },\n                        \"date_of_shipment\": \"0001-01-01T00:00:00Z\",\n                        \"port_of_discharge\": {\n                            \"port\": \"port2\",\n                            \"country\": \"country2\"\n                        },\n                        \"shipment_period\": \"0001-01-01T00:00:00Z\",\n                        \"total_shipment_value\": 25\n                    },\n                    \"obl_details\": {\n                        \"bill_number\": \"123456\",\n                        \"shipper_name\": \"lp\",\n                        \"shipper_address\": {\n                            \"line1\": \"hyd\",\n                            \"line2\": \"madhapur\",\n                            \"city\": \"hyd\",\n                            \"country\": \"ind\",\n                            \"pincode\": \"503111\",\n                            \"address\": \"hyd,madhapur,hyd,ind,503111\"\n                        },\n                        \"receiver_name\": \"jshd\",\n                        \"receiver_address\": {\n                            \"line1\": \"hyd\",\n                            \"line2\": \"madhapur\",\n                            \"city\": \"hyd\",\n                            \"country\": \"ind\",\n                            \"pincode\": \"503111\",\n                            \"address\": \"hyd,madhapur,hyd,ind,503111\"\n                        },\n                        \"date_of_shipping\": \"0001-01-01T00:00:00Z\",\n                        \"number_of_shipping_units\": 5,\n                        \"freight_classification\": \"\",\n                        \"exact_weight_of_consignment\": \"\",\n                        \"declared_value_of_asset\": 5,\n                        \"invoiceNumber\": \"\",\n                        \"invoiceDate\": \"0001-01-01T00:00:00Z\"\n                    },\n                    \"listing_type\": \"PUBLIC\",\n                    \"docs\": [\n                        {\n                            \"_id\": \"5d305541c55fd474573d545a\",\n                            \"file\": {\n                                \"name\": \"1234rewa\",\n                                \"mime_type\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"uploads/files/aJ1NrmXzerVc5y9osample.pdf\",\n                                \"size\": 0,\n                                \"checksum\": \"\"\n                            },\n                            \"type\": \"copyOfObl\",\n                            \"comments\": \"\",\n                            \"approved_by\": null,\n                            \"approved_at\": null,\n                            \"status\": \"\",\n                            \"created_at\": \"2019-07-18T16:47:21.17+05:30\",\n                            \"updated_at\": \"2019-07-18T16:47:21.17+05:30\"\n                        },\n                        {\n                            \"_id\": \"5d305541c55fd474573d545b\",\n                            \"file\": {\n                                \"name\": \"Code Competition - 1.0 - Vitwit.pdf\",\n                                \"mime_type\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"uploads/files/aJ1NrmXzerVc5y9osample.pdf\",\n                                \"size\": 0,\n                                \"checksum\": \"\"\n                            },\n                            \"type\": \"invoice\",\n                            \"comments\": \"\",\n                            \"approved_by\": null,\n                            \"approved_at\": null,\n                            \"status\": \"\",\n                            \"created_at\": \"2019-07-18T16:47:21.17+05:30\",\n                            \"updated_at\": \"2019-07-18T16:47:21.17+05:30\"\n                        },\n                        {\n                            \"_id\": \"5d305541c55fd474573d545c\",\n                            \"file\": {\n                                \"name\": \"comDex.pdf\",\n                                \"mime_type\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"uploads/files/aJ1NrmXzerVc5y9osample.pdf\",\n                                \"size\": 0,\n                                \"checksum\": \"\"\n                            },\n                            \"type\": \"packingList\",\n                            \"comments\": \"\",\n                            \"approved_by\": null,\n                            \"approved_at\": null,\n                            \"status\": \"\",\n                            \"created_at\": \"2019-07-18T16:47:21.17+05:30\",\n                            \"updated_at\": \"2019-07-18T16:47:21.17+05:30\"\n                        }\n                    ],\n                    \"couriers\": [],\n                    \"numberOfAssetPeg\": 5,\n                    \"numberOfFiatPeg\": 0,\n                    \"escrows\": [],\n                    \"status\": \"TRADE_COMPLETED\",\n                    \"issueAssetFailedComments\": \"\",\n                    \"issueAssetFailedAt\": null,\n                    \"status_updated_at\": \"2019-07-18T16:55:19.679+05:30\",\n                    \"created_at\": \"2019-07-18T16:47:11.533+05:30\",\n                    \"updated_at\": \"2019-07-18T16:47:45.046+05:30\",\n                    \"feedback\": {\n                        \"buyer\": {\n                            \"createdBy\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"rating\": 0,\n                            \"comments\": \"\"\n                        },\n                        \"seller\": {\n                            \"createdBy\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"rating\": 0,\n                            \"comments\": \"\"\n                        }\n                    },\n                    \"buyerConfirmationTime\": null,\n                    \"sellerConfirmationTime\": null,\n                    \"statusActions\": [\n                        {\n                            \"ipAddress\": \"\",\n                            \"action\": \"CREATE_NEW_ORDER\",\n                            \"previousState\": \"INITIAL\",\n                            \"nextState\": \"LISTED_FOR_TRADE\",\n                            \"actionAt\": \"2019-07-18T16:47:25.702+05:30\",\n                            \"actionBy\": \"5c52c6bdc55fd4483f211e2e\"\n                        },\n                        {\n                            \"ipAddress\": \"\",\n                            \"action\": \"ACCEPT\",\n                            \"previousState\": \"LISTED_FOR_TRADE\",\n                            \"nextState\": \"BUYER_ACCEPTED\",\n                            \"actionAt\": \"2019-07-18T16:47:45.048+05:30\",\n                            \"actionBy\": \"5c52cba1c55fd4483f211e39\"\n                        },\n                        {\n                            \"ipAddress\": \"\",\n                            \"action\": \"ACCEPT\",\n                            \"previousState\": \"BUYER_ACCEPTED\",\n                            \"nextState\": \"TRADE_COMPLETED\",\n                            \"actionAt\": \"2019-07-18T16:55:19.679+05:30\",\n                            \"actionBy\": \"5c52c6bdc55fd4483f211e2e\"\n                        }\n                    ],\n                    \"offers\": [\n                        {\n                            \"id\": \"5d305537c55fd474573d5459\",\n                            \"totalPrice\": 25,\n                            \"from_id\": \"\",\n                            \"order_id\": \"\",\n                            \"buyer_id\": \"\",\n                            \"privateBuyerOrgId\": \"\",\n                            \"amount\": 5,\n                            \"currency\": \"USD\",\n                            \"created_at\": \"2019-07-18T16:47:11.533+05:30\",\n                            \"created_by\": \"5c52c6bdc55fd4483f211e2e\",\n                            \"approved_at\": null,\n                            \"approved_by\": \"\",\n                            \"buy_requested_at\": \"2019-07-18T16:47:45.046+05:30\",\n                            \"buy_requested_by\": \"\",\n                            \"buy_approved_at\": \"2019-07-18T16:47:45.046+05:30\",\n                            \"buy_approved_by\": \"5c52cba1c55fd4483f211e39\",\n                            \"expires_at\": null,\n                            \"status\": \"BUYER_ACCEPTED\",\n                            \"status_updated_by\": \"\",\n                            \"status_updated_at\": \"2019-07-18T16:47:45.046+05:30\",\n                            \"contract_doc\": {\n                                \"buyerTxHash\": \"\",\n                                \"sellerTxHash\": \"\",\n                                \"file\": {\n                                    \"name\": \"3834_001.pdf\",\n                                    \"mime_type\": \"\",\n                                    \"path\": \"\",\n                                    \"url\": \"uploads/files/aJ1NrmXzerVc5y9osample.pdf\",\n                                    \"size\": 0,\n                                    \"checksum\": \"\"\n                                },\n                                \"status\": \"\",\n                                \"status_updated_at\": null,\n                                \"created_at\": \"2019-07-18T16:47:21.17+05:30\",\n                                \"approvedBy\": \"\",\n                                \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                                \"updated_at\": null,\n                                \"comments\": \"\",\n                                \"confirmedAt\": null,\n                                \"confirmedBy\": \"\"\n                            },\n                            \"buyer_contract_doc\": {\n                                \"buyerTxHash\": \"\",\n                                \"sellerTxHash\": \"\",\n                                \"file\": {\n                                    \"name\": \"prathyusha.pdf\",\n                                    \"mime_type\": \"application/pdf\",\n                                    \"path\": \"uploads/files/E9YxDMPDFJzZaIlkprathyusha.pdf\",\n                                    \"url\": \"uploads/files/E9YxDMPDFJzZaIlkprathyusha.pdf\",\n                                    \"size\": 0,\n                                    \"checksum\": \"\"\n                                },\n                                \"status\": \"APPROVED_BY_SELLER\",\n                                \"status_updated_at\": null,\n                                \"created_at\": \"2019-07-18T16:47:45.046+05:30\",\n                                \"approvedBy\": \"5c52c6bdc55fd4483f211e2e\",\n                                \"approvedAt\": \"2019-07-18T16:53:17.77+05:30\",\n                                \"updated_at\": null,\n                                \"comments\": \"\",\n                                \"confirmedAt\": \"2019-07-18T16:48:07.355+05:30\",\n                                \"confirmedBy\": \"5c52c6bdc55fd4483f211e2e\"\n                            },\n                            \"comments\": \"\",\n                            \"updatedAt\": \"2019-07-18T16:47:21.17+05:30\"\n                        }\n                    ],\n                    \"buyer_org_id\": \"5c52cc37c55fd4483f211e3a\",\n                    \"buyer_confirmed_contrcat\": {\n                        \"file\": {\n                            \"name\": \"\",\n                            \"mime_type\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"status_updated_at\": null,\n                        \"created_at\": null,\n                        \"updated_at\": null\n                    },\n                    \"mainEscrow\": {\n                        \"id\": \"\",\n                        \"buyer\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        },\n                        \"seller\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        },\n                        \"cbo\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"assetPegTransactionId\": \"\",\n                            \"dollarPegTransactionId\": \"\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"proofOfFiatTx\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\"\n                        },\n                        \"cso\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"assetPegTransactionId\": \"\",\n                            \"dollarPegTransactionId\": \"\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            }\n                        }\n                    },\n                    \"buyerEscrow\": {\n                        \"id\": \"\",\n                        \"buyer\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        },\n                        \"cbo\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        },\n                        \"obl_docs\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"status\": \"\",\n                            \"updated_at\": null,\n                            \"updated_by\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null\n                        },\n                        \"cso\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        },\n                        \"seller\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        }\n                    },\n                    \"sellerEscrow\": {\n                        \"id\": \"\",\n                        \"seller\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        },\n                        \"cso\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"csoTxId\": \"\",\n                            \"confirmed_tx_id\": \"\",\n                            \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                            \"awb_number\": \"\",\n                            \"status\": \"\",\n                            \"docStatus\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null,\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\"\n                        },\n                        \"obl_docs\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"status\": \"\",\n                            \"updated_at\": null,\n                            \"updated_by\": \"\",\n                            \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                            \"receivedBy\": \"\",\n                            \"serviceName\": \"\",\n                            \"link\": \"\",\n                            \"trackingNumber\": \"\",\n                            \"file\": {\n                                \"name\": \"\",\n                                \"path\": \"\",\n                                \"url\": \"\",\n                                \"mimetype\": \"\"\n                            },\n                            \"scannedFiles\": null\n                        }\n                    },\n                    \"comdexEscrow\": {\n                        \"cso\": {\n                            \"createdBy\": \"\",\n                            \"ipAddress\": \"\",\n                            \"status\": \"\",\n                            \"transactionId\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"transactionReceipt\": {\n                                \"transactionId\": \"\",\n                                \"ipAddress\": \"\",\n                                \"file\": {\n                                    \"name\": \"\",\n                                    \"path\": \"\",\n                                    \"url\": \"\",\n                                    \"mimetype\": \"\"\n                                },\n                                \"status\": \"\",\n                                \"createdAt\": \"0001-01-01T00:00:00Z\"\n                            }\n                        },\n                        \"buyer\": {\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"status\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\"\n                        },\n                        \"cbo\": {\n                            \"status\": \"\",\n                            \"ipAddress\": \"\",\n                            \"transactionId\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"createdBy\": \"\",\n                            \"transactionReceipt\": {\n                                \"transactionId\": \"\",\n                                \"ipAddress\": \"\",\n                                \"file\": {\n                                    \"name\": \"\",\n                                    \"path\": \"\",\n                                    \"url\": \"\",\n                                    \"mimetype\": \"\"\n                                },\n                                \"status\": \"\",\n                                \"createdAt\": \"0001-01-01T00:00:00Z\"\n                            }\n                        }\n                    },\n                    \"settlementDocs\": {\n                        \"buyer\": {\n                            \"status\": \"\",\n                            \"docs\": [],\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                            \"txId\": \"\",\n                            \"ipAddress\": \"\",\n                            \"createdBy\": \"\",\n                            \"createdOrgBy\": \"\",\n                            \"updatedBy\": \"\"\n                        },\n                        \"seller\": {\n                            \"status\": \"\",\n                            \"docs\": [],\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                            \"txId\": \"\",\n                            \"ipAddress\": \"\",\n                            \"createdBy\": \"\",\n                            \"createdOrgBy\": \"\"\n                        },\n                        \"comdex\": {\n                            \"comdexType\": \"\",\n                            \"status\": \"\",\n                            \"docs\": [],\n                            \"approvedDocs\": [],\n                            \"approvedComdexType\": \"\",\n                            \"createdAt\": \"0001-01-01T00:00:00Z\",\n                            \"updatedAt\": \"0001-01-01T00:00:00Z\",\n                            \"txId\": \"\",\n                            \"ipAddress\": \"\",\n                            \"createdBy\": \"\",\n                            \"createdOrgBy\": \"\",\n                            \"approvedBy\": \"\",\n                            \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                            \"rejectedBy\": \"\",\n                            \"rejectedAt\": \"0001-01-01T00:00:00Z\",\n                            \"rejectedComdexType\": \"\",\n                            \"updatedBy\": \"\",\n                            \"updatedOrgBy\": \"\"\n                        }\n                    },\n                    \"comdexCommission\": 0.01,\n                    \"totalTaxes\": 0,\n                    \"sendOblDocTo\": \"\",\n                    \"isSettlementRequired\": false,\n                    \"privateBuyers\": [],\n                    \"buyerProofOfFiat\": {\n                        \"txHash\": \"\",\n                        \"sellerTxHash\": \"\",\n                        \"status\": \"APPROVED\",\n                        \"createdAt\": \"2019-07-18T16:54:41.84+05:30\",\n                        \"createdBy\": \"5c52cba1c55fd4483f211e39\",\n                        \"approvedAt\": \"2019-07-18T16:55:19.679+05:30\",\n                        \"approvedBy\": \"5c52c6bdc55fd4483f211e2e\",\n                        \"file\": {\n                            \"name\": \"sampleInvoice.pdf\",\n                            \"path\": \"uploads/files/sBlp9bDR7WMNexIHsampleInvoice.pdf\",\n                            \"url\": \"uploads/files/sBlp9bDR7WMNexIHsampleInvoice.pdf\",\n                            \"mimetype\": \"application/pdf\"\n                        },\n                        \"sellerApprovesPofComments\": \"\",\n                        \"sellerApprovesPofFailedAt\": null\n                    },\n                    \"negotiatedAt\": \"0001-01-01T00:00:00Z\",\n                    \"comdexPaymentBy\": \"\",\n                    \"tradeType\": \"POST TRADE\",\n                    \"acceptOfferComments\": \"\",\n                    \"acceptOfferFailedAt\": null,\n                    \"sellerConfirmsContractComments\": \"\",\n                    \"sellerConfirmsContractFailedAt\": null,\n                    \"sellerApprovesContractComments\": \"\",\n                    \"sellerApprovesContractFailedAt\": null,\n                    \"buyerUpdatePofComments\": \"\",\n                    \"buyerUpdatePofFailedAt\": null,\n                    \"buyerCreateNegotiationComments\": \"\",\n                    \"buyerCreateNegotiationFailedAt\": null,\n                    \"sellerAcceptNegotiationComments\": \"\",\n                    \"sellerAcceptNegotiationFailedAt\": null,\n                    \"sellerRejectNegotiationComments\": \"\",\n                    \"sellerRejectNegotiationFailedAt\": null\n                }\n            ]\n        }\n\t],\n\t\"message\":\"\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while getting team orders</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "UserId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"UserId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found in order\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Team-reports-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while getting team orders\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/team_member_orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/users/{userId}/orders",
    "title": "Get user orders",
    "version": "0.2.0",
    "name": "GetUserOrders",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \tsuccess: \"true\",\n\t\tdata:[{\n            \"id\": \"5bf416f6c55fd43ab859cf3c\",\n            \"name\": \"\",\n            \"seller_id\": \"5beda8b7c55fd46c66bbc24f\",\n            \"sellerName\": \"\",\n            \"sellerOrgName\": \"Singapore LP Org\",\n            \"sellerAddress\": \"Singapore,\\nPhase 2,\\nBlock A\",\n            \"zoneId\": \"5b9fcee7754df2cefbde73e5\",\n            \"csoOrgName\": \"Comdex Singapore\",\n            \"csoOrgAddress\": \"105 Sims Ave, Singapore 387429\",\n            \"organization_id\": \"5beda971c55fd46c66bbc250\",\n            \"contractId\": \"SSG111810\",\n            \"csoid\": \"5ba35d4f35151b44c1ad9144\",\n            \"buyer_id\": \"5bfbf5e4c55fd42472094536\",\n            \"buyer_zone_id\": \"5ba38d51754df2cefbe47eb1\",\n            \"buyerAddress\": \"vfr3e2wa\",\n            \"buyerName\": \"\",\n            \"buyerOrgName\": \"u8gdwhd\",\n            \"cboName\": \"Comdex Malaysia\",\n            \"cboOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n            \"cboid\": \"5ba39b5c35151b50bc0ccb33\",\n            \"commodity\": {\n                \"name\": \"bc3\",\n                \"assetTypeId\": \"5ba3565904809ddf6a340165\",\n                \"assetTypeName\": \"COAL\",\n                \"quality\": \"A+\",\n                \"delivery_term\": \"FOB\",\n                \"quantity\": 5,\n                \"units_of_measurement\": \"MT\",\n                \"amount\": 0,\n                \"port_of_loading\": {\n                    \"port\": \"port1\",\n                    \"country\": \"country1\"\n                },\n                \"date_of_shipment\": \"2018-11-20T19:44:00+05:30\",\n                \"port_of_discharge\": {\n                    \"port\": \"port2\",\n                    \"country\": \"country2\"\n                },\n                \"shipment_period\": \"2018-11-20T19:44:00+05:30\",\n                \"total_shipment_value\": 50\n            },\n            \"obl_details\": {\n                \"bill_number\": \"12345\",\n                \"shipper_name\": \"Prathyusha\",\n                \"shipper_address\": \"address\",\n                \"receiver_name\": \"notify\",\n                \"receiver_address\": \"notify party address\",\n                \"date_of_shipping\": \"2018-11-20T19:44:33+05:30\",\n                \"number_of_shipping_units\": 5,\n                \"freight_classification\": \"\",\n                \"exact_weight_of_consignment\": \"\",\n                \"declared_value_of_asset\": 50\n            },\n            \"listing_type\": \"PUBLIC\",\n            \"docs\": [\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3d\",\n                    \"file\": {\n                        \"name\": \"comDex.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/QEY0A1Avu48pxRYLcomDex.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"copyOfObl\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                },\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3e\",\n                    \"file\": {\n                        \"name\": \"comDex.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/Wl9tzQXCgoi5avWhcomDex.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"invoice\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                },\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3f\",\n                    \"file\": {\n                        \"name\": \"Dip-5.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/QF5esD7ubbVltMkvDip-5.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"packingList\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                }\n            ],\n            \"couriers\": [],\n            \"numberOfAssetPeg\": 5,\n            \"numberOfFiatPeg\": 50,\n            \"escrows\": [],\n            \"status\": \"BUYER_ACCEPTED\",\n            \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n            \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n            \"updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n            \"feedback\": {\n                \"buyer\": {\n                    \"createdBy\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"rating\": 0,\n                    \"comments\": \"\"\n                },\n                \"seller\": {\n                    \"createdBy\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"rating\": 0,\n                    \"comments\": \"\"\n                }\n            },\n            \"buyerConfirmationTime\": null,\n            \"sellerConfirmationTime\": null,\n            \"statusActions\": [\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"CREATE_NEW_ORDER\",\n                    \"previousState\": \"INITIAL\",\n                    \"nextState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                    \"actionAt\": \"2018-11-20T19:45:18.85+05:30\",\n                    \"actionBy\": \"5beda8b7c55fd46c66bbc24f\"\n                },\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"ACCEPT\",\n                    \"previousState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                    \"nextState\": \"LISTED_FOR_TRADE\",\n                    \"actionAt\": \"2018-11-20T19:45:36.902+05:30\",\n                    \"actionBy\": \"5ba39d1035151b50bc0ccb36\"\n                },\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"ACCEPT\",\n                    \"previousState\": \"LISTED_FOR_TRADE\",\n                    \"nextState\": \"IN_MAIN_ESCROW\",\n                    \"actionAt\": \"2018-11-27T15:17:27.952+05:30\",\n                    \"actionBy\": \"5bfbf5e4c55fd42472094536\"\n                }\n            ],\n            \"offers\": [\n                {\n                    \"id\": \"5bf416f6c55fd43ab859cf40\",\n                    \"totalPrice\": 50,\n                    \"from_id\": \"\",\n                    \"order_id\": \"\",\n                    \"buyer_id\": \"\",\n                    \"privateBuyerOrgId\": \"\",\n                    \"amount\": 10,\n                    \"currency\": \"USD\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"created_by\": \"5beda8b7c55fd46c66bbc24f\",\n                    \"approved_at\": null,\n                    \"approved_by\": \"\",\n                    \"buy_requested_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"buy_requested_by\": \"\",\n                    \"buy_approved_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"buy_approved_by\": \"5bfbf5e4c55fd42472094536\",\n                    \"expires_at\": null,\n                    \"status\": \"BUYER_ACCEPTED\",\n                    \"status_updated_by\": \"\",\n                    \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"contract_doc\": {\n                        \"file\": {\n                            \"name\": \"comDex.pdf\",\n                            \"mime_type\": \"application/pdf\",\n                            \"path\": \"\",\n                            \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"APPROVED_BY_COMDEX\",\n                        \"status_updated_at\": null,\n                        \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                        \"approvedBy\": \"\",\n                        \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                        \"updated_at\": null\n                    },\n                    \"buyer_contract_doc\": {\n                        \"file\": {\n                            \"name\": \"comDex.pdf\",\n                            \"mime_type\": \"application/pdf\",\n                            \"path\": \"\",\n                            \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"WAITING_FOR_SELLER_APPROVAL\",\n                        \"status_updated_at\": null,\n                        \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                        \"approvedBy\": \"\",\n                        \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                        \"updated_at\": null\n                    },\n                    \"comments\": \"\"\n                }\n            ],\n            \"buyer_org_id\": \"5bfbf67bc55fd428df64381f\",\n            \"buyer_confirmed_contrcat\": {\n                \"file\": {\n                    \"name\": \"\",\n                    \"mime_type\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"size\": 0,\n                    \"checksum\": \"\"\n                },\n                \"status\": \"\",\n                \"status_updated_at\": null,\n                \"created_at\": null,\n                \"updated_at\": null\n            },\n            \"mainEscrow\": {\n                \"id\": \"\",\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"5bfd12afc55fd453cdbe3ad0\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"ACCEPTED\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"createdBy\": \"5bfbf5e4c55fd42472094536\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"seller\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cbo\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"assetPegTransactionId\": \"\",\n                    \"dollarPegTransactionId\": \"\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"proofOfFiatTx\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\"\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"assetPegTransactionId\": \"\",\n                    \"dollarPegTransactionId\": \"\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    }\n                }\n            },\n            \"buyerEscrow\": {\n                \"id\": \"\",\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cbo\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"obl_docs\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"updated_at\": null,\n                    \"updated_by\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                }\n            },\n            \"sellerEscrow\": {\n                \"id\": \"\",\n                \"seller\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"5bf41708c55fd43ab859cf42\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"RELEASED_ASSET_PEG\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"2018-11-20T19:45:36.898+05:30\",\n                    \"createdBy\": \"5ba39d1035151b50bc0ccb36\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"obl_docs\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"updated_at\": null,\n                    \"updated_by\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                }\n            },\n            \"comdexEscrow\": {\n                \"cso\": {\n                    \"createdBy\": \"\",\n                    \"ipAddress\": \"\",\n                    \"status\": \"\",\n                    \"transactionId\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"transactionReceipt\": {\n                        \"transactionId\": \"\",\n                        \"ipAddress\": \"\",\n                        \"file\": {\n                            \"name\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"mimetype\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"createdAt\": \"0001-01-01T00:00:00Z\"\n                    }\n                },\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\"\n                },\n                \"cbo\": {\n                    \"status\": \"\",\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"transactionReceipt\": {\n                        \"transactionId\": \"\",\n                        \"ipAddress\": \"\",\n                        \"file\": {\n                            \"name\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"mimetype\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"createdAt\": \"0001-01-01T00:00:00Z\"\n                    }\n                }\n            }\n       }]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occurred while getting orders</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>User not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occurred while getting orders\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User not found\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "GET",
    "url": "/users/{userId}/orders/count/all",
    "title": "Get user orders count",
    "version": "0.2.0",
    "name": "GetUserOrdersCount",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tdata: {\n\t\t \"a_b_count\": 3,\n        \"a_s_count\": 173,\n        \"d_count\": 4,\n        \"m_count\": 37,\n        \"total\": 313\n\t},\n\tmessage:\"\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>UserId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while getting user orders count</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "UserId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"UserId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User not found in order\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "User-Orders-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while getting user orders count\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/offers/{offerId}/negotiations/{negotiationId}/reject",
    "title": "Reject Negotiation",
    "version": "0.2.0",
    "name": "RejectNegotiation",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId.",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "offerId.",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "negotiationId.",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Rejected successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OfferId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OfferId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NegotiationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"NegotiationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Unauthorized-User-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\tsuccess:\"false\",\n\tmessage: \"Not authorized to reject the negotiation\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Update-Negotiation-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the negotiation\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/negotiations.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/seller/fiat/document/approve",
    "title": "Seller approves proof of fiat",
    "version": "0.2.0",
    "name": "SellerApprovesProofOfFiat",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>Blockchain account password</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Proof of fiat approved successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occurred while getting order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occurred while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Proof-Of-Fiat-Approve-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Buyer didn't uploaded proof of fiat\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Approve-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"This order was already approved\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in a state to update\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/seller/feedback",
    "title": "Seller feedback",
    "version": "0.2.0",
    "name": "SellerFeedback",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId.",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId.",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "rating",
            "description": "<p>Rating.</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n   \"Success\": \"true\",\n\t \"Message\" : \"Updated successfully\",\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in state to take feedback\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/negotiations.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/escrow",
    "title": "update escrow",
    "version": "0.2.0",
    "name": "SendToEscrow",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "from",
            "description": "<p>From address</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "to",
            "description": "<p>To address</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "escrowType",
            "description": "<p>Type of escrow</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \tsuccess: \"true\",\n\t\tmessage: \"Updated successfully\",\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Asset-Pegs-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order doesn't have any asset peg tokens\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Another-Organization-Order-Error:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\tsuccess:\"false\",\n\tmessage: \"Trying to access another organization order\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Send-Tokens-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Seller can't send tokens to escrow\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Accepted-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already accepted\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Wallet-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Wallet not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Seller-Wallet-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting seller org wallet\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Buyer-Wallet-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting buyer org wallet\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "TransactionId-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting transaction id\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Escrow-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating main escrow\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Send-Tokens-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Buyer can't send the dollar tokens to escrow\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Insufficient-cUSD-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Don't have dollar peg tokens\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Wallet-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting cbo organization wallet\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/commodity",
    "title": "Update commodity details",
    "version": "0.2.0",
    "name": "UpdateCommodityDetails",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "commodity",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "commodity.name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.quality",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.assetTypeId",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "commodity.delivery_term",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "commodity.quantity",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "commodity.amount",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "commodity.date_of_shipment",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "commodity.shipment_period",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "commodity.total_shipment_value",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "commodity.port_of_loading",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_loading.port",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_loading.country",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "commodity.port_of_discharge",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_discharge.port",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_discharge.country",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "obl_details",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.bill_number",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.shipper_name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.shipper_address",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.receiver_name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.receiver_address",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "time",
            "optional": false,
            "field": "obl_details.date_of_shipping",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "obl_details.number_of_shipping_units",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.freight_classification",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.exact_weight_of_consignment",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "obl_details.declared_value_of_asset",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "[]Object",
            "optional": false,
            "field": "docs_details",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.type",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.status",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "docs_details.file",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.type",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.mimetype",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.url",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "listing_type",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "contractId",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "[]string",
            "optional": false,
            "field": "trader_emails",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 201 StatusCreated\n{\n\tsuccess: \"true\",\n\tdata:{\n\t\t\"id\":\n\t\t\"sellerId\":\n\t\t\"sellerName\":\n\t\t\"sellerOrgName\":\n\t\t\"zoneId\":\n\t\t\"sellerAddress\":\n\t\t\"organizationId\":\n\t\t\"contractId\":\n\t\t\"csoOrgName\":\n\t\t\"csoOrgAddress\":\n\t\t\"CSOId\":\n\t\t\"commodity\": {\n\t\t\t\"name\":\n\t\t\t\"assetTypeName\":\n\t\t\t\"assetTypeId\":\n\t\t\t\"quality\":\n\t\t\t\"unitsOfMeasurement\":\n\t\t\t\"deliveryTerm\":\n\t\t\t\"quantity\":\n\t\t\t\"portOfLoading\": {\n\t\t\t\t\"port\":\n\t\t\t\t\"country\":\n\t\t\t},\n\t\t\t\"dateOfShipment\":\n\t\t\t\"portOfDischarge\": {\n\t\t\t\t\"port\":\n\t\t\t\t\"country\":\n\t\t\t},\n\t\t\t\"shipmentPeriod\":\n\t\t\t\"totalShipmentValue\":\n\t\t},\n\t\t\"oblDetails\":{\n\t\t\t\"billNumber\":\n\t\t\t\"shipperName\":\n\t\t\t\"shipperAddress\":\n\t\t\t\"receiverName\":\n\t\t\t\"receiverAddress\":\n\t\t\t\"dateOfShipping\":\n\t\t\t\"numberOfShippingUnits\":\n\t\t\t\"declaredValueOfAsset\":\n\t\t},\n\t\t\"listingType\":\n\t\tDocs:        {\n\t\t},\n\t\t\"status\":\n\t\t\"statusUpdatedAt\":\n\t\t\"createdAt\":\n\t\t\"updatedAt\":\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting wallet info</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Wallet-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Wallet not found,please create your own wallet\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Wallet-Info-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting wallet info\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "organization-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Zone-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization zone id not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Admin-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching admin of organization\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Files-Missing-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Some files are missing\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting user details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Asset-Type-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Asset type not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting asset type\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Creation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while creating the order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Satatus-Action-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the status action\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/buyer/docs/status/receive",
    "title": "Buyer updates doc status",
    "name": "UpdateDocStatusByBuyer",
    "version": "0.2.0",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>OrganizationId</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId",
            "description": "<p>OrderId</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "status",
            "description": "<p>Status</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments</p>"
          },
          {
            "group": "Request body",
            "type": "[]file",
            "optional": false,
            "field": "files",
            "description": "<p>{copyOfObl,invoice,packingList,contractDoc}</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage:\"Updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while occured decoding the file</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Files-Missing-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Files are missing\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while occured decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Unauthorized-Error-Response:",
          "content": "HTTP/1.1 401 NotAuthorized\n{\n\tsuccess:\"false\",\n\tmessage: \"Not authorized to update the status\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Already-Updated-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You are already updated recieved docs\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Seller-Obl-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Seller didn't send the obl\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Comdex-Obl-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Comdex didn't send the obl\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Doc-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the doc status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/cbo/docs/status",
    "title": "Cbo updates docs status",
    "name": "UpdateDocStatusByCBO",
    "version": "0.2.0",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "status",
            "description": "<p>Status</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t success: \"true\",\n\t message:\"Updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "NotAuthorized-Error-Response:",
          "content": "HTTP/1.1 401  NotAuthorized\n{\n\tsuccess:\"false\",\n\tmessage: \"Not authorized to update the status\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Already-Accepted-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already accepted\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Already-Rejected-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already rejected\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Invalid status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Doc-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the doc status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/cso/docs/status",
    "title": "Cso updates doc status",
    "name": "UpdateDocStatusByCSO",
    "version": "0.2.0",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "status",
            "description": "<p>Status</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\t\"message\":\"Updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Unauthorized-Error-Response:",
          "content": "HTTP/1.1 401  NotAuthorized\n{\n\tsuccess:\"false\",\n\tmessage: \"Not authorized to update the status\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Already-Accepted-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already accepted\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Already-Rejected-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already rejected\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Invalid status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Doc-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the doc status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/cso/docs/receive",
    "title": "Cso updates doc status",
    "name": "UpdateDocStatusByCSO",
    "version": "0.2.0",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "status",
            "description": "<p>Status</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments</p>"
          },
          {
            "group": "Request body",
            "type": "[]file",
            "optional": false,
            "field": "files",
            "description": "<p>{copyOfObl,invoice,packingList,contractDoc}</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage:\"Updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while occured decoding the file</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Files-Missing-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Files are missing\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "File-Decoding-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while occured decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Unauthorized-Error-Response:",
          "content": "HTTP/1.1 401 NotAuthorized\n{\n\tsuccess:\"false\",\n\tmessage: \"Not authorized to update the status\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Already-Accepted-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already accepted\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Invalid status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Doc-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the doc status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/couriers/{from}/{to}",
    "title": "Update courier details",
    "version": "0.2.0",
    "name": "UpdateOrderCourierDetails",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "from",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "to",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "awb_number",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "int64",
            "optional": false,
            "field": "sent_at",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "int64",
            "optional": false,
            "field": "received_at",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "serviceName",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "link",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "trackingNumber",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: \"true\",\n message: Sent successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Invalid order status</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "From-Address-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"from address required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "To-Address-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"to address required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Invalid order status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occurred while fetching order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Accpeted-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already Accepted\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Deatils-Update-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while updating order details\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/details",
    "title": "Update order details",
    "version": "0.2.0",
    "name": "UpdateOrderDetails",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "commodity",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "commodity.name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.quality",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.assetTypeId",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "commodity.delivery_term",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "commodity.quantity",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "commodity.amount",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "commodity.date_of_shipment",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Number",
            "optional": false,
            "field": "commodity.shipment_period",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "commodity.total_shipment_value",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "commodity.port_of_loading",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_loading.port",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_loading.country",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "commodity.port_of_discharge",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_discharge.port",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "commodity.port_of_discharge.country",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "obl_details",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.bill_number",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.shipper_name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.shipper_address",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.receiver_name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.receiver_address",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "time",
            "optional": false,
            "field": "obl_details.date_of_shipping",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "obl_details.number_of_shipping_units",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.freight_classification",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "obl_details.exact_weight_of_consignment",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "obl_details.declared_value_of_asset",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "[]Object",
            "optional": false,
            "field": "docs_details",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.type",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.status",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "docs_details.file",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.name",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.type",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.mimetype",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "docs_details.file.url",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "listing_type",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "contractId",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "[]string",
            "optional": false,
            "field": "trader_emails",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tdata:{\n\t\t\"id\":\n\t\t\"sellerId\":\n\t\t\"sellerName\":\n\t\t\"sellerOrgName\":\n\t\t\"zoneId\":\n\t\t\"sellerAddress\":\n\t\t\"organizationId\":\n\t\t\"contractId\":\n\t\t\"csoOrgName\":\n\t\t\"csoOrgAddress\":\n\t\t\"CSOId\":\n\t\t\"commodity\": {\n\t\t\t\"name\":\n\t\t\t\"assetTypeName\":\n\t\t\t\"assetTypeId\":\n\t\t\t\"quality\":\n\t\t\t\"unitsOfMeasurement\":\n\t\t\t\"deliveryTerm\":\n\t\t\t\"quantity\":\n\t\t\t\"portOfLoading\": {\n\t\t\t\t\"port\":\n\t\t\t\t\"country\":\n\t\t\t},\n\t\t\t\"dateOfShipment\":\n\t\t\t\"portOfDischarge\": {\n\t\t\t\t\"port\":\n\t\t\t\t\"country\":\n\t\t\t},\n\t\t\t\"shipmentPeriod\":\n\t\t\t\"totalShipmentValue\":\n\t\t},\n\t\t\"oblDetails\":{\n\t\t\t\"billNumber\":\n\t\t\t\"shipperName\":\n\t\t\t\"shipperAddress\":\n\t\t\t\"receiverName\":\n\t\t\t\"receiverAddress\":\n\t\t\t\"dateOfShipping\":\n\t\t\t\"numberOfShippingUnits\":\n\t\t\t\"declaredValueOfAsset\":\n\t\t},\n\t\t\"listingType\":\n\t\tDocs:        {\n\t\t},\n\t\t\"status\":\n\t\t\"statusUpdatedAt\":\n\t\t\"createdAt\":\n\t\t\"updatedAt\":\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occurred while fetching order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Unauthorized-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occurred while fetching order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Update-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order cannot be updated now\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Asset-Type-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Asset type not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Asset-Type-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting asset type\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Details-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occurred while getting order details\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/review",
    "title": "Update order status",
    "version": "0.2.0",
    "name": "UpdateOrderStatus",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>Blockchain account password</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 201 StatusCreated\n{\n\tsuccess: \"true\",\n\tdata: null,\n\tmessage:\"Order updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting wallet info</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Wallet-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Wallet not found,please create your own wallet\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Wallet-Info-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting wallet info\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "organization-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Zone-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization zone id not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Admin-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while fetching admin of organization\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Files-Missing-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Some files are missing\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting user details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Asset-Type-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Asset type not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting asset type\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Creation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while creating the order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Satatus-Action-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the status action\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/cbo/docs/receive",
    "title": "Cbo updates recieve status",
    "name": "UpdateReceiveDocStatusByCBO",
    "version": "0.2.0",
    "group": "Orders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "status",
            "description": "<p>Status</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments</p>"
          },
          {
            "group": "Request body",
            "type": "[]file",
            "optional": false,
            "field": "files",
            "description": "<p>{copyOfObl,invoice,packingList,contractDoc}</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t success: \"true\",\n\t message:\"Updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while occured decoding the file</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Files-Missing-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Files are missing\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while occured decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Unauthorized-Error-Response:",
          "content": "HTTP/1.1 401 NotAuthorized\n{\n\tsuccess:\"false\",\n\tmessage: \"Not authorized to update the status\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Already-Accepted-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already accepted\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Invalid status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Doc-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the doc status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "Orders"
  },
  {
    "type": "PUT",
    "url": "/organization/bankprofile",
    "title": "Add bank details",
    "version": "0.2.0",
    "name": "AddBankDetails",
    "group": "Organization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "nick_name",
            "description": "<p>NickName</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_bank",
            "description": "<p>BeneficiaryBank</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_bank_country",
            "description": "<p>BeneficiaryBankCountry</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_swift",
            "description": "<p>BeneficiarySwift</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_bank_address",
            "description": "<p>BeneficiaryBankAddress</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_bank_zip",
            "description": "<p>BeneficiaryBankZip</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "correspondence_bank",
            "description": "<p>CorrespondenceBank</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "correspondence_swift",
            "description": "<p>CorrespondenceSwift</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "account_number",
            "description": "<p>AccountNumber</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "account_holder_name",
            "description": "<p>AccountHolderName</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 201 StatusCreated\n{\n\tsuccess: \"true\",\n\tmessage: \"Bank details are updated successfully\",\n\tdata:{\n\t\t\"nickName\" : \"\",\n\t\t\"beneficiaryBank\" : \"\",\n\t\t\"beneficiaryBankCountry\" : \"\",\n\t\t\"beneficiarySwift\" : \"\",\n\t\t\"beneficiaryBankAddress\" : \"\",\n\t\t\"beneficiaryBankZip\" : \"\",\n\t\t\"correspondenceBank\" : \"\",\n\t\t\"correspondenceSwift\" : \"\",\n\t\t\"accountNumber\" : \"\",\n\t\t\"accountHolderName\" : \"\",\n\t\t\"status\" : \"\"\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occurred while creating profile</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 Validation-Error\n{\n\tsuccess:\"false\",\n\tmessage: \"validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occurred while creating profile\"\n     errors:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "Organization"
  },
  {
    "type": "POST",
    "url": "/organizations",
    "title": "Add organization",
    "version": "0.2.0",
    "name": "AddOrganizationProfile",
    "group": "Organization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "name",
            "description": "<p>Name</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "doe",
            "description": "<p>Doe</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "address",
            "description": "<p>Address</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "zone_id",
            "description": "<p>ZoneId</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "zone",
            "description": "<p>Zone</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "zip_code",
            "description": "<p>Zipcode</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "nick_name",
            "description": "<p>NickName</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_bank",
            "description": "<p>BeneficiaryBank</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_bank_country",
            "description": "<p>BeneficiaryBankCountry</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_swift",
            "description": "<p>BeneficiarySwift</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_bank_address",
            "description": "<p>BeneficiaryBankAddress</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_bank_zip",
            "description": "<p>BeneficiaryBankZip</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "correspondence_bank",
            "description": "<p>CorrespondenceBank</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "correspondence_swift",
            "description": "<p>CorrespondenceSwift</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "account_number",
            "description": "<p>AccountNumber</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "account_holder_name",
            "description": "<p>AccountHolderName</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "abbreviation",
            "description": "<p>Abbreviation</p>"
          },
          {
            "group": "Request body",
            "type": "[]Object",
            "optional": false,
            "field": "ubo",
            "description": "<p>UBO</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "ubo.name",
            "description": "<p>Name</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "ubo.type",
            "description": "<p>Type</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "ubo.percentage",
            "description": "<p>Percentage</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "ubo.relationship",
            "description": "<p>Relationship</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tdata:{\n\t\"_id\" : \"\",\n\t\"name\" : \"\",\n\t\"ubo\" : [\n\t\t{\n\t\t\t\"name\" : \"\",\n\t\t\t\"type\" : \"\",\n\t\t\t\"percentage\" : \"\",\n\t\t\t\"relationship\" : \"\"\n\t\t}\n\t],\n\t\"zoneId\" : \"\",\n\t\"doe\" : \"\",\n\t\"accountStatus\" : \"\",\n\t\"commentsByComdex\" : \"\",\n\t\"address\" : \"\",\n\t\"zipcode\" : \"\",\n\t\"bankAccount\" : {\n\t\t\"nickName\" : \"\",\n\t\t\"beneficiaryBank\" : \"\",\n\t\t\"beneficiaryBankCountry\" : \"\",\n\t\t\"beneficiarySwift\" : \"\",\n\t\t\"beneficiaryBankAddress\" : \"\",\n\t\t\"beneficiaryBankZip\" : \"\",\n\t\t\"correspondenceBank\" : \"\",\n\t\t\"correspondenceSwift\" : \"\",\n\t\t\"accountNumber\" : \"\",\n\t\t\"accountHolderName\" : \"\",\n\t\t\"status\" : \"\"\n\t},\n\t\"kyc\" : {\n\t\t\"approvedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"kycStatus\" : \"\",\n\t\t\"docs\" : [ ]\n\t},\n\t\"isComdexUser\" : ,\n\t\"createdAt\" : ISODate(\"2018-11-26T12:39:55.357Z\"),\n\t\"abbreviation\" : \"\"\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while creating the organization</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OTP not found.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Unauthorized-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Organization-Creation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while creating the organization\"\n     errors:{}\n}",
          "type": "json"
        },
        {
          "title": "Role-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\tsuccess:\"false\",\n\tmessage: \"Super admin Role not found\",\n\terror: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting role by name\"\n     errors:{}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\tsuccess:\"false\",\n\tmessage: \"UserId not found\",\n\terror: {}\n}",
          "type": "json"
        },
        {
          "title": "Add-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while adding organization to user\"\n     errors:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "Organization"
  },
  {
    "type": "GET",
    "url": "/bankdetails/{zoneId}",
    "title": "Get bank details",
    "version": "0.2.0",
    "name": "GetBankDetails",
    "group": "Organization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "zoneId",
            "description": "<p>ZoneId.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t  \"success\": true,\n   \"data\": {\n       \"nick_name\": \"\",\n       \"beneficiary_bank\": \"\",\n       \"beneficiary_bank_country\": \"\",\n       \"beneficiary_swift\": \"\",\n       \"beneficiary_bank_address\": \"\",\n       \"beneficiary_bank_zip\": \"\",\n       \"correspondence_bank\": \"\",\n       \"correspondence_swift\": \"\",\n       \"account_number\": \"\",\n       \"account_holder_name\": \"\",\n       \"status\": \"\"\n   }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Zone not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting bank details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Unauthorized-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Zone-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Zone not found with this id\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bank-Details-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Bank details not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting bank details\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "Organization"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/address",
    "title": "Get orgAddress",
    "version": "0.2.0",
    "name": "GetOrgAddress",
    "group": "Organization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t  \"success\": true,\n   \"data\": {\n        \"_id\": \"5beda971c55fd46c66bbc250\",\n        \"address\": \"Singapore,\\nPhase 2,\\nBlock A\",\n        \"zipcode\": \"\"\n    }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Organization not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting organization address</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Unauthorized-Error:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization address\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "Organization"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/bank/details",
    "title": "Get organization bank details",
    "version": "0.2.0",
    "name": "GetOrganizationBankDetails",
    "group": "Organization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>OrganizationId.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t  \"success\": true,\n   \"data\": {\n       \"nick_name\": \"\",\n       \"beneficiary_bank\": \"\",\n       \"beneficiary_bank_country\": \"\",\n       \"beneficiary_swift\": \"\",\n       \"beneficiary_bank_address\": \"\",\n       \"beneficiary_bank_zip\": \"\",\n       \"correspondence_bank\": \"\",\n       \"correspondence_swift\": \"\",\n       \"account_number\": \"\",\n       \"account_holder_name\": \"\",\n       \"status\": \"\"\n   }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Organization not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting bank details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Unauthorized-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"organizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bank-Details-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Bank details not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting bank details\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "Organization"
  },
  {
    "type": "GET",
    "url": "/zones/{zoneId}/organizations/{organizationId}",
    "title": "Get zone organization",
    "version": "0.2.0",
    "name": "GetZoneOrganization",
    "group": "Organization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "zoneId",
            "description": "<p>zoneId</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>organizationId</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t success: true,\n\t data: {\n\t\t\t\"id\": \"\",\n            \"name\": \"\",\n            \"ubo\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"\",\n                    \"percentage\": \"\",\n                    \"relationship\": \"\"\n                }\n            ],\n            \"zoneId\": \"\",\n            \"userId\": \"\",\n            \"doe\": \"\",\n            \"account_status\": \"\",\n            \"commentsByComdex\": \"\",\n            \"address\": \"\",\n            \"zipcode\": \"\",\n            \"bank_account\": {\n                \"nick_name\": \"\",\n                \"beneficiary_bank\": \"\",\n                \"beneficiary_bank_country\": \"\",\n                \"beneficiary_swift\": \"\",\n                \"beneficiary_bank_address\": \"\",\n                \"beneficiary_bank_zip\": \"\",\n                \"correspondence_bank\": \"\",\n                \"correspondence_swift\": \"\",\n                \"account_number\": \"\",\n                \"account_holder_name\": \"\",\n                \"status\": \"\"\n            },\n            \"kyc\": {\n                \"approved_by\": \"\",\n                \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                \"kyc_status\": \"\",\n                \"docs\": []\n            },\n            \"is_comdex_user\": ,\n            \"created_at\": \"\",\n            \"abbreviation\": \"\"\n        },\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting zone organization</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Unauthorized-Error:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "ZoneId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"ZoneId not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting zone organization\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "Organization"
  },
  {
    "type": "GET",
    "url": "/zones/{zoneId}/organizations",
    "title": "Get zone organizations",
    "version": "0.2.0",
    "name": "GetZoneOrganizations",
    "group": "Organization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "zoneId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t success: true,\n\t data: [{\n\t\t\t\"id\": \"\",\n            \"name\": \"\",\n            \"ubo\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"\",\n                    \"percentage\": \"\",\n                    \"relationship\": \"\"\n                }\n            ],\n            \"zoneId\": \"\",\n            \"userId\": \"\",\n            \"doe\": \"\",\n            \"account_status\": \"\",\n            \"commentsByComdex\": \"\",\n            \"address\": \"\",\n            \"zipcode\": \"\",\n            \"bank_account\": {\n                \"nick_name\": \"\",\n                \"beneficiary_bank\": \"\",\n                \"beneficiary_bank_country\": \"\",\n                \"beneficiary_swift\": \"\",\n                \"beneficiary_bank_address\": \"\",\n                \"beneficiary_bank_zip\": \"\",\n                \"correspondence_bank\": \"\",\n                \"correspondence_swift\": \"\",\n                \"account_number\": \"\",\n                \"account_holder_name\": \"\",\n                \"status\": \"\"\n            },\n            \"kyc\": {\n                \"approved_by\": \"\",\n                \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                \"kyc_status\": \"\",\n                \"docs\": []\n            },\n            \"is_comdex_user\": ,\n            \"created_at\": \"\",\n            \"abbreviation\": \"\"\n        },\n\t}]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>ZoneId not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting zone organizations</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "ZoneId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Zone id is required in params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Zone-Organizations-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting zone organizations\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization_com.go",
    "groupTitle": "Organization"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/profile/review",
    "title": "Update organization profileReview",
    "version": "0.2.0",
    "name": "OrganizationProfileReview",
    "group": "Organization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>OrganizationId</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 201 StatusCreated\n{\n\tsuccess: \"true\",\n\tmessage:\"Updated successfully\",\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Not an authorized user</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Organization not found</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"You are not an autorized user\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Required-Error:",
          "content": "HTTP/1.1 422 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Organization id required in the route params\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while updating details\"\n     errors:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating organization status pending\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "Organization"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/terms",
    "title": "Add terms and conditions",
    "version": "0.2.0",
    "name": "TermsAndConditions",
    "group": "Organization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>OrganizationId</p>"
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "object",
            "optional": false,
            "field": "file",
            "description": "<p>File</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Terms and Conditions added successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>File invalid extension</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OragnizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"File is required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Invalid-Extension-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"File is invalid extesnion\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Terms-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating terms and conditions\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Request-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Organization already verified\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "Organization"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/kyc/details",
    "title": "Update all kyc docs",
    "version": "0.2.0",
    "name": "UpdateAllKycDocs",
    "group": "Organization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>OrganizationId</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "[]file",
            "optional": false,
            "field": "file",
            "description": "<p>kyc doc to update</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: \"true\",\n\tmessage: \"Updated successfully\"\n\tdata:{\n\t\t\t\t\"id\" : ObjectId(\"5c52cc40c55fd4483f211e3b\"),\n\t\t\t\t\"path\" : \"\",\n\t\t\t\t\"url\" : \"\",\n\t\t\t\t\"docStatus\" : \"\",\n\t\t\t\t\"comments\" : \"\",\n\t\t\t\t\"docType\" : \"\",\n\t\t\t\t\"approvedAt\" : ISODate(\"2019-01-31T10:49:39.481Z\"),\n\t\t\t\t\"fileType\" : \"\",\n\t\t\t\t\"fileName\" : \"\",\n\t\t\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\t\t\"month\" : \"\",\n\t\t\t\t\"year\" : \"\",\n\t\t\t\t\"approvedBy\" : \"\"\n\n\t\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid user</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting organization details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"You are not an authorized user\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Docs-Empty-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Docs are empty\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Zone-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting zone\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the organization details\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "Organization"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/kyc/docs/{docId}",
    "title": "update kycdoc",
    "version": "0.2.0",
    "name": "UpdateKYCSingleDoc",
    "group": "Organization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>OrganizationId</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "docId",
            "description": "<p>DocId</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "file",
            "optional": false,
            "field": "file",
            "description": "<p>kyc doc to update</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: \"true\",\n\tmessage: 'Updated successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting organization details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Unauthorized-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "DocId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"DocId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Kyc-Verified-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Kyc already verified, u can't update this doc now\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Kyc-Update-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while updating the kyc doc\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "Organization"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/kyc-docs/{docType}",
    "title": "update kycdoc by doc type",
    "version": "0.2.0",
    "name": "UpdateKycDocByDocType",
    "group": "Organization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>OrganizationId</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "docType",
            "description": "<p>docType</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "file",
            "optional": false,
            "field": "file",
            "description": "<p>kyc doc to update</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: \"true\",\n\tmessage: \"Updated successfully\"\n\tdata:{\n\t\t\t\t\"id\" : ObjectId(\"5c52cc40c55fd4483f211e3b\"),\n\t\t\t\t\"path\" : \"\",\n\t\t\t\t\"url\" : \"\",\n\t\t\t\t\"docStatus\" : \"\",\n\t\t\t\t\"comments\" : \"\",\n\t\t\t\t\"docType\" : \"\",\n\t\t\t\t\"approvedAt\" : ISODate(\"2019-01-31T10:49:39.481Z\"),\n\t\t\t\t\"fileType\" : \"\",\n\t\t\t\t\"fileName\" : \"\",\n\t\t\t\t\"createdAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\t\t\"updatedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\t\t\"deletedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\t\t\"month\" : \"\",\n\t\t\t\t\"year\" : \"\",\n\t\t\t\t\"approvedBy\" : \"\"\n\n\t\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid user</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting organization details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Unauthorized-Error:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"You are not an authorized user\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Kyc-Verified-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Kyc already verified, u can't update this doc now\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Kyc-Update-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while updating the kyc doc\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Check-Kyc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while checking kyc doc type in kyc\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Kyc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating kyc doc\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "Organization"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/logo",
    "title": "Update organization logo",
    "version": "0.2.0",
    "name": "UpdateOrganizationLogo",
    "group": "Organization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>OrganizationId</p>"
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "object",
            "optional": false,
            "field": "file",
            "description": "<p>File</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: 'Logo updated successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>File invalid extension</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OragnizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"File is required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Invalid-Extension-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"File is invalid extesnion\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Logo-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating logo\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Request-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You can't update another organization logo\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "Organization"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/profile",
    "title": "Update organization profile",
    "version": "0.2.0",
    "name": "UpdateOrganizationProfile",
    "group": "Organization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>OrganizationId</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "name",
            "description": "<p>Name</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "doe",
            "description": "<p>Doe</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "address",
            "description": "<p>Address</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "zone_id",
            "description": "<p>ZoneId</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "zone",
            "description": "<p>Zone</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "zip_code",
            "description": "<p>Zipcode</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "nick_name",
            "description": "<p>NickName</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_bank",
            "description": "<p>BeneficiaryBank</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_bank_country",
            "description": "<p>BeneficiaryBankCountry</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_swift",
            "description": "<p>BeneficiarySwift</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_bank_address",
            "description": "<p>BeneficiaryBankAddress</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "beneficiary_bank_zip",
            "description": "<p>BeneficiaryBankZip</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "correspondence_bank",
            "description": "<p>CorrespondenceBank</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "correspondence_swift",
            "description": "<p>CorrespondenceSwift</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "account_number",
            "description": "<p>AccountNumber</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "account_holder_name",
            "description": "<p>AccountHolderName</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "abbreviation",
            "description": "<p>Abbreviation</p>"
          },
          {
            "group": "Request body",
            "type": "[]Object",
            "optional": false,
            "field": "ubo",
            "description": "<p>UBO</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "ubo.name",
            "description": "<p>Name</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "ubo.type",
            "description": "<p>Type</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "ubo.percentage",
            "description": "<p>Percentage</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "ubo.relationship",
            "description": "<p>Relationship</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 201 StatusCreated\n{\n\tsuccess: true,\n\tmessage:\"Updated successfully\",\n\tdata:{\n\t\"_id\" : \"\",\n\t\"name\" : \"\",\n\t\"ubo\" : [\n\t\t{\n\t\t\t\"name\" : \"\",\n\t\t\t\"type\" : \"\",\n\t\t\t\"percentage\" : \"\",\n\t\t\t\"relationship\" : \"\"\n\t\t}\n\t],\n\t\"zoneId\" : \"\",\n\t\"doe\" : \"\",\n\t\"accountStatus\" : \"\",\n\t\"commentsByComdex\" : \"\",\n\t\"address\" : \"\",\n\t\"zipcode\" : \"\",\n\t\"bankAccount\" : {\n\t\t\"nickName\" : \"\",\n\t\t\"beneficiaryBank\" : \"\",\n\t\t\"beneficiaryBankCountry\" : \"\",\n\t\t\"beneficiarySwift\" : \"\",\n\t\t\"beneficiaryBankAddress\" : \"\",\n\t\t\"beneficiaryBankZip\" : \"\",\n\t\t\"correspondenceBank\" : \"\",\n\t\t\"correspondenceSwift\" : \"\",\n\t\t\"accountNumber\" : \"\",\n\t\t\"accountHolderName\" : \"\",\n\t\t\"status\" : \"\"\n\t},\n\t\"kyc\" : {\n\t\t\"approvedAt\" : ISODate(\"0001-01-01T00:00:00Z\"),\n\t\t\"kycStatus\" : \"\",\n\t\t\"docs\" : [ ]\n\t},\n\t\"isComdexUser\" : \"\",\n\t\"createdAt\" : ISODate(\"2018-11-26T12:39:55.357Z\"),\n\t\"abbreviation\" : \"\"\n\t}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while updating details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Status-Unauthorized:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 Validation-Error\n{\n\tsuccess:\"false\",\n\tmessage: \"validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 OrganizationId-Required-Error:\n{\n\tsuccess:\"false\",\n\tmessage: \"Organization id required\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while updating details\"\n     errors:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "Organization"
  },
  {
    "type": "PUT",
    "url": "/transferRequests/{transferRequestId}/approve",
    "title": "Approve add funds request",
    "version": "0.1.0",
    "name": "ApproveFundsStatus",
    "group": "UnusedComdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "file",
            "optional": false,
            "field": "file",
            "description": "<p>File</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Approved successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting transaction details</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while decoding file</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Transaction id not found\"\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Transaction id not found\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Transaction id not found\"\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Transaction id not found\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadErrorResponse\n{\n\t success:\"false\",\n\t message: \"Error while decoding file\"\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while decoding file\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex_com.go",
    "groupTitle": "UnusedComdex"
  },
  {
    "type": "DELETE",
    "url": "/organizations/invitations/{invitationId}",
    "title": "Delete invitation",
    "version": "0.1.0",
    "name": "DeleteInvitation",
    "group": "UnusedInvitations",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Deleted successully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while deleting invitation.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Invitation not found\",\n    errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Invitation not found\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/invitation_com.go",
    "groupTitle": "UnusedInvitations"
  },
  {
    "type": "DELETE",
    "url": "/organization/{organizationId}/trader/{traderId}",
    "title": "Delete Trader",
    "name": "DeleteTrader",
    "group": "UnusedInvitations",
    "version": "0.1.0",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Deleted successully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while deleting trader</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Trader id not found\",\n    errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Trader id not found\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/invitation_com.go",
    "groupTitle": "UnusedInvitations"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/offers/{offerId}/cso/contract/doc/approve",
    "title": "Cso approves contract doc",
    "name": "ApproveContractDocByCso",
    "version": "0.2.0",
    "group": "UnusedOrders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "offerId",
            "optional": false,
            "field": "OfferId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t success: \"true\",\n\t message:\"Updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting single offer</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OfferId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting single offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 NotAuthorized\n{\n\tsuccess:\"false\",\n\tmessage: \"Not authorized to update the order\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Offer is not in state to update\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating buyer contract doc status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "UnusedOrders"
  },
  {
    "type": "DELETE",
    "url": "/orders/{orderId}",
    "title": "Delete Order",
    "version": "0.1.0",
    "name": "DeleteOrder",
    "group": "UnusedOrders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "order_id",
            "description": "<p>OrderId</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Deleted successuflly'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while fetching order details</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Order not found\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\t success:\"false\",\n\t message: \"Error while validating the input\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while validating inputs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/order_com.go",
    "groupTitle": "UnusedOrders"
  },
  {
    "type": "DELETE",
    "url": "/orders/{orderId}/docs/{docType}",
    "title": "Delete order doc",
    "version": "0.1.0",
    "name": "DeleteOrderDoc",
    "group": "UnusedOrders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "order_id",
            "description": "<p>OrderId</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "doc_type",
            "description": "<p>DocType</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Deleted successully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while fetching order details\"\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error occured while fetching order details\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\t success:\"false\",\n\t message: \"Error while validating the input\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while validating inputs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/order_com.go",
    "groupTitle": "UnusedOrders"
  },
  {
    "type": "GET",
    "url": "/me/orders/{orderId}",
    "title": "Get my order",
    "version": "0.1.0",
    "name": "GetMyOrder",
    "group": "UnusedOrders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "order_id",
            "description": "<p>OrderId</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \t\"success\": true,\n\t\t\"data\":{\n            \"id\": \"5bf416f6c55fd43ab859cf3c\",\n            \"name\": \"\",\n            \"seller_id\": \"5beda8b7c55fd46c66bbc24f\",\n            \"sellerName\": \"\",\n            \"sellerOrgName\": \"Singapore LP Org\",\n            \"sellerAddress\": \"Singapore,\\nPhase 2,\\nBlock A\",\n            \"zoneId\": \"5b9fcee7754df2cefbde73e5\",\n            \"csoOrgName\": \"Comdex Singapore\",\n            \"csoOrgAddress\": \"105 Sims Ave, Singapore 387429\",\n            \"organization_id\": \"5beda971c55fd46c66bbc250\",\n            \"contractId\": \"SSG111810\",\n            \"csoid\": \"5ba35d4f35151b44c1ad9144\",\n            \"buyer_id\": \"5bfbf5e4c55fd42472094536\",\n            \"buyer_zone_id\": \"5ba38d51754df2cefbe47eb1\",\n            \"buyerAddress\": \"vfr3e2wa\",\n            \"buyerName\": \"\",\n            \"buyerOrgName\": \"u8gdwhd\",\n            \"cboName\": \"Comdex Malaysia\",\n            \"cboOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n            \"cboid\": \"5ba39b5c35151b50bc0ccb33\",\n            \"commodity\": {\n                \"name\": \"bc3\",\n                \"assetTypeId\": \"5ba3565904809ddf6a340165\",\n                \"assetTypeName\": \"COAL\",\n                \"quality\": \"A+\",\n                \"delivery_term\": \"FOB\",\n                \"quantity\": 5,\n                \"units_of_measurement\": \"MT\",\n                \"amount\": 0,\n                \"port_of_loading\": {\n                    \"port\": \"port1\",\n                    \"country\": \"country1\"\n                },\n                \"date_of_shipment\": \"2018-11-20T19:44:00+05:30\",\n                \"port_of_discharge\": {\n                    \"port\": \"port2\",\n                    \"country\": \"country2\"\n                },\n                \"shipment_period\": \"2018-11-20T19:44:00+05:30\",\n                \"total_shipment_value\": 50\n            },\n            \"obl_details\": {\n                \"bill_number\": \"12345\",\n                \"shipper_name\": \"Prathyusha\",\n                \"shipper_address\": \"address\",\n                \"receiver_name\": \"notify\",\n                \"receiver_address\": \"notify party address\",\n                \"date_of_shipping\": \"2018-11-20T19:44:33+05:30\",\n                \"number_of_shipping_units\": 5,\n                \"freight_classification\": \"\",\n                \"exact_weight_of_consignment\": \"\",\n                \"declared_value_of_asset\": 50\n            },\n            \"listing_type\": \"PUBLIC\",\n            \"docs\": [\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3d\",\n                    \"file\": {\n                        \"name\": \"comDex.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/QEY0A1Avu48pxRYLcomDex.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"copyOfObl\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                },\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3e\",\n                    \"file\": {\n                        \"name\": \"comDex.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/Wl9tzQXCgoi5avWhcomDex.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"invoice\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                },\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3f\",\n                    \"file\": {\n                        \"name\": \"Dip-5.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/QF5esD7ubbVltMkvDip-5.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"packingList\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                }\n            ],\n            \"couriers\": [],\n            \"numberOfAssetPeg\": 5,\n            \"numberOfFiatPeg\": 50,\n            \"escrows\": [],\n            \"status\": \"BUYER_ACCEPTED\",\n            \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n            \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n            \"updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n            \"feedback\": {\n                \"buyer\": {\n                    \"createdBy\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"rating\": 0,\n                    \"comments\": \"\"\n                },\n                \"seller\": {\n                    \"createdBy\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"rating\": 0,\n                    \"comments\": \"\"\n                }\n            },\n            \"buyerConfirmationTime\": null,\n            \"sellerConfirmationTime\": null,\n            \"statusActions\": [\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"CREATE_NEW_ORDER\",\n                    \"previousState\": \"INITIAL\",\n                    \"nextState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                    \"actionAt\": \"2018-11-20T19:45:18.85+05:30\",\n                    \"actionBy\": \"5beda8b7c55fd46c66bbc24f\"\n                },\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"ACCEPT\",\n                    \"previousState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                    \"nextState\": \"LISTED_FOR_TRADE\",\n                    \"actionAt\": \"2018-11-20T19:45:36.902+05:30\",\n                    \"actionBy\": \"5ba39d1035151b50bc0ccb36\"\n                },\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"ACCEPT\",\n                    \"previousState\": \"LISTED_FOR_TRADE\",\n                    \"nextState\": \"IN_MAIN_ESCROW\",\n                    \"actionAt\": \"2018-11-27T15:17:27.952+05:30\",\n                    \"actionBy\": \"5bfbf5e4c55fd42472094536\"\n                }\n            ],\n            \"offers\": [\n                {\n                    \"id\": \"5bf416f6c55fd43ab859cf40\",\n                    \"totalPrice\": 50,\n                    \"from_id\": \"\",\n                    \"order_id\": \"\",\n                    \"buyer_id\": \"\",\n                    \"privateBuyerOrgId\": \"\",\n                    \"amount\": 10,\n                    \"currency\": \"USD\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"created_by\": \"5beda8b7c55fd46c66bbc24f\",\n                    \"approved_at\": null,\n                    \"approved_by\": \"\",\n                    \"buy_requested_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"buy_requested_by\": \"\",\n                    \"buy_approved_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"buy_approved_by\": \"5bfbf5e4c55fd42472094536\",\n                    \"expires_at\": null,\n                    \"status\": \"BUYER_ACCEPTED\",\n                    \"status_updated_by\": \"\",\n                    \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"contract_doc\": {\n                        \"file\": {\n                            \"name\": \"comDex.pdf\",\n                            \"mime_type\": \"application/pdf\",\n                            \"path\": \"\",\n                            \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"APPROVED_BY_COMDEX\",\n                        \"status_updated_at\": null,\n                        \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                        \"approvedBy\": \"\",\n                        \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                        \"updated_at\": null\n                    },\n                    \"buyer_contract_doc\": {\n                        \"file\": {\n                            \"name\": \"comDex.pdf\",\n                            \"mime_type\": \"application/pdf\",\n                            \"path\": \"\",\n                            \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"WAITING_FOR_SELLER_APPROVAL\",\n                        \"status_updated_at\": null,\n                        \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                        \"approvedBy\": \"\",\n                        \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                        \"updated_at\": null\n                    },\n                    \"comments\": \"\"\n                }\n            ],\n            \"buyer_org_id\": \"5bfbf67bc55fd428df64381f\",\n            \"buyer_confirmed_contrcat\": {\n                \"file\": {\n                    \"name\": \"\",\n                    \"mime_type\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"size\": 0,\n                    \"checksum\": \"\"\n                },\n                \"status\": \"\",\n                \"status_updated_at\": null,\n                \"created_at\": null,\n                \"updated_at\": null\n            },\n            \"mainEscrow\": {\n                \"id\": \"\",\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"5bfd12afc55fd453cdbe3ad0\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"ACCEPTED\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"createdBy\": \"5bfbf5e4c55fd42472094536\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"seller\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cbo\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"assetPegTransactionId\": \"\",\n                    \"dollarPegTransactionId\": \"\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"proofOfFiatTx\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\"\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"assetPegTransactionId\": \"\",\n                    \"dollarPegTransactionId\": \"\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    }\n                }\n            },\n            \"buyerEscrow\": {\n                \"id\": \"\",\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cbo\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"obl_docs\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"updated_at\": null,\n                    \"updated_by\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                }\n            },\n            \"sellerEscrow\": {\n                \"id\": \"\",\n                \"seller\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"5bf41708c55fd43ab859cf42\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"RELEASED_ASSET_PEG\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"2018-11-20T19:45:36.898+05:30\",\n                    \"createdBy\": \"5ba39d1035151b50bc0ccb36\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"obl_docs\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"updated_at\": null,\n                    \"updated_by\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                }\n            },\n            \"comdexEscrow\": {\n                \"cso\": {\n                    \"createdBy\": \"\",\n                    \"ipAddress\": \"\",\n                    \"status\": \"\",\n                    \"transactionId\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"transactionReceipt\": {\n                        \"transactionId\": \"\",\n                        \"ipAddress\": \"\",\n                        \"file\": {\n                            \"name\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"mimetype\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"createdAt\": \"0001-01-01T00:00:00Z\"\n                    }\n                },\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\"\n                },\n                \"cbo\": {\n                    \"status\": \"\",\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"transactionReceipt\": {\n                        \"transactionId\": \"\",\n                        \"ipAddress\": \"\",\n                        \"file\": {\n                            \"name\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"mimetype\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"createdAt\": \"0001-01-01T00:00:00Z\"\n                    }\n                }\n            }\n       }\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order not found\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Order not found\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\t success:\"false\",\n\t message: \"Error while validating the input\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while validating inputs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/order_com.go",
    "groupTitle": "UnusedOrders"
  },
  {
    "type": "GET",
    "url": "/users/{userId}/orders/{orderId}",
    "title": "Get user order",
    "version": "0.1.0",
    "name": "GetUserOrder",
    "group": "UnusedOrders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "order_id",
            "description": "<p>OrderId</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "userId",
            "description": "<p>UserId</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \t\"success\": true,\n\t\t\"data\":{\n            \"id\": \"5bf416f6c55fd43ab859cf3c\",\n            \"name\": \"\",\n            \"seller_id\": \"5beda8b7c55fd46c66bbc24f\",\n            \"sellerName\": \"\",\n            \"sellerOrgName\": \"Singapore LP Org\",\n            \"sellerAddress\": \"Singapore,\\nPhase 2,\\nBlock A\",\n            \"zoneId\": \"5b9fcee7754df2cefbde73e5\",\n            \"csoOrgName\": \"Comdex Singapore\",\n            \"csoOrgAddress\": \"105 Sims Ave, Singapore 387429\",\n            \"organization_id\": \"5beda971c55fd46c66bbc250\",\n            \"contractId\": \"SSG111810\",\n            \"csoid\": \"5ba35d4f35151b44c1ad9144\",\n            \"buyer_id\": \"5bfbf5e4c55fd42472094536\",\n            \"buyer_zone_id\": \"5ba38d51754df2cefbe47eb1\",\n            \"buyerAddress\": \"vfr3e2wa\",\n            \"buyerName\": \"\",\n            \"buyerOrgName\": \"u8gdwhd\",\n            \"cboName\": \"Comdex Malaysia\",\n            \"cboOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n            \"cboid\": \"5ba39b5c35151b50bc0ccb33\",\n            \"commodity\": {\n                \"name\": \"bc3\",\n                \"assetTypeId\": \"5ba3565904809ddf6a340165\",\n                \"assetTypeName\": \"COAL\",\n                \"quality\": \"A+\",\n                \"delivery_term\": \"FOB\",\n                \"quantity\": 5,\n                \"units_of_measurement\": \"MT\",\n                \"amount\": 0,\n                \"port_of_loading\": {\n                    \"port\": \"port1\",\n                    \"country\": \"country1\"\n                },\n                \"date_of_shipment\": \"2018-11-20T19:44:00+05:30\",\n                \"port_of_discharge\": {\n                    \"port\": \"port2\",\n                    \"country\": \"country2\"\n                },\n                \"shipment_period\": \"2018-11-20T19:44:00+05:30\",\n                \"total_shipment_value\": 50\n            },\n            \"obl_details\": {\n                \"bill_number\": \"12345\",\n                \"shipper_name\": \"Prathyusha\",\n                \"shipper_address\": \"address\",\n                \"receiver_name\": \"notify\",\n                \"receiver_address\": \"notify party address\",\n                \"date_of_shipping\": \"2018-11-20T19:44:33+05:30\",\n                \"number_of_shipping_units\": 5,\n                \"freight_classification\": \"\",\n                \"exact_weight_of_consignment\": \"\",\n                \"declared_value_of_asset\": 50\n            },\n            \"listing_type\": \"PUBLIC\",\n            \"docs\": [\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3d\",\n                    \"file\": {\n                        \"name\": \"comDex.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/QEY0A1Avu48pxRYLcomDex.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"copyOfObl\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                },\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3e\",\n                    \"file\": {\n                        \"name\": \"comDex.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/Wl9tzQXCgoi5avWhcomDex.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"invoice\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                },\n                {\n                    \"_id\": \"5bf416f6c55fd43ab859cf3f\",\n                    \"file\": {\n                        \"name\": \"Dip-5.pdf\",\n                        \"mime_type\": \"application/pdf\",\n                        \"path\": \"\",\n                        \"url\": \"uploads/files/QF5esD7ubbVltMkvDip-5.pdf\",\n                        \"size\": 0,\n                        \"checksum\": \"\"\n                    },\n                    \"type\": \"packingList\",\n                    \"comments\": \"Document is valid\",\n                    \"approved_by\": null,\n                    \"approved_at\": null,\n                    \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"updated_at\": null\n                }\n            ],\n            \"couriers\": [],\n            \"numberOfAssetPeg\": 5,\n            \"numberOfFiatPeg\": 50,\n            \"escrows\": [],\n            \"status\": \"BUYER_ACCEPTED\",\n            \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n            \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n            \"updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n            \"feedback\": {\n                \"buyer\": {\n                    \"createdBy\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"rating\": 0,\n                    \"comments\": \"\"\n                },\n                \"seller\": {\n                    \"createdBy\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"rating\": 0,\n                    \"comments\": \"\"\n                }\n            },\n            \"buyerConfirmationTime\": null,\n            \"sellerConfirmationTime\": null,\n            \"statusActions\": [\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"CREATE_NEW_ORDER\",\n                    \"previousState\": \"INITIAL\",\n                    \"nextState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                    \"actionAt\": \"2018-11-20T19:45:18.85+05:30\",\n                    \"actionBy\": \"5beda8b7c55fd46c66bbc24f\"\n                },\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"ACCEPT\",\n                    \"previousState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                    \"nextState\": \"LISTED_FOR_TRADE\",\n                    \"actionAt\": \"2018-11-20T19:45:36.902+05:30\",\n                    \"actionBy\": \"5ba39d1035151b50bc0ccb36\"\n                },\n                {\n                    \"ipAddress\": \"\",\n                    \"action\": \"ACCEPT\",\n                    \"previousState\": \"LISTED_FOR_TRADE\",\n                    \"nextState\": \"IN_MAIN_ESCROW\",\n                    \"actionAt\": \"2018-11-27T15:17:27.952+05:30\",\n                    \"actionBy\": \"5bfbf5e4c55fd42472094536\"\n                }\n            ],\n            \"offers\": [\n                {\n                    \"id\": \"5bf416f6c55fd43ab859cf40\",\n                    \"totalPrice\": 50,\n                    \"from_id\": \"\",\n                    \"order_id\": \"\",\n                    \"buyer_id\": \"\",\n                    \"privateBuyerOrgId\": \"\",\n                    \"amount\": 10,\n                    \"currency\": \"USD\",\n                    \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                    \"created_by\": \"5beda8b7c55fd46c66bbc24f\",\n                    \"approved_at\": null,\n                    \"approved_by\": \"\",\n                    \"buy_requested_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"buy_requested_by\": \"\",\n                    \"buy_approved_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"buy_approved_by\": \"5bfbf5e4c55fd42472094536\",\n                    \"expires_at\": null,\n                    \"status\": \"BUYER_ACCEPTED\",\n                    \"status_updated_by\": \"\",\n                    \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"contract_doc\": {\n                        \"file\": {\n                            \"name\": \"comDex.pdf\",\n                            \"mime_type\": \"application/pdf\",\n                            \"path\": \"\",\n                            \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"APPROVED_BY_COMDEX\",\n                        \"status_updated_at\": null,\n                        \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                        \"approvedBy\": \"\",\n                        \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                        \"updated_at\": null\n                    },\n                    \"buyer_contract_doc\": {\n                        \"file\": {\n                            \"name\": \"comDex.pdf\",\n                            \"mime_type\": \"application/pdf\",\n                            \"path\": \"\",\n                            \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                            \"size\": 0,\n                            \"checksum\": \"\"\n                        },\n                        \"status\": \"WAITING_FOR_SELLER_APPROVAL\",\n                        \"status_updated_at\": null,\n                        \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                        \"approvedBy\": \"\",\n                        \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                        \"updated_at\": null\n                    },\n                    \"comments\": \"\"\n                }\n            ],\n            \"buyer_org_id\": \"5bfbf67bc55fd428df64381f\",\n            \"buyer_confirmed_contrcat\": {\n                \"file\": {\n                    \"name\": \"\",\n                    \"mime_type\": \"\",\n                    \"path\": \"\",\n                    \"url\": \"\",\n                    \"size\": 0,\n                    \"checksum\": \"\"\n                },\n                \"status\": \"\",\n                \"status_updated_at\": null,\n                \"created_at\": null,\n                \"updated_at\": null\n            },\n            \"mainEscrow\": {\n                \"id\": \"\",\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"5bfd12afc55fd453cdbe3ad0\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"ACCEPTED\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"2018-11-27T15:17:27.937+05:30\",\n                    \"createdBy\": \"5bfbf5e4c55fd42472094536\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"seller\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cbo\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"assetPegTransactionId\": \"\",\n                    \"dollarPegTransactionId\": \"\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"proofOfFiatTx\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\"\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"assetPegTransactionId\": \"\",\n                    \"dollarPegTransactionId\": \"\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    }\n                }\n            },\n            \"buyerEscrow\": {\n                \"id\": \"\",\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cbo\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"obl_docs\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"updated_at\": null,\n                    \"updated_by\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                }\n            },\n            \"sellerEscrow\": {\n                \"id\": \"\",\n                \"seller\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"cso\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"5bf41708c55fd43ab859cf42\",\n                    \"confirmed_tx_id\": \"\",\n                    \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                    \"awb_number\": \"\",\n                    \"status\": \"RELEASED_ASSET_PEG\",\n                    \"docStatus\": \"\",\n                    \"createdAt\": \"2018-11-20T19:45:36.898+05:30\",\n                    \"createdBy\": \"5ba39d1035151b50bc0ccb36\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                },\n                \"obl_docs\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"updated_at\": null,\n                    \"updated_by\": \"\",\n                    \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                    \"receivedBy\": \"\",\n                    \"serviceName\": \"\",\n                    \"link\": \"\",\n                    \"trackingNumber\": \"\",\n                    \"file\": {\n                        \"name\": \"\",\n                        \"path\": \"\",\n                        \"url\": \"\",\n                        \"mimetype\": \"\"\n                    },\n                    \"scannedFiles\": []\n                }\n            },\n            \"comdexEscrow\": {\n                \"cso\": {\n                    \"createdBy\": \"\",\n                    \"ipAddress\": \"\",\n                    \"status\": \"\",\n                    \"transactionId\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"transactionReceipt\": {\n                        \"transactionId\": \"\",\n                        \"ipAddress\": \"\",\n                        \"file\": {\n                            \"name\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"mimetype\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"createdAt\": \"0001-01-01T00:00:00Z\"\n                    }\n                },\n                \"buyer\": {\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"status\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\"\n                },\n                \"cbo\": {\n                    \"status\": \"\",\n                    \"ipAddress\": \"\",\n                    \"transactionId\": \"\",\n                    \"createdAt\": \"0001-01-01T00:00:00Z\",\n                    \"createdBy\": \"\",\n                    \"transactionReceipt\": {\n                        \"transactionId\": \"\",\n                        \"ipAddress\": \"\",\n                        \"file\": {\n                            \"name\": \"\",\n                            \"path\": \"\",\n                            \"url\": \"\",\n                            \"mimetype\": \"\"\n                        },\n                        \"status\": \"\",\n                        \"createdAt\": \"0001-01-01T00:00:00Z\"\n                    }\n                }\n            }\n       }\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order not found\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Order not found\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\t success:\"false\",\n\t message: \"Error while validating the input\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while validating inputs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/order_com.go",
    "groupTitle": "UnusedOrders"
  },
  {
    "type": "GET",
    "url": "/users/{userId}/orders",
    "title": "Get user orders",
    "version": "0.1.0",
    "name": "GetUserOrders",
    "group": "UnusedOrders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "user-id",
            "description": "<p>UserId</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \t\"success\": true,\n\t\t\"data\":[{\n         \"id\": \"5bf416f6c55fd43ab859cf3c\",\n         \"name\": \"\",\n         \"seller_id\": \"5beda8b7c55fd46c66bbc24f\",\n         \"sellerName\": \"\",\n         \"sellerOrgName\": \"Singapore LP Org\",\n         \"sellerAddress\": \"Singapore,\\nPhase 2,\\nBlock A\",\n         \"zoneId\": \"5b9fcee7754df2cefbde73e5\",\n         \"csoOrgName\": \"Comdex Singapore\",\n         \"csoOrgAddress\": \"105 Sims Ave, Singapore 387429\",\n         \"organization_id\": \"5beda971c55fd46c66bbc250\",\n         \"contractId\": \"SSG111810\",\n         \"csoid\": \"5ba35d4f35151b44c1ad9144\",\n         \"buyer_id\": \"5bfbf5e4c55fd42472094536\",\n         \"buyer_zone_id\": \"5ba38d51754df2cefbe47eb1\",\n         \"buyerAddress\": \"vfr3e2wa\",\n         \"buyerName\": \"\",\n         \"buyerOrgName\": \"u8gdwhd\",\n         \"cboName\": \"Comdex Malaysia\",\n         \"cboOrgAddress\": \"2, Persiaran Raja Chulan, Bukit Bintang, 50200 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia\",\n         \"cboid\": \"5ba39b5c35151b50bc0ccb33\",\n         \"commodity\": {\n             \"name\": \"bc3\",\n             \"assetTypeId\": \"5ba3565904809ddf6a340165\",\n             \"assetTypeName\": \"COAL\",\n             \"quality\": \"A+\",\n             \"delivery_term\": \"FOB\",\n             \"quantity\": 5,\n             \"units_of_measurement\": \"MT\",\n             \"amount\": 0,\n             \"port_of_loading\": {\n                 \"port\": \"port1\",\n                 \"country\": \"country1\"\n             },\n             \"date_of_shipment\": \"2018-11-20T19:44:00+05:30\",\n             \"port_of_discharge\": {\n                 \"port\": \"port2\",\n                 \"country\": \"country2\"\n             },\n             \"shipment_period\": \"2018-11-20T19:44:00+05:30\",\n             \"total_shipment_value\": 50\n         },\n         \"obl_details\": {\n             \"bill_number\": \"12345\",\n             \"shipper_name\": \"Prathyusha\",\n             \"shipper_address\": \"address\",\n             \"receiver_name\": \"notify\",\n             \"receiver_address\": \"notify party address\",\n             \"date_of_shipping\": \"2018-11-20T19:44:33+05:30\",\n             \"number_of_shipping_units\": 5,\n             \"freight_classification\": \"\",\n             \"exact_weight_of_consignment\": \"\",\n             \"declared_value_of_asset\": 50\n         },\n         \"listing_type\": \"PUBLIC\",\n         \"docs\": [\n             {\n                 \"_id\": \"5bf416f6c55fd43ab859cf3d\",\n                 \"file\": {\n                     \"name\": \"comDex.pdf\",\n                     \"mime_type\": \"application/pdf\",\n                     \"path\": \"\",\n                     \"url\": \"uploads/files/QEY0A1Avu48pxRYLcomDex.pdf\",\n                     \"size\": 0,\n                     \"checksum\": \"\"\n                 },\n                 \"type\": \"copyOfObl\",\n                 \"comments\": \"Document is valid\",\n                 \"approved_by\": null,\n                 \"approved_at\": null,\n                 \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                 \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                 \"updated_at\": null\n             },\n             {\n                 \"_id\": \"5bf416f6c55fd43ab859cf3e\",\n                 \"file\": {\n                     \"name\": \"comDex.pdf\",\n                     \"mime_type\": \"application/pdf\",\n                     \"path\": \"\",\n                     \"url\": \"uploads/files/Wl9tzQXCgoi5avWhcomDex.pdf\",\n                     \"size\": 0,\n                     \"checksum\": \"\"\n                 },\n                 \"type\": \"invoice\",\n                 \"comments\": \"Document is valid\",\n                 \"approved_by\": null,\n                 \"approved_at\": null,\n                 \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                 \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                 \"updated_at\": null\n             },\n             {\n                 \"_id\": \"5bf416f6c55fd43ab859cf3f\",\n                 \"file\": {\n                     \"name\": \"Dip-5.pdf\",\n                     \"mime_type\": \"application/pdf\",\n                     \"path\": \"\",\n                     \"url\": \"uploads/files/QF5esD7ubbVltMkvDip-5.pdf\",\n                     \"size\": 0,\n                     \"checksum\": \"\"\n                 },\n                 \"type\": \"packingList\",\n                 \"comments\": \"Document is valid\",\n                 \"approved_by\": null,\n                 \"approved_at\": null,\n                 \"status\": \"OBL_APPROVED_BY_COMDEX\",\n                 \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                 \"updated_at\": null\n             }\n         ],\n         \"couriers\": [],\n         \"numberOfAssetPeg\": 5,\n         \"numberOfFiatPeg\": 50,\n         \"escrows\": [],\n         \"status\": \"BUYER_ACCEPTED\",\n         \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n         \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n         \"updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n         \"feedback\": {\n             \"buyer\": {\n                 \"createdBy\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"rating\": 0,\n                 \"comments\": \"\"\n             },\n             \"seller\": {\n                 \"createdBy\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"rating\": 0,\n                 \"comments\": \"\"\n             }\n         },\n         \"buyerConfirmationTime\": null,\n         \"sellerConfirmationTime\": null,\n         \"statusActions\": [\n             {\n                 \"ipAddress\": \"\",\n                 \"action\": \"CREATE_NEW_ORDER\",\n                 \"previousState\": \"INITIAL\",\n                 \"nextState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                 \"actionAt\": \"2018-11-20T19:45:18.85+05:30\",\n                 \"actionBy\": \"5beda8b7c55fd46c66bbc24f\"\n             },\n             {\n                 \"ipAddress\": \"\",\n                 \"action\": \"ACCEPT\",\n                 \"previousState\": \"WAITING_FOR_COMDEX_APPROVAL\",\n                 \"nextState\": \"LISTED_FOR_TRADE\",\n                 \"actionAt\": \"2018-11-20T19:45:36.902+05:30\",\n                 \"actionBy\": \"5ba39d1035151b50bc0ccb36\"\n             },\n             {\n                 \"ipAddress\": \"\",\n                 \"action\": \"ACCEPT\",\n                 \"previousState\": \"LISTED_FOR_TRADE\",\n                 \"nextState\": \"IN_MAIN_ESCROW\",\n                 \"actionAt\": \"2018-11-27T15:17:27.952+05:30\",\n                 \"actionBy\": \"5bfbf5e4c55fd42472094536\"\n             }\n         ],\n         \"offers\": [\n             {\n                 \"id\": \"5bf416f6c55fd43ab859cf40\",\n                 \"totalPrice\": 50,\n                 \"from_id\": \"\",\n                 \"order_id\": \"\",\n                 \"buyer_id\": \"\",\n                 \"privateBuyerOrgId\": \"\",\n                 \"amount\": 10,\n                 \"currency\": \"USD\",\n                 \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                 \"created_by\": \"5beda8b7c55fd46c66bbc24f\",\n                 \"approved_at\": null,\n                 \"approved_by\": \"\",\n                 \"buy_requested_at\": \"2018-11-27T15:17:27.937+05:30\",\n                 \"buy_requested_by\": \"\",\n                 \"buy_approved_at\": \"2018-11-27T15:17:27.937+05:30\",\n                 \"buy_approved_by\": \"5bfbf5e4c55fd42472094536\",\n                 \"expires_at\": null,\n                 \"status\": \"BUYER_ACCEPTED\",\n                 \"status_updated_by\": \"\",\n                 \"status_updated_at\": \"2018-11-27T15:17:27.937+05:30\",\n                 \"contract_doc\": {\n                     \"file\": {\n                         \"name\": \"comDex.pdf\",\n                         \"mime_type\": \"application/pdf\",\n                         \"path\": \"\",\n                         \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                         \"size\": 0,\n                         \"checksum\": \"\"\n                     },\n                     \"status\": \"APPROVED_BY_COMDEX\",\n                     \"status_updated_at\": null,\n                     \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                     \"approvedBy\": \"\",\n                     \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                     \"updated_at\": null\n                 },\n                 \"buyer_contract_doc\": {\n                     \"file\": {\n                         \"name\": \"comDex.pdf\",\n                         \"mime_type\": \"application/pdf\",\n                         \"path\": \"\",\n                         \"url\": \"uploads/files/LVZhCbVuLhXS3T68comDex.pdf\",\n                         \"size\": 0,\n                         \"checksum\": \"\"\n                     },\n                     \"status\": \"WAITING_FOR_SELLER_APPROVAL\",\n                     \"status_updated_at\": null,\n                     \"created_at\": \"2018-11-20T19:45:18.843+05:30\",\n                     \"approvedBy\": \"\",\n                     \"approvedAt\": \"0001-01-01T00:00:00Z\",\n                     \"updated_at\": null\n                 },\n                 \"comments\": \"\"\n             }\n         ],\n         \"buyer_org_id\": \"5bfbf67bc55fd428df64381f\",\n         \"buyer_confirmed_contrcat\": {\n             \"file\": {\n                 \"name\": \"\",\n                 \"mime_type\": \"\",\n                 \"path\": \"\",\n                 \"url\": \"\",\n                 \"size\": 0,\n                 \"checksum\": \"\"\n             },\n             \"status\": \"\",\n             \"status_updated_at\": null,\n             \"created_at\": null,\n             \"updated_at\": null\n         },\n         \"mainEscrow\": {\n             \"id\": \"\",\n             \"buyer\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"5bfd12afc55fd453cdbe3ad0\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"ACCEPTED\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"2018-11-27T15:17:27.937+05:30\",\n                 \"createdBy\": \"5bfbf5e4c55fd42472094536\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"seller\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"cbo\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"assetPegTransactionId\": \"\",\n                 \"dollarPegTransactionId\": \"\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"proofOfFiatTx\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\"\n             },\n             \"cso\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"assetPegTransactionId\": \"\",\n                 \"dollarPegTransactionId\": \"\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 }\n             }\n         },\n         \"buyerEscrow\": {\n             \"id\": \"\",\n             \"buyer\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"cbo\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"obl_docs\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"status\": \"\",\n                 \"updated_at\": null,\n                 \"updated_by\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"cso\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             }\n         },\n         \"sellerEscrow\": {\n             \"id\": \"\",\n             \"seller\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"cso\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"5bf41708c55fd43ab859cf42\",\n                 \"confirmed_tx_id\": \"\",\n                 \"confirmed_date\": \"0001-01-01T00:00:00Z\",\n                 \"awb_number\": \"\",\n                 \"status\": \"RELEASED_ASSET_PEG\",\n                 \"docStatus\": \"\",\n                 \"createdAt\": \"2018-11-20T19:45:36.898+05:30\",\n                 \"createdBy\": \"5ba39d1035151b50bc0ccb36\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             },\n             \"obl_docs\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"status\": \"\",\n                 \"updated_at\": null,\n                 \"updated_by\": \"\",\n                 \"receivedAt\": \"0001-01-01T00:00:00Z\",\n                 \"receivedBy\": \"\",\n                 \"serviceName\": \"\",\n                 \"link\": \"\",\n                 \"trackingNumber\": \"\",\n                 \"file\": {\n                     \"name\": \"\",\n                     \"path\": \"\",\n                     \"url\": \"\",\n                     \"mimetype\": \"\"\n                 },\n                 \"scannedFiles\": []\n             }\n         },\n         \"comdexEscrow\": {\n             \"cso\": {\n                 \"createdBy\": \"\",\n                 \"ipAddress\": \"\",\n                 \"status\": \"\",\n                 \"transactionId\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"transactionReceipt\": {\n                     \"transactionId\": \"\",\n                     \"ipAddress\": \"\",\n                     \"file\": {\n                         \"name\": \"\",\n                         \"path\": \"\",\n                         \"url\": \"\",\n                         \"mimetype\": \"\"\n                     },\n                     \"status\": \"\",\n                     \"createdAt\": \"0001-01-01T00:00:00Z\"\n                 }\n             },\n             \"buyer\": {\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"status\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\"\n             },\n             \"cbo\": {\n                 \"status\": \"\",\n                 \"ipAddress\": \"\",\n                 \"transactionId\": \"\",\n                 \"createdAt\": \"0001-01-01T00:00:00Z\",\n                 \"createdBy\": \"\",\n                 \"transactionReceipt\": {\n                     \"transactionId\": \"\",\n                     \"ipAddress\": \"\",\n                     \"file\": {\n                         \"name\": \"\",\n                         \"path\": \"\",\n                         \"url\": \"\",\n                         \"mimetype\": \"\"\n                     },\n                     \"status\": \"\",\n                     \"createdAt\": \"0001-01-01T00:00:00Z\"\n                 }\n             }\n         }\n       }]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\",\n  errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while getting order details\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/order_com.go",
    "groupTitle": "UnusedOrders"
  },
  {
    "type": "POST",
    "url": "/orders/{orderId}/buyer/cbo/escrow/status",
    "title": "update cbo escrow status",
    "version": "0.1.0",
    "name": "UpdateBuyerCboEscrowStatus",
    "group": "UnusedOrders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \tsuccess: true,\n\t\tmessage: \"Updated Successfully\",\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while updating cbo escrow status</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while rejecting updating cbo escrow status\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while updating cbo escrow status\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/order_com.go",
    "groupTitle": "UnusedOrders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/buyer/escrow/status",
    "title": "Update buyer escrow status",
    "version": "0.1.0",
    "name": "UpdateBuyerEscrowStatus",
    "group": "UnusedOrders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  \tsuccess: true,\n\t\tmessage: \"Updated successfully\",\n\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while updating buyer escrow status</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while rejecting updating buyer escrow status\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while updating buyer escrow status\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/order_com.go",
    "groupTitle": "UnusedOrders"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/docs",
    "title": "Update document of an order",
    "version": "0.1.0",
    "name": "UpdateOrderDoc",
    "group": "UnusedOrders",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "order_id",
            "description": "<p>OrderId</p>"
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "doc_details",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "doc_details.type",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Updated successully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while fetching order details\"\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error occured while fetching order details\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\t success:\"false\",\n\t message: \"Error while validating the input\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while validating inputs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "UnusedOrders"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/orders/{orderId}/approve",
    "title": "Approve org order",
    "version": "0.1.0",
    "name": "ApproveOrderStatus",
    "group": "UnusedOrganization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t  status:true,\n    message:\"Successfully updated\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while approving the organization order.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Organization not found\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Organization not found\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization_com.go",
    "groupTitle": "UnusedOrganization"
  },
  {
    "type": "POST",
    "url": "/zones/{zoneId}/organizations/{organizationId}kyc",
    "title": "Upload comdex admin kyc",
    "version": "0.1.0",
    "name": "ComdexAdminKYC",
    "group": "UnusedOrganization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "file",
            "optional": false,
            "field": "kycDocName",
            "description": "<p>Kyc documentation name(key : ACRA)</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Updated successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while uploading kyc docs.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while uploading kyc docs\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while uploading kyc docs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while decoding docs\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while decoding docs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization_com.go",
    "groupTitle": "UnusedOrganization"
  },
  {
    "type": "DELETE",
    "url": "/organizations/{organizationId}/kyc/docs/{docId}",
    "title": "delete kycdoc",
    "version": "0.1.0",
    "name": "DeleteKycDoc",
    "group": "UnusedOrganization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "file",
            "optional": false,
            "field": "file",
            "description": "<p>kyc doc</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Deleted successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while deleting doc</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while deleting doc\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while deleting doc\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization_com.go",
    "groupTitle": "UnusedOrganization"
  },
  {
    "type": "GET",
    "url": "/organizations/{organizationId}/kyc",
    "title": "Get kycdocs",
    "version": "0.1.0",
    "name": "GetKycDocs",
    "group": "UnusedOrganization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\t  \"approved_by\": \"\",\n      \"approvedAt\": \"\",\n      \"kyc_status\": \"\",\n      \"docs\": [\n        {\n            \"id\": \"\",\n            \"path\": \"\",\n            \"url\": \"\",\n            \"doc_status\": \"\",\n            \"comments\": \"\",\n            \"doc_type\": \"\",\n            \"approved_by\": \"\",\n            \"approved_at\": \"\",\n            \"file_type\": \"\",\n            \"file_name\": \"\",\n            \"created_at\": \"\",\n            \"updated_at\": \"0001-01-01T00:00:00Z\",\n            \"deleted_at\": \"0001-01-01T00:00:00Z\",\n            \"month\": \"\",\n            \"year\": \"\"\n        },\n\t]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting kyc docs.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Organization not found\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Organization not found\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "UnusedOrganization"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/kyc",
    "title": "update kycdocs",
    "version": "0.1.0",
    "name": "UpdateKycDocs",
    "group": "UnusedOrganization",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "file",
            "optional": false,
            "field": "file",
            "description": "<p>kyc docs(ex.,FINANCE_AUDITS, ACRA...)</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Updated successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while updating kyc docs.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Kyc already verified, u can't update the docs now\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Kyc already verified, u can't update the docs now\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while decoding docs\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while decoding docs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/organization/controllers/organization.go",
    "groupTitle": "UnusedOrganization"
  },
  {
    "type": "PUT",
    "url": "/users/{userId}/auth/password/",
    "title": "Change password",
    "version": "0.1.0",
    "name": "ChangePassword",
    "group": "UnusedUser",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>Password</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "old_password",
            "description": "<p>Old Password</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess:\"true\",\n\tmessage:'Password changed successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while changing the password.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while validating the inputs\",\n\terrors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while validating inputs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Incorrect old password\",\n\terrors: [\n\t\t\t{\n\t\t\t\tmessage: \"Incorrect old password\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "UnusedUser"
  },
  {
    "type": "DELETE",
    "url": "/users",
    "title": "Delete User",
    "name": "DeleteUser",
    "group": "UnusedUser",
    "version": "0.1.0",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Deleted successully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while deleting user</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while deleting user\",\n    errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while deleting user\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/invitation.go",
    "groupTitle": "UnusedUser"
  },
  {
    "type": "GET",
    "url": "/users/{userId}/kyc/docs",
    "title": "Get kycdocs",
    "version": "0.1.0",
    "name": "GetKycDocs",
    "group": "UnusedUser",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": "<p>Unique user id.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"approved_by\": \"\",\n    \"approvedAt\": \"0001-01-01T00:00:00Z\",\n    \"kyc_status\": \"\",\n    \"docs\": [\n        {\n            \"id\": \"\",\n            \"path\": \"\",\n            \"url\": \"\",\n            \"doc_status\": \"\",\n            \"file_type\": \"\",\n            \"file_name\": \"\",\n            \"created_at\": \"\",\n            \"updated_at\": \"0001-01-01T00:00:00Z\",\n            \"deleted_at\": \"0001-01-01T00:00:00Z\",\n            \"doc_type\": \"\"\n        },\n        {\n            \"id\": \"\",\n            \"path\": \"\",\n            \"url\": \"\",\n            \"doc_status\": \"\",\n            \"file_type\": \"\",\n            \"file_name\": \"\",\n            \"created_at\": \"\",\n            \"updated_at\": \"0001-01-01T00:00:00Z\",\n            \"deleted_at\": \"0001-01-01T00:00:00Z\",\n            \"doc_type\": \"\"\n        }\n    ]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting details.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while sending request\",\n\terrors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while sending request\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "UnusedUser"
  },
  {
    "type": "GET",
    "url": "/users/{userId}/profile",
    "title": "Get user details",
    "version": "0.1.0",
    "name": "GetProfile",
    "group": "UnusedUser",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": "<p>Unique user id.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true,\n    \"data\": {\n        \"_id\": \"\",\n        \"firstName\": \"\",\n        \"lastName\": \"\",\n        \"name\": \"\",\n        \"password\": \"\",\n        \"dob\": \"\",\n        \"email\": \"\",\n        \"mobile\": \"\",\n        \"mobile_code\": \"\",\n        \"email_code\": \"\",\n        \"is_mobile_verified\": ,\n        \"is_email_verified\": ,\n        \"mobile_otp\": \"\",\n        \"email_otp\": \"\",\n        \"organization\": {\n            \"org_id\": \"\",\n            \"role_id\": \"\",\n            \"zoneId\": \"\"\n        },\n        \"status\": \"\",\n        \"kyc\": {\n            \"approved_by\": \"\",\n            \"approvedAt\": \"0001-01-01T00:00:00Z\",\n            \"kyc_status\": \"\",\n            \"docs\": []\n        },\n        \"updated_at\": \"0001-01-01T00:00:00Z\",\n        \"address\": \"\",\n        \"role\": {\n            \"_id\": \"\",\n            \"name\": \"\",\n            \"code\": \"\",\n            \"created_at\": \"0001-01-01T00:00:00Z\"\n        },\n        \"doe\": \"\",\n        \"pincode\": \"\"\n    }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting details.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"User not found\",\n\terrors: [\n\t\t\t{\n\t\t\t\tmessage: \"User not found\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "UnusedUser"
  },
  {
    "type": "PUT",
    "url": "/users/profile",
    "title": "Update Profile",
    "name": "UpdateProfile",
    "version": "0.1.0",
    "group": "UnusedUser",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": "<p>Unique id of an user.</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "name",
            "description": "<p>Name of user.</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "address",
            "description": "<p>Address.</p>"
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "line1",
            "description": "<p>Line1.</p>"
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "line2",
            "description": "<p>Line2.</p>"
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "line3",
            "description": "<p>Line3.</p>"
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "city",
            "description": "<p>City.</p>"
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "state",
            "description": "<p>State.</p>"
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "country",
            "description": "<p>Country.</p>"
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "zone",
            "description": "<p>Zone.</p>"
          },
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "zip_code",
            "description": "<p>Zipcode.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess:\"true\",\n\t\"data\": {\n        \"_id\": \"\",\n        \"firstName\": \"\",\n        \"lastName\": \"\",\n        \"name\": \"\",\n        \"password\": \"\",\n        \"dob\": \"\",\n        \"email\": \"\",\n        \"mobile\": \"\",\n        \"mobile_code\": \"\",\n        \"email_code\": \"\",\n        \"is_mobile_verified\": ,\n        \"is_email_verified\": ,\n        \"mobile_otp\": \"\",\n        \"email_otp\": \"\",\n        \"organization\": {\n            \"org_id\": \"\",\n            \"role_id\": \"\",\n            \"zoneId\": \"\"\n        },\n        \"status\": \"\",\n        \"kyc\": {\n            \"approved_by\": \"\",\n            \"approvedAt\": \"0001-01-01T00:00:00Z\",\n            \"kyc_status\": \"\",\n            \"docs\": []\n        },\n        \"updated_at\": \"0001-01-01T00:00:00Z\",\n        \"address\": \"\",\n        \"role\": {\n            \"_id\": \"\",\n            \"name\": \"\",\n            \"code\": \"\",\n            \"created_at\": \"0001-01-01T00:00:00Z\"\n        },\n        \"doe\": \"\",\n        \"pincode\": \"\"\n    }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "InvalidUser",
            "description": "<p>The userId not found.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 404 NotFound.\n{\n\tsuccess: \"false\",\n\terrors: [\n\t\t\t{\n\t\t\t\tmessage: \"UserId not found.\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while validating inputs\",\n\terrors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while validating inputs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "UnusedUser"
  },
  {
    "type": "POST",
    "url": "/users/{userId}/kyc",
    "title": "Upload kycdocs",
    "version": "0.1.0",
    "name": "UploadKycDocs",
    "group": "UnusedUser",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": "<p>Unique user id.</p>"
          }
        ],
        "formValue": [
          {
            "group": "formValue",
            "type": "file",
            "optional": false,
            "field": "file",
            "description": "<p>Kyc doc(i,e proof_of_addres,proof_of_id)</p>"
          },
          {
            "group": "formValue",
            "type": "string",
            "optional": false,
            "field": "firstname",
            "description": "<p>FirstName</p>"
          },
          {
            "group": "formValue",
            "type": "string",
            "optional": false,
            "field": "lastname",
            "description": "<p>LastName</p>"
          },
          {
            "group": "formValue",
            "type": "string",
            "optional": false,
            "field": "dob",
            "description": "<p>DOB</p>"
          },
          {
            "group": "formValue",
            "type": "string",
            "optional": false,
            "field": "orgId",
            "description": "<p>OrgId</p>"
          },
          {
            "group": "formValue",
            "type": "string",
            "optional": false,
            "field": "address",
            "description": "<p>Address</p>"
          },
          {
            "group": "formValue",
            "type": "string",
            "optional": false,
            "field": "pinCode",
            "description": "<p>PinCode</p>"
          },
          {
            "group": "formValue",
            "type": "string",
            "optional": false,
            "field": "zoneId",
            "description": "<p>ZoneId</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Updated successully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while uploading kyc docs.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while uploading kyc docs\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while uploading kyc docs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\t success:\"false\",\n\t message: \"Error while validating the input\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while validating inputs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "UnusedUser"
  },
  {
    "type": "POST",
    "url": "/users/{userId}/password/create",
    "title": "Create password",
    "version": "0.2.0",
    "name": "CreatePassword",
    "group": "User",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": "<p>Unique userId.</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>Password</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess:\"true\",\n\tmessage:\"Password created successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating password</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while creating password</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Error occured while getting user details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Password validation error\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Password-Hash-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while hashing the password\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Not-Found-Response:",
          "content": "HTTP/1.1 404 NotFound.\n{\n\tsuccess: false,\n  message: \"User not found\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: false,\n  message: \"User mobileNo and email should be verified first\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "User-Exists-Error:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: false,\n  message: \"User already created the password\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Password-Creation-Error:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: false,\n  message: \"Error occured while creating password\"\n\terror:{}\n\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "User"
  },
  {
    "type": "DELETE",
    "url": "/users/{userId}/kyc/docs/{docId}",
    "title": "Delete kycdoc",
    "version": "0.2.0",
    "name": "DeleteKycDoc",
    "group": "User",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": "<p>Unique userId.</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "docId",
            "description": "<p>Unique docId</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Deleted successuflly'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while deleting kyc docs.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "User-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"UserId is required\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Doc-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Doc id is required\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while deleting the doc\",\n     errors: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "User"
  },
  {
    "type": "POST",
    "url": "/users/auth/password/forgot",
    "title": "Forgot password",
    "version": "0.2.0",
    "name": "ForgotPassword",
    "group": "User",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "email",
            "description": "<p>Registered email of an user</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: \"true\",\n\tmessage: \"Link sent to your email\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>NotFound.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>User not verified.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while validating the inputs\",\n\terrors: {}\n\n}",
          "type": "json"
        },
        {
          "title": "Email-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound.\n{\n\tsuccess: \"false\",\n\tmessage: \"Email not found\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Error:",
          "content": "HTTP/1.1 404 BadRequest.\n{\n\tsuccess: \"false\",\n\tmessage: \"User not verified\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 404 BadRequest.\n{\n\tsuccess: \"false\",\n\tmessage: \"Error while storing the verification details\",\n\terrors: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "User"
  },
  {
    "type": "GET",
    "url": "/users/auth/password/forgot/verify?email=\"\"&code=\"\"",
    "title": "Verify forgot password link",
    "version": "0.2.0",
    "name": "ForgotPasswordVerify",
    "group": "User",
    "parameter": {
      "fields": {
        "query string": [
          {
            "group": "query string",
            "type": "string",
            "optional": false,
            "field": "email",
            "description": "<p>In query params pass email</p>"
          },
          {
            "group": "query string",
            "type": "string",
            "optional": false,
            "field": "code",
            "description": "<p>In query params pass code which sent to mail</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: \"true\",\n\tmessage: \"Active\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>NotFound.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Link already verified.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Not-Found-Response:",
          "content": "HTTP/1.1 404 NotFound.\n{\n\tsuccess: \"false\",\n\tmessage:\"Email not found\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Link-Verified-Error:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: \"false\",\n\tmessage: \"Link already verified\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Link-Expired-Error:",
          "content": "HTTP/1.1 400 Link was expired.\n{\n\tsuccess: \"false\",\n\tmessage: \"Link has expired\",\n\terrors: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "User"
  },
  {
    "type": "GET",
    "url": "/me",
    "title": "Get My Profile",
    "version": "0.2.0",
    "name": "GetMyProfile",
    "group": "User",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true,\n    \"data\": {\n        \"_id\": \"\",\n        \"firstName\": \"\",\n        \"lastName\": \"\",\n        \"name\": \"\",\n        \"password\": \"\",\n        \"dob\": \"\",\n        \"email\": \"\",\n        \"mobile\": \"\",\n        \"mobile_code\": \"\",\n        \"email_code\": \"\",\n        \"is_mobile_verified\": ,\n        \"is_email_verified\": ,\n        \"mobile_otp\": \"\",\n        \"email_otp\": \"\",\n        \"organization\": {\n            \"org_id\": \"\",\n            \"role_id\": \"\",\n            \"zoneId\": \"\"\n        },\n        \"status\": \"\",\n        \"kyc\": {\n            \"approved_by\": \"\",\n            \"approvedAt\": \"0001-01-01T00:00:00Z\",\n            \"kyc_status\": \"\",\n            \"docs\": []\n        },\n        \"updated_at\": \"0001-01-01T00:00:00Z\",\n        \"address\": \"\",\n        \"role\": {\n            \"_id\": \"\",\n            \"name\": \"\",\n            \"code\": \"\",\n            \"created_at\": \"0001-01-01T00:00:00Z\"\n        },\n        \"doe\": \"\",\n        \"pincode\": \"\"\n    }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Unauthorized token.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Error while getting user details.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting role.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Unauthorized-Response:",
          "content": "HTTP/1.1 401 StatusUnauthorized\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Response:",
          "content": "HTTP/1.1 401 NotFound\n{\n\tsuccess:\"false\",\n\tmessage: \"User not found\",\n\terror:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 401 NotFound\n{\n\tsuccess:\"false\",\n\tmessage: \"User's organization not found\",\n\terror:{}\n}",
          "type": "json"
        },
        {
          "title": "Role-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while getting role\",\n\terror: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "User"
  },
  {
    "type": "POST",
    "url": "/users/auth/otp/resend",
    "title": "Resend mobile otp",
    "version": "0.2.0",
    "name": "ReSendOTP",
    "group": "User",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "mobile",
            "description": "<p>Mobile number</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>Email</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess:\"true\",\n\tmessage:'otp sent successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while sending otp.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while validating inputs\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Account-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Already have an account\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Existed-Mobile-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while updating email with existed mobile\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Existed-Email-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while updating mobile with existed email\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Verification-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while saving verification details\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while adding user details\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Email-OTP-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while sending email otp\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Mobile-OTP-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while sending mobile otp\",\n\terrors: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/auth.go",
    "groupTitle": "User"
  },
  {
    "type": "PUT",
    "url": "/users/auth/password/reset",
    "title": "Reset forgot password",
    "version": "0.2.0",
    "name": "ResetForgotPassword",
    "group": "User",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "code",
            "description": "<p>Verification code.</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "email",
            "description": "<p>User Email.</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>User password.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: \"true\",\n\tmessage: \"Password updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>ValidationError.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>NotFound.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting detials.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError.\n{\n\tsuccess: \"false\",\n\tmessage:\"Validation failed\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Email-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound.\n{\n\tsuccess: \"false\",\n\tmessage:\"Email not found\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Code-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound.\n{\n\tsuccess: \"false\",\n\tmessage:\"Invalid code\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: \"false\",\n\tmessage: \"Error while getting verification details\"\n\terrors:{}\n}",
          "type": "json"
        },
        {
          "title": "Link-Verified-Error:",
          "content": "HTTP/1.1 400 Link already expired.\n{\n\tsuccess: \"false\",\n\tmessage: \"Link already expired\"\n\terrors:{}\n}",
          "type": "json"
        },
        {
          "title": "Link-Expired-Error:",
          "content": "HTTP/1.1 400 Link has expired.\n{\n\tsuccess: \"false\",\n\tmessage: \"Link has expired\"\n\terrors:{}\n}",
          "type": "json"
        },
        {
          "title": "Password-Hash-Error:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: \"false\",\n\tmessage: \"\"Error while generating password hash\"\n\terrors:{}\n}",
          "type": "json"
        },
        {
          "title": "Password-Creation-Error:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: \"false\",\n\tmessage: \"Error while creating the password\"\n\terrors:{}\n}",
          "type": "json"
        },
        {
          "title": "Password-Reset-Error:",
          "content": "HTTP/1.1 400 BadRequest.\n{\n\tsuccess: \"false\",\n\tmessage: \"Error while updating the verification\"\n\terrors:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "User"
  },
  {
    "type": "POST",
    "url": "/users/auth/otp/send",
    "title": "Send Otp",
    "version": "0.2.0",
    "name": "SendOTP",
    "group": "User",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "mobile",
            "description": "<p>Mobile number</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>Email</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess:\"true\",\n\tmessage:'OTP sent successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while sending otp.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while validating inputs\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Already have an account\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Existed-Mobile-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while updating email with existed mobile\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Existed-Email-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while updating mobile with existed email\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while saving verification details\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "User-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while adding user details\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Email-OTP-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while sending email otp\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Mobile-OTP-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while sending mobile otp\",\n\terror: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/auth.go",
    "groupTitle": "User"
  },
  {
    "type": "POST",
    "url": "/user/auth/signin",
    "title": "User signin",
    "version": "0.2.0",
    "name": "Signin",
    "group": "User",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>Email</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>Password</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n  success: true,\n  access_token: \"\"\n\trefresh_token: \"\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>Error while signing in</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while signing in</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\t success:\"false\",\n\t message: \"Error while validating the inputs\",\n\terror:{}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found:",
          "content": "HTTP/1.1 404 Not Found\n{\n\t success:\"false\",\n\t message: \"User email not found\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Password-mismatch-Error:",
          "content": "HTTP/1.1 400 Bad Request\n{\n\t success:\"false\",\n\t message: \"Password mismatch\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-User-Error:",
          "content": "HTTP/1.1 400 Bad Request\n{\n\t success:\"false\",\n\t message: \"Invalid user\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Access-Token-Error:",
          "content": "HTTP/1.1 400 Bad Request\n{\n\t success:\"false\",\n\t message: \"Error while generating token\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Refresh-Token-Error:",
          "content": "HTTP/1.1 400 Bad Request\n{\n\t success:\"false\",\n\t message: \"Error while generating refresh token\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 Bad Request\n{\n\t success:\"false\",\n\t message: \"Error while storing tokens\",\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "User"
  },
  {
    "type": "POST",
    "url": "/users/auth/signout",
    "title": "User signout",
    "version": "0.1.0",
    "name": "Signout",
    "group": "User",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Successfully signed out\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while sending request\",\n\terrors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while sending request\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "User"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/users/{userId}/acl/permissions",
    "title": "Update Acl of an user",
    "version": "0.2.0",
    "name": "UpdateACLOfAnUser",
    "group": "User",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "bool",
            "optional": false,
            "field": "isNegotiate",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "bool",
            "optional": false,
            "field": "isBuy",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "bool",
            "optional": false,
            "field": "isSell",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "bool",
            "optional": false,
            "field": "isRequiresAdminApprovalToSell",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "bool",
            "optional": false,
            "field": "isRequiresAdminApprovalToBuy",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "maxTradableQuantity",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "float64",
            "optional": false,
            "field": "maxShipmentValue",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "bool",
            "optional": false,
            "field": "isAllOrders",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "bool",
            "optional": false,
            "field": "isInvoice",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "bool",
            "optional": false,
            "field": "isTeam",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "bool",
            "optional": false,
            "field": "isCounterParties",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "[]Object",
            "optional": false,
            "field": "commoditiesList",
            "description": ""
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>Blockchain account password</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Added permissions successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while reading the files</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "File-Extension-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"File is invalid extension\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "User-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting user by id\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Kyc-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Kyc already verified, you can't update the kyc docs\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the files\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Kyc-Update-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the kyc docs\",\n     errors: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "User"
  },
  {
    "type": "PUT",
    "url": "/users/{userId}/kyc/docs",
    "title": "Update kycdocs",
    "version": "0.2.0",
    "name": "UpdateKycDocs",
    "group": "User",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Number",
            "optional": false,
            "field": "userId",
            "description": "<p>Users unique ID.</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "file",
            "optional": false,
            "field": "proof_of_id",
            "description": "<p>kyc doc of proof_of_id</p>"
          },
          {
            "group": "Request body",
            "type": "file",
            "optional": false,
            "field": "proof_of_address",
            "description": "<p>Kyc doc of proof_of_address</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Updated successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while reading the files</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "File-Extension-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"File is invalid extension\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "User-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting user by id\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Kyc-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Kyc already verified, you can't update the kyc docs\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the files\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Kyc-Update-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the kyc docs\",\n     errors: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "User"
  },
  {
    "type": "PUT",
    "url": "/users/{userId}/kyc-docs/{docType}",
    "title": "Update single kycdoc",
    "version": "0.2.0",
    "name": "UpdateSingeKycDocsbyDocType",
    "group": "User",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": "<p>UserId</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "docType",
            "description": "<p>DocType</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "file",
            "description": "<p>Kycdoc to update</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'updated successfully',\n\tdata:{}\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>UserId not found.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while updating kyc doc.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Invalid-Token-Error:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "UserId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User id requried in route params\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Doc-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Doc type requried in route params\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Kyc-Verified-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Kyc already verified\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Kyc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating kyc doc\",\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/invitation.go",
    "groupTitle": "User"
  },
  {
    "type": "PUT",
    "url": "/users/{userId}/kyc/docs/{docId}",
    "title": "Update single kycdoc",
    "version": "0.2.0",
    "name": "UpdateSingleKycDoc",
    "group": "User",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": "<p>UserId</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "docId",
            "description": "<p>DocId</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "Object",
            "optional": false,
            "field": "file",
            "description": "<p>Kycdoc</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Updated successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while updating kyc doc.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Unauthorized-Error-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     errors:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Kyc-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Kyc already verified\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Kyc-Verified-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"This doc is already verified can't update now\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\",\n     errors: {}\n}",
          "type": "json"
        },
        {
          "title": "Doc-Update-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the kyc doc\",\n     errors: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "User"
  },
  {
    "type": "PUT",
    "url": "/users/{userId}/kyc/docs/all/details",
    "title": "Update kyc details",
    "version": "0.2.0",
    "name": "UpdateUserKycDetails",
    "group": "User",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": "<p>UserId</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "file",
            "optional": false,
            "field": "kycDocs",
            "description": "<p>all kycdocs</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "firstName",
            "description": "<p>First name</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "lastName",
            "description": "<p>Last name</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "address",
            "description": "<p>Address</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "dob",
            "description": "<p>DOB</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "pincode",
            "description": "<p>Pincode</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "country",
            "description": "<p>Country</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "approved_by",
            "description": "<p>ApprovedBy</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: true,\n\tmessage: 'updated successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Invalid token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>UserId not found.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationFailed",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while updating kyc doc.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Unauthorized-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\t success:\"false\",\n\t message: \"Invalid token\",\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "UserId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User id requried in route params\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Failed-Error:",
          "content": "HTTP/1.1 422 ValidationFailed\n{\n\t success:\"false\",\n\t message: \"Validation Failed\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Docs-Required-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Docs are empty\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Missing-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"file is missed\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization\",\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the organization details\",\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/invitation.go",
    "groupTitle": "User"
  },
  {
    "type": "PUT",
    "url": "/users/{userId}/profile/pic",
    "title": "Update user profile pic",
    "version": "0.2.0",
    "name": "UpdateUserProfilePicture",
    "group": "User",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userId",
            "description": "<p>UserId</p>"
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "object",
            "optional": false,
            "field": "file",
            "description": "<p>File</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: 'Profile picture updated successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>UserId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>File invalid extension</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "UserId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"UserId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"File is required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Invalid-Extension-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"File is invalid extesnion\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating user profile picture\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"User not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Request-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You can't update another user profile picture\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/user.go",
    "groupTitle": "User"
  },
  {
    "type": "PUT",
    "url": "/users/auth/otp/verify",
    "title": "Verify OTP",
    "version": "0.2.0",
    "name": "VerifyOTP",
    "group": "User",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "mobile",
            "description": "<p>Mobile number</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "email",
            "description": "<p>Email</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "mobileOtp",
            "description": "<p>Mobile otp</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "emailOtp",
            "description": "<p>Email otp</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess:\"true\",\n\tmessage:'Successfully verified'\n\t\"data\": {\n\t\t\"userId\":\"\",\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IiIsImVtYWlsIjoiYWJjQHlvcG1haWwuY29tIiwiaWQiOiI1YzU3ZDdiYjZjZmFhZWIxODg3ODg1NzgiLCJvaWQiOiI1YzUyYzc1NmM1NWZkNDQ4M2YyMTFlMmYiLCJyb2xlSWQiOiI1YmEzNWJiNzUyOGYxNzkxYjFhMzI5MGEiLCJyb2xlIjoic2VsbGVyIiwiZXhwIjoxNTQ5NzEwNDAyLCJpYXQiOjE1NDk1Mzc2MDIsImlzcyI6IkNvbURFWCJ9.Oy1WSL2i7pwvgf69cxk32MDAXL5-UWb63TfL87gHRaU\",\n    }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while sending otp.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OTP not found.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while validating the inputs\",\n\terror: {}\n}",
          "type": "json"
        },
        {
          "title": "User-Verified-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"User already verified,\n\terror: {}\n}",
          "type": "json"
        },
        {
          "title": "Email-Verified-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Email already verified\",\n\terror: {}\n}",
          "type": "json"
        },
        {
          "title": "Mobile-Verified-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Mobile already verified\",\n\terror: {}\n}",
          "type": "json"
        },
        {
          "title": "Mobile-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\tsuccess:\"false\",\n\tmessage: \"Mobile OTP not found\",\n\terror: {}\n}",
          "type": "json"
        },
        {
          "title": "Mobile-OTP-Expired-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Mobile OTP expired\",\n\terror: {}\n}",
          "type": "json"
        },
        {
          "title": "Email-OTP-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\tsuccess:\"false\",\n\tmessage: \"Email OTP not found\",\n\terror: {}\n}",
          "type": "json"
        },
        {
          "title": "Email-OTP-Expired-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Email OTP expired\",\n\terror: {}\n}",
          "type": "json"
        },
        {
          "title": "Email-OTP-Validation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error occured while validating email and otp\",\n\terror: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while updating the user mobile and email status\",\n\terrors: {}\n}",
          "type": "json"
        },
        {
          "title": "Email-Verification-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while updating email verificaiton OTP\",\n\terror: {}\n}",
          "type": "json"
        },
        {
          "title": "Mobile-Verification-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while updating mobile verificaiton OTP\",\n\terror: {}\n}",
          "type": "json"
        },
        {
          "title": "Token-Generation-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\tsuccess:\"false\",\n\tmessage: \"Error while generating token\",\n\terror: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/user/controllers/auth.go",
    "groupTitle": "User"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/offers/{offerId}/contract/approve",
    "title": "contract doc",
    "version": "0.2.0",
    "name": "ApproveContractDoc",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "offerId",
            "optional": false,
            "field": "OfferId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "status",
            "optional": false,
            "field": "status",
            "description": "<p>Status</p>"
          },
          {
            "group": "Request body",
            "type": "comments",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: 'Document approved successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order contract doc</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OfferId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OfferId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Contract-Doc-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order contract doc not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Contract-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order contract doc\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Doc-Approved-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Doc already approved\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Reject-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Doc already approved, you can't reject the order now\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Doc-Rjected-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Doc already rejected\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Trying to update invalid status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Contract-Offer-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Contract offer not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Contract-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating contract doc status\"\n     error:{}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/kyc/approve",
    "title": "Approve Kycdocs",
    "version": "0.2.0",
    "name": "ApproveKycDocs",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>OrganizationId.</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: \"true\",\n\tmessage: \"Verified successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound.\n{\n\tsuccess: false,\n  message: \"OrganizationId required in route params\"\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Already-Verified-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already verified\"\n     error: {}\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting organization details</p>"
          }
        ]
      }
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/docs/{docId}/approve",
    "title": "Approve obldocs",
    "version": "0.2.0",
    "name": "ApproveOBLDocs",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "docId",
            "optional": false,
            "field": "DocId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "status",
            "optional": false,
            "field": "status",
            "description": "<p>Status</p>"
          },
          {
            "group": "Request body",
            "type": "comments",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: true,\n\tmessage: 'Obl doc status updated successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "DocId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"DocId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Rejected-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order rejected by comdex, you can't approve the doc now\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Trying to update invalid status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Doc-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Doc not found in order\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting doc in order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Obl-Doc-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OBL doc not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the order\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/zones/{zoneId}/organizations/{organizationId}/orders/{orderId}/approve",
    "title": "Approve Order",
    "version": "0.2.0",
    "name": "ApproveOrder",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "orderId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "zoneId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "status",
            "optional": false,
            "field": "status",
            "description": "<p>Status</p>"
          },
          {
            "group": "Request body",
            "type": "comments",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Order approved successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "ZoneId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"ZoneId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order already listed for trade\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Settlement-Doc-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already uploaded the settlement document\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Settlement-Doc-Approved-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Settlement docs are already approved\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Cso-Settlement-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"only cso can upload settlement doc\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Obl-Docs-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Obl docs not verified\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Contract-Doc-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Contract doc not verified\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Invalid order status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Status-Action-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the status action\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/approve",
    "title": "Approve Organization",
    "version": "0.2.0",
    "name": "ApproveOrganization",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: 'Successfully Approved'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating user</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting organization</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"You are not authorized to approve this organization\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Account-Verified-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Account already verified\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "UserId-Not-Found-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You don't have user Id\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Approve-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while approving the organization\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "User-Not-Found-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"User not found while approving the organization\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the user status in approving the organization\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/kyc/docs/{docId}/approve",
    "title": "Approve Kycdoc",
    "version": "0.2.0",
    "name": "ApproveSingleKycDoc",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>OrganizationId</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "docId",
            "description": "<p>DocId</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: 'Approved successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while approving kyc doc</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "DocId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"DocId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Organization has rejected, now you can't approve this doc\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Document-Verified-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Document already verified\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Kyc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Organization kyc doc not found\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"\"Error while updating the organization\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/buyer/settlement/doc",
    "title": "Buyer uploads settlemt doc",
    "version": "0.2.0",
    "name": "BuyerUploadSettlementDoc",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "file",
            "optional": false,
            "field": "buyerUploadSettlementDoc",
            "description": "<p>File to upload</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Settlement docs updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while decoding the file</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"File is required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Decoed-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Not-Buyer-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You are not a buyer for this order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Comdex didn't sign settlement docs\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Seller-Signed-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Seller already signed on settlement doc,you can't update now\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Settlement-Signed-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Settlement doc already signed by the comdex\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found while updating settlement doc\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Settlement-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the settlement doc\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/cbo/confirm",
    "title": "Cbo confirms transaction receipt",
    "version": "0.2.0",
    "name": "CboConfirmTransactionWithAttachment",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "file",
            "optional": false,
            "field": "file",
            "description": "<p>File</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: 'Updated successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"File is required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-State-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in a state to update\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Authorization-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Not authroized to confirm transaction\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Transaction-Confirmed-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already confirmed the transaction\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Decoed-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating order details\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/zones/{zoneId}/orders/{orderId}/comdex/settlement/doc/approve",
    "title": "Comdex approves settlemt doc",
    "version": "0.2.0",
    "name": "ComdexApprovesSettleMentDoc",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "zoneId",
            "optional": false,
            "field": "zoneId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "file",
            "optional": false,
            "field": "file",
            "description": "<p>File</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: 'Settlement docs approved successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>ZoneId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "ZoneId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"ZoneId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"File is required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "order-Escrow-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in main escrow\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Settlement-Approved-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Already approved the settlement docs\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Buyer-Settlement-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Buyer didn't sign the settlement doc\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Seller-Settlement-Doc-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Seller didn't sign the settlement doc\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Comdex-Settlement-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Comdex didn't sign the document\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Comdex-User-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You are not a comdex user for this order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Proof-Of-Fiat-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"CBO didn't upload the proof of fiat\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Obl-Docs-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Buyer didn't received the obl docs\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Obl-Docs-Confirm-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You haven't confirmed the obl docs\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found while updating settlement doc\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Settlement-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the settlement doc\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/comdex/buyers/status",
    "title": "CBO approves order",
    "version": "0.2.0",
    "name": "ComdexBuyerOfficeOrderStatus",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "status",
            "description": "<p>Status</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: 'Status updated successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in a state to update\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Unauthorized-Error-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\tsuccess:\"false\",\n\tmessage: \"Not authorized to approve this order\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Trying to update invalid status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the order status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/comdex/seller/status",
    "title": "CSO approves order",
    "version": "0.2.0",
    "name": "ComdexSellerOfficeOrderStatus",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "status",
            "description": "<p>Status</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: 'Approved successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in a state to update\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Unauthorized-Error-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\tsuccess:\"false\",\n\tmessage: \"Not authorized to approve this order\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Trying to update invalid order status\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the order status\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/zones/{zoneId}/orders/{orderId}/comdex/settlement/doc/reupload",
    "title": "Comdex updates settlemt doc",
    "version": "0.2.0",
    "name": "ComdexUpdatesSettleMentDoc",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "zoneId",
            "optional": false,
            "field": "zoneId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "file",
            "optional": false,
            "field": "file",
            "description": "<p>File</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: 'Settlement document updated successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>ZoneId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "ZoneId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"ZoneId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"File is required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Escrow-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in main escrow\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Settlement-Approved-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Settlement docs are already approved\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found while updating settlement document\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Settlement-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the settlement doc\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/zones/{zoneId}/orders/{orderId}/comdex/settlement/doc",
    "title": "Comdex uploads settlemt doc",
    "version": "0.2.0",
    "name": "ComdexUploadsSettleMentDoc",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "zoneId",
            "optional": false,
            "field": "zoneId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "file",
            "optional": false,
            "field": "file",
            "description": "<p>File</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: 'Settlement document updated successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>ZoneId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "ZoneId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"ZoneId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"File is required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Main-Escrow-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in main escrow\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Settlement-Approved-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Settlement docs are already approved\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found while updating settlement document\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Settlement-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the settlement doc\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/courier/obl/{from}/{to}",
    "title": "Courier from seller to buyer",
    "version": "0.2.0",
    "name": "CourierFromSellerToBuyer",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Sent successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrderId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occurred while fetching order</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occurred while fetching order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Settlement-Doc-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You haven't uploaded the settlement docr\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Send-Docs-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Directly you can't send docs to buyer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Obl-Sent-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Obl docs already sent\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while updating order details\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/approve",
    "title": "Organization approves order",
    "version": "0.2.0",
    "name": "OrganizationApprovesOrder",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Order status updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Invalid-Order-Status-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is not in a state to update\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Verified-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Order is already verified by organization super admin\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Status-Action-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the status action\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/reject",
    "title": "Reject Order",
    "version": "0.2.0",
    "name": "RejectOrder",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Order updated successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting order details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Order-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting order details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Status-Action-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating status action\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Reject-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while rejecting the order\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/reject",
    "title": "Reject Organiztaion",
    "version": "0.2.0",
    "name": "RejectOrganization",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: 'Organization has rejected successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating user</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting organization</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"You are not authorized to approve this organization\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Rejected-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Organization already rejected\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Update-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the organization\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/kyc/docs/{docId}/reject",
    "title": "Reject kycdoc",
    "version": "0.2.0",
    "name": "RejectSingelKycDoc",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "docId",
            "optional": false,
            "field": "DocId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "status",
            "description": "<p>Status</p>"
          },
          {
            "group": "Request body",
            "type": "string",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Doc rejected successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while getting organization details</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "DocId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"DocId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\tsuccess:\"false\",\n\tmessage: \"Validation failed\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Organization-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while getting organization details\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Kyc-Verified-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Kyc alredy verified\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Document-Verified-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Document already verified\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Doc-Rejected-Error:",
          "content": "HTTP/1.1 400 BadRequests\n{\n\t success:\"false\",\n\t message: \"Doc already rejected\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Kyc-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Organization kyc doc not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the organization\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/seller/settlement/doc/reupload",
    "title": "Seller updates settlemt doc",
    "version": "0.2.0",
    "name": "SellerUpdatesSettlementDoc",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "file",
            "optional": false,
            "field": "sellerUploadSettlementDoc",
            "description": "<p>File to upload</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Settlement doc updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while decoding the file</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OrganizationId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"File is required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Organization-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"you are not a seller organization for this order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Settlement-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You haven't uploaded any settlement doc before\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Comdex-Settlement-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Settlement doc already signed by the comdex\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Comdex-Signed-Settlement-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Settlement doc already signed by the comdex\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found while updating settlement doc\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Settlement-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the settlement doc\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/orders/{orderId}/seller/settlement/doc",
    "title": "Seller uploads settlemt doc",
    "version": "0.2.0",
    "name": "SellerUploadSettlementDoc",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "organizationId",
            "optional": false,
            "field": "OrganizationId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request formdata": [
          {
            "group": "Request formdata",
            "type": "file",
            "optional": false,
            "field": "sellerUploadSettlementDoc",
            "description": "<p>File to upload</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Settlement docs updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OrganizationId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while decoding the file</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrganizationId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"File is required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "NotFound-Error-Response:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Seller-Organization-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"your are not a seller organization for this order\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Comdex-Settlement-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Comdex didn't sign settlement docs\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Already-Uploaded-Settlement-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"You have already uploaded the settlement doc\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Already-Signed-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Settlement doc already signed by the comdex\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Buyer-Settlement-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Buyer didn't upload the settlement doc\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Buyer-Offer-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Buyer didn't accept the offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Order-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Order not found while updating settlement doc\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Settlement-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the settlement doc\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/orders.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/orders/{orderId}/offers/{offerId}/contract/document",
    "title": "Update buyer contract document",
    "version": "0.2.0",
    "name": "UpdateBuyerContractDoc",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "offerId",
            "optional": false,
            "field": "OfferId",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "orderId",
            "optional": false,
            "field": "OrderId",
            "description": ""
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "file",
            "optional": false,
            "field": "contractDoc",
            "description": "<p>File to update</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tsuccess: \"true\",\n\tmessage: \"Contract document updated successfully\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "Unauthorized",
            "description": "<p>Error while validating token</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "NotFound",
            "description": "<p>OfferId required</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error occured while decoding the file</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Error-Response:",
          "content": "HTTP/1.1 401 TokenError\n{\n\tsuccess:\"false\",\n\tmessage: \"Invalid token\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "OfferId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OfferId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "OrderId-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"OrderId required in route params\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"File is required\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "File-Decode-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while decoding the file\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Offer-Not-Found-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Offer not found in order\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Get-Offer-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error occured while getting offer\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Contract-Documnet-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Contract document not in a state to update\"\n     error: {}\n}",
          "type": "json"
        },
        {
          "title": "Unauthorized-Error-Response:",
          "content": "HTTP/1.1 401 Unauthorized\n{\n\tsuccess:\"false\",\n\tmessage: \"Not authorized to update contract document\",\n\terror:{}\n\n}",
          "type": "json"
        },
        {
          "title": "Contract-Doc-Error:",
          "content": "HTTP/1.1 404 NotFound\n{\n\t success:\"false\",\n\t message: \"Can't update contract document now\"\n     error:{}\n}",
          "type": "json"
        },
        {
          "title": "Update-Contract-Doc-Error:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while updating the contract document\"\n     error: {}\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/orders/controllers/offers.go",
    "groupTitle": "comdex"
  },
  {
    "type": "PUT",
    "url": "/organizations/{organizationId}/status",
    "title": "Approve Organiztaion",
    "version": "0.1.0",
    "name": "UpdateOrgStatusByComdex",
    "group": "comdex",
    "header": {
      "fields": {
        "Header": [
          {
            "group": "Header",
            "type": "String",
            "optional": false,
            "field": "Authorization",
            "description": "<p>Bearer + token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Token-Example:",
          "content": "{\n\t\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sLnRcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE1MjM0MjcwMDAsImV4cCI6MTUyMzQzNzgwMCwibmJmIjoxNTIzNDI3MDAwLCJqdGkiOiJxZDNJa1JGOFdrVWVWQk50Iiwic3ViIjo3LCJwcnYiOiI4N2UwYWYxZWY5ZmQxNTgxMmZkZWM5NzE1M2ExNGUwYjA0NzU0NmFhIiwidXNlciI6eyJpZCI6N319.oilxJtv04JbhmBztLWNbweXgq7tuHZO9ShwFEGVKskg\"\n}",
          "type": "json"
        }
      ]
    },
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "status",
            "optional": false,
            "field": "status",
            "description": "<p>Status</p>"
          },
          {
            "group": "Request body",
            "type": "comments",
            "optional": false,
            "field": "comments",
            "description": "<p>Comments</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Successfully updated'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Organization not found</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Organization not found\"\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Organization not found\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while approving the organization\"\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while approving the organization\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\t success:\"false\",\n\t message: \"Error while validating inputs\"\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while validating inputs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/comdex/controller/comdex.go",
    "groupTitle": "comdex"
  },
  {
    "type": "POST",
    "url": "/zones",
    "title": "Create Zone",
    "version": "0.1.0",
    "name": "CreateZone",
    "group": "godmode",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "organizationId",
            "description": "<p>Unique user id.</p>"
          },
          {
            "group": "Parameter",
            "type": "array",
            "optional": false,
            "field": "Organizations",
            "description": "<p>Array of organization objects</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "Name",
            "description": "<p>Zone Name</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "Code",
            "description": "<p>Zone Code</p>"
          },
          {
            "group": "Parameter",
            "type": "array",
            "optional": false,
            "field": "Authorizers",
            "description": "<p>Array of Authorizer Type</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "Currency",
            "description": "<p>Currency accepted in the zone</p>"
          },
          {
            "group": "Parameter",
            "type": "array",
            "optional": false,
            "field": "KYCDocType",
            "description": "<p>DocType required for kyc documents</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "Country",
            "description": "<p>Country full name</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "Continent",
            "description": "<p>Continent for the zone country</p>"
          }
        ]
      }
    },
    "success": {
      "examples": [
        {
          "title": "Success-Response:",
          "content": "HTTP/1.1 200 OK\n{\n\tstatus: true,\n\tmessage: 'Created Zone Successfully'\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "BadRequest",
            "description": "<p>Error while uploading kyc docs.</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ValidationError",
            "description": "<p>Error while validating inputs</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Bad-Error-Response:",
          "content": "HTTP/1.1 400 BadRequest\n{\n\t success:\"false\",\n\t message: \"Error while uploading kyc docs\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while uploading kyc docs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        },
        {
          "title": "Validation-Error-Response:",
          "content": "HTTP/1.1 422 ValidationError\n{\n\t success:\"false\",\n\t message: \"Error while validating the input\",\n     errors: [\n\t\t\t{\n\t\t\t\tmessage: \"Error while validating inputs\"\n\t\t\t}\n\t\t]\n}",
          "type": "json"
        }
      ]
    },
    "filename": "server/modules/godmode/controllers/godmode.go",
    "groupTitle": "godmode"
  }
]
